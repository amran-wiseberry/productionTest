{"version":3,"sources":["app/partials/form/singleToggleButton/SingleToggleButton.jsx","app/partials/form/FileInputRef.jsx","app/modules/diary/partials/modals/appointment/type/TypeList.jsx","app/modules/diary/partials/modals/appointment/partials/AppointmentAlerts.jsx","app/partials/component/email/Email.jsx","app/modules/diary/partials/modals/previewEmailSms/type/PreviewEmail.jsx","app/partials/component/sms/MobileView.jsx","app/partials/form/TextAreaEmoji.jsx","app/partials/component/sms/Sms.jsx","app/modules/diary/partials/modals/previewEmailSms/type/PreviewSms.jsx","app/modules/diary/partials/modals/previewEmailSms/PreviewEmailSms.jsx","app/modules/diary/partials/modals/appointment/Appointment.jsx","app/_helpers/_hooks/useComponentVisible.jsx","app/partials/component/speedDial/SocialShare.jsx","app/modules/news/pages/socialFeeds/SocialFeedCard.js","app/modules/listings/partials/singleListingList/listingDetails/note/SLnotes.jsx","app/modules/listings/partials/singleListingList/listingDetails/note/SLnoteForm.jsx","app/modules/listings/partials/singleListingList/listingDetails/contacts/SLcontacts.jsx","app/modules/listings/partials/singleListingList/listingDetails/features/SLfeatures.jsx","app/modules/listings/modals/adjustPrice/AdjustPrice.jsx","app/partials/form/partials/listingDetailsForm/ListingDetailsForm.jsx","app/modules/listings/partials/singleListingList/listingDetails/details/SLdetails.jsx","app/modules/listings/modals/addReport/AddReport.jsx","app/partials/form/partials/FormReports.jsx","app/modules/listings/partials/singleListingList/listingDetails/reports/SLreports.jsx","app/modules/listings/partials/singleListingList/listingDetails/files/SLfiles.jsx","app/modules/listings/partials/singleListingList/listingDetails/ListingDetails.jsx","app/modules/listings/partials/singleListingList/checklist/FormCheckList.jsx","app/modules/listings/modals/checkListSettings/CheckListSettingsForm.jsx","app/modules/listings/modals/checkListSettings/CheckListSettings.jsx","app/modules/listings/partials/singleListingList/advertisingSchedule/AdvertisingSEdit.jsx","app/modules/listings/partials/singleListingList/advertisingSchedule/AdvertisingSView.jsx","app/partials/table/DynamicTable.jsx","app/modules/listings/partials/singleListingList/library/Library.jsx","app/modules/listings/modals/portalsForUpload/PortalForUploads.jsx","app/modules/listings/partials/singleListingList/PropertyBasic.jsx","app/modules/listings/partials/singleListingList/listingDetails/ListingDetailsFrom.jsx","app/modules/listings/partials/singleListingList/matchedBuyers/SLmatchedBuyersDrawer.jsx","app/modules/listings/partials/singleListingList/matchedBuyers/SLmatchedBuyersTable.jsx","app/modules/listings/partials/singleListingList/matchedBuyers/SLmatchedBuyers.jsx","app/modules/listings/partials/singleListingList/matchedBuyers/SLmatchedBuyersFrom.jsx","app/modules/listings/partials/singleListingList/buyerEnquiries/SLbuyerEnquiriesTable.jsx","app/modules/listings/partials/singleListingList/buyerEnquiries/SLbuyerEnquiriesDrawer.jsx","app/modules/listings/partials/singleListingList/buyerEnquiries/SLbuyerEnquiries.jsx","app/modules/listings/partials/singleListingList/buyerEnquiries/SLbuyerEnquiriesFrom.jsx","app/modules/listings/partials/singleListingList/SingleListingForm.jsx","app/partials/form/dynamicForm/DynamicForm.jsx","app/modules/listings/modals/salesAdviceSettings/SalesAdviceSettings.jsx","app/modules/listings/partials/singleListingList/salesAdvice/SLsalesAdvice.jsx","app/modules/listings/partials/singleListingList/salesAdvice/SLsalesAdviceFrom.jsx","app/modules/listings/partials/singleListingList/viewedBuyers/SLviewedBuyersDrawer.jsx","app/modules/listings/partials/singleListingList/viewedBuyers/SLviewedBuyersTable.jsx","app/modules/listings/partials/singleListingList/viewedBuyers/SLviewedBuyers.jsx","app/modules/listings/partials/singleListingList/viewedBuyers/SLviewedBuyersFrom.jsx","app/modules/listings/partials/singleListingList/SingleListingList.jsx","app/modules/listings/pages/SingleListing.jsx"],"names":["SingleToggleButton","input","label","className","value","name","icon","positiveIcon","positiveClass","classes","classNames","toggle","type","checked","onChange","e","console","log","handleAlignment","currentTarget","defaultProps","centralDivStyle","textAlign","FileInputRef","props","disabled","inputFileRef","useState","files","setFiles","useDropzone","accept","multiple","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","noClick","noKeyboard","getRootProps","getInputProps","open","useEffect","forEach","revokeObjectURL","style","ref","length","onClick","buyer","lazy","general","listing","marketReview","oneToOne","openHome","rental","rentalOpenHome","sellerVisit","tenant","virtualBuyer","appointmentType","virtualListing","TypeList","Component","fallback","Spinner","AppointmentAlerts","title","Item","left","right","Row","Col","Field","ucFirst","spaceRemove","component","class","Email","PreviewEmail","MobileView","sms","split","item","key","id","TextAreaEmoji","classnames","rows","placeholder","meta","touched","error","edit","wrapperClassName","editorClassName","onEditorStateChange","draftToMarkdown","convertToRaw","getCurrentContent","toolbar","options","Form","Control","Feedback","selector","formValueSelector","connect","state","initialValues","reduxForm","form","enableReinitialize","handleSubmit","pristine","reset","submitting","invalid","onSubmit","ThemeHeader","ThemeButton","closeModal","lg","TextAreaEmoj","PreviewSms","PreviewEmailSmsList","PreviewEmailSms","React","setComponent","xs","List","text","index","ListItem","cuid","clsx","active","stringCompare","validate","combineValidators","isRequired","message","category","description","composeValidators","hasLengthGreaterThan","city","venue","checkbox","startTime","endTime","location","onHide","modalShow","setModalShow","handleModal","useCallback","onFormSubmit","values","myBuyerOptions","DefaultModal","size","centered","show","md","isMulti","MultiSelect","showBottom","defaultValue","TextInput","DateInput","TextArea","row","param","renderSwitch","useComponentVisible","initialIsVisible","isComponentVisible","setIsComponentVisible","useRef","handleHideDropdown","event","handleClickOutside","current","contains","target","document","addEventListener","removeEventListener","SocialShare","setShow","setTarget","popRef","Overlay","container","placement","containerPadding","Popover","Content","FacebookShareButton","url","quote","hashtag","FacebookIcon","round","TwitterShareButton","hashtags","TwitterIcon","useStyles","makeStyles","theme","card","overflow","marginBottom","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","SocialFeedCard","data","handleLikeClick","handlePostApprove","handlePostDelete","userInfo","useSelector","auth","user","Card","CardHeader","Avatar","alt","created_by","first_name","src","profile_picture","last_name","subheader","status","moment","created_at","format","action","Carousel","interval","images","i","CardContent","Typography","variant","color","CardActions","disableSpacing","likes","SLnotes","fields","noteType","setNoteType","handleNoteType","NoteForm","addNote","push","ButtonGroup","radio","idx","ToggleButton","NoteLists","SLnoteForm","FieldArray","SLcontacts","deleteItem","setDeleteItem","ContactForm","prev","FormContacts","SLfeatures","FormFeatures","price_from","price_to","reason","price_view","adjustPrice","selectedValues","ListingDetailsForm","submitFailed","get","public_view","removeAll","handleAdjustPrice","SLdetails","reports","getListingReportById","then","initialize","catch","Label","ToggleSwitch","DragAndDrop","setOpen","Fragment","RadioInput","report","isReportUploaded","date","preparedBy","requestedBy","ins","rjp","note","stopPropagation","handleCollapse","aria-hidden","colspan","FormReports","setId","getListingDetailsById","handleRemove","isSelected","remove","getElementById","handleClose","Table","striped","bordered","hover","all","getAll","selected","handleClick","SLReports","SLfiles","TabPanel","children","other","role","hidden","aria-labelledby","a11yProps","root","flexGrow","palette","background","paper","button","margin","spacing","display","rightIcon","ListingDetails","setValue","AppBar","position","Tabs","scrollButtons","newValue","TabIndicatorProps","Tab","ScrollableDiv","SLreports","renderHobbies","colSpan","IconButton","obj","val","aria-label","priority","task","subTask","allocation","Handle","subtask","CheckListSettingsForm","getListingCheckListSetting","required","features","comments","preference","landSize","landType","SortableTable","getFormValues","setType","closeMenuOnSelect","getItemStyle","forwardRef","indeterminate","rest","defaultRef","resolvedRef","Checkbox","isDragging","draggableStyle","userSelect","memo","quotes","Quote","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","advertisingItem","price","appBar","flexDirection","justifyContent","PropertyBasic","handleEdit","toAbsoluteUrl","isTwoRow","SingleAddress","members","setEdit","buyerActivityOptions","ratingOptions","passions","dns","marked","errors","username","email","test","age","isNaN","Number","Group","as","sm","timeIntervals","dateFormat","ToggleButtons","labelOne","labelTwo","SLmatchedBuyersTable","handleChange","items","setItems","getAllMail","columns","useMemo","Header","accessor","Cell","cell","original","datas","Chip","DynamicTableEdit","isEditable","update","handleRowClick","easing","sharp","leavingScreen","appBarShift","width","easeOut","enteringScreen","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","content","breakpoints","down","contentShift","prospects","useTheme","onSubmitDrawerForm","a","Drawer","anchor","direction","Divider","formId","xl","SLbuyerEnquiriesTable","startDate","setStartDate","endDate","setEndDate","fixedHeight","formName","cloneElement","SLsalesAdvice","contactsUpdate","setContactsUpdate","modalShowSetting","setModalShowSetting","selectActionOptions","labelTrue","labelFalse","SLviewedBuyersTable","SingleListingList","pageComponent","menuButton","Vhide","visibility","whiteSpace","drawerOpen","drawerClose","overflowX","toolbarClose","closeContent","CssBaseline","edge"],"mappings":"kGAAA,0EAGaA,EAAqB,SAAC,GAAiF,IAA/EC,EAA8E,EAA9EA,MAAOC,EAAuE,EAAvEA,MAAcC,GAAyD,EAAhEC,MAAgE,EAAzDD,WAAWE,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,cAMnFC,EAAUH,EAAO,YAAc,oBAC/BI,EAAaJ,EAAO,sBAAwBH,EAAY,IAAMK,EACtE,OACI,kBAAC,IAAD,CAAaG,QAAM,EAACR,UAAU,QAC9B,kBAAC,IAAD,CACEE,KAAMA,EACNO,KAAK,WACLT,UAAWO,EAAaD,EACxBI,WAAc,OAALZ,QAAK,IAALA,OAAA,EAAAA,EAAOG,SAAP,OAAeH,QAAf,IAAeA,OAAf,EAAeA,EAAOG,OAC/BU,SAAU,SAACC,GAAD,OAbQ,SAACA,GACrBC,QAAQC,IAAIF,GACZd,EAAMa,SAASC,GAWIG,CAAgBH,EAAEI,cAAcN,WAE/CN,IAA6B,OAALN,QAAK,IAALA,OAAA,EAAAA,EAAOG,OAAQG,EAAxBL,KAO3BF,EAAmBoB,aAAe,CAChCV,WAAY,qB,uICtBRW,EAAkB,CACtBC,UAAW,UAGAC,EAAe,SAACC,GAAW,IAE3BV,EAIPU,EAJFvB,MAASa,SACTW,EAGED,EAHFC,SACAC,EAEEF,EAFFE,aACApB,EACEkB,EADFlB,KALmC,EAQXqB,mBAAS,IARE,mBAQ9BC,EAR8B,KAQvBC,EARuB,OASwBC,YAAY,CACvEC,OAAQ,UACRC,UAAU,EACVC,OAAQ,SAACC,GACPL,EACEK,EAAcC,KAAI,SAACC,GAAD,OAChBC,OAAOC,OAAOF,EAAM,CAClBG,QAASC,IAAIC,gBAAgBL,SAInCtB,EAASoB,IAEXQ,SAAS,EACTC,YAAY,IAdNC,EAT6B,EAS7BA,aAAcC,EATe,EASfA,cAAeC,EATA,EASAA,KAAMZ,EATN,EASMA,cAyB3C,OARAa,qBACE,kBAAM,WAEJnB,EAAMoB,SAAQ,SAACZ,GAAD,OAAUI,IAAIS,gBAAgBb,EAAKG,eAEnD,CAACX,IAGCH,EACK,MAEXT,QAAQC,IAAIiB,GAER,kBAAC,WAAD,KACE,yCAASU,IAAT,CAAyBM,MAAO7B,IAC9B,yCAAO8B,IAAKzB,GAAkBmB,MAC9B,kBAAC,IAAD,CAAa1C,UAAW+B,EAAckB,OAAS,EAAI,oBAAqB,GAAI9C,MAAI,EAAC+C,QAASP,GACvF,IACAxC,Q,kMClDLgD,EAAQC,gBAAK,kBAAM,mCACnBC,EAAUD,gBAAK,kBAAM,mCACrBE,EAAUF,gBAAK,kBAAM,mCACrBG,EAAeH,gBAAK,kBAAM,mCAC1BI,EAAWJ,gBAAK,kBAAM,mCACtBK,EAAWL,gBAAK,kBAAM,mCACtBM,EAASN,gBAAK,kBAAM,mCACpBO,EAAiBP,gBAAK,kBAAM,mCAC5BQ,EAAcR,gBAAK,kBAAM,mCACzBS,EAAST,gBAAK,kBAAM,mCACpBU,EAAeV,gBAAK,kBAAM,mCAG1BW,EAAkB,CACtBZ,QACAE,UACAC,UACAC,eACAC,WACAC,WACAE,iBACAD,SACAE,cACAC,SACAG,eAbqBZ,gBAAK,kBAAM,mCAchCU,gBAiBaG,EAdE,SAAC5C,GAChBR,QAAQC,IAAIO,GACZ,IAAM6C,EAAYH,EAAgB1C,EAAMZ,KAAKR,OACzC8D,EAAgB1C,EAAMZ,KAAKR,OAC3B8D,EAAe,QACnB,OACE,kBAAC,WAAD,KACE,kBAAC,WAAD,CAAUI,SAAU,kBAACC,EAAA,EAAD,OAClB,kBAACF,EAAc7C,M,kBCeRgD,EA9CW,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACxB,OACI,kBAAC,WAAD,KACgB,kBAACC,EAAA,EAAD,CACVC,KAAMF,EACNG,MACE,kBAAC,WAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE1E,KAAI,gBAAW2E,YAAQC,YAAYR,IAA/B,WACJS,UAAWlF,IACXM,MAAI,EACJJ,MAAO,uBAAGiF,MAAM,sBAElB,kBAACJ,EAAA,EAAD,CACE1E,KAAI,gBAAW2E,YAAQC,YAAYR,IAA/B,YACJS,UAAWlF,IACXM,MAAI,EACJJ,MAAO,uBAAGiF,MAAM,yBAGpB,kBAACL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE1E,KAAI,gBAAW2E,YAAQC,YAAYR,IAA/B,WACJS,UAAWlF,IACXM,MAAI,EACJJ,MAAO,uBAAGiF,MAAM,sBAElB,kBAACJ,EAAA,EAAD,CACE1E,KAAI,gBAAW2E,YAAQC,YAAYR,IAA/B,YACJS,UAAWlF,IACXM,MAAI,EACJJ,MAAO,uBAAGiF,MAAM,yBAGpB,kBAACL,EAAA,EAAD,Y,oDCnCLM,G,wBARD,WACV,OACI,kBAAC,WAAD,QCOOC,EARM,WACjB,OACI,kBAAC,WAAD,KACI,kBAAC,EAAD,QC6CGC,G,QAhDI,SAAC,GAAW,IAAVC,EAAS,EAATA,IAEjB,OADFvE,QAAQC,IAAIsE,GAEP,kBAAC,WAAD,KACI,6BACX,yBAAKJ,MAAM,UACT,yBAAKA,MAAM,OACT,wBAAIA,MAAM,SACV,wBAAIA,MAAM,UAEd,yBAAKA,MAAM,aACT,yBAAKA,MAAM,UACT,yBAAKA,MAAM,WACT,yBAAKA,MAAM,OAAX,UACA,yBAAKA,MAAM,SACX,yBAAKA,MAAM,QAAX,WACA,yBAAKA,MAAM,SAEb,yBAAKA,MAAM,aACT,yBAAKA,MAAM,QAAX,IAAmB,uBAAGA,MAAM,uBAExB,0CACA,yBAAKA,MAAM,QAAX,OAIN,yBAAKA,MAAM,gBACX,6BAAK,0BAAMA,MAAM,+BAAZ,WAA4CI,QAA5C,IAA4CA,OAA5C,EAA4CA,EAAKC,MAAM,MAAMrD,KAAI,SAACsD,EAAMC,GAC/E,OAAO,kBAAC,WAAD,CAAUA,IAAKA,GAAMD,EAAK,oCAM/B,yBAAKN,MAAM,QACT,yBAAKA,MAAM,aACT,yBAAKA,MAAM,aACX,2BAAOvE,KAAK,OAAO+E,GAAG,WACtB,yBAAKR,MAAM,eAAX,WAIN,yBAAKA,MAAM,c,8CCtCPS,EAAgB,SAAC,GAOhB,IANL3F,EAMI,EANJA,MAEA4F,GAII,EALJC,KAKI,EAJJD,YAII,KAHJE,YAGI,EAFJC,MAAQC,EAEJ,EAFIA,QAASC,EAEb,EAFaA,MACjBC,EACI,EADJA,KAIA,OADAnF,QAAQC,IAAIhB,GAEV,kBAAC,WAAD,KAEGkG,EACC,kBAAC,WAAD,KACG,yBAAKhG,UAAW,wBAA0B0F,GAC5C,kBAAC,SAAD,CACCO,iBAAiB,wBACjBC,gBAAgB,uBAChBC,oBAAqB,SAACvF,GAAD,OAAOd,EAAMa,SAASyF,IAAgBC,uBAAazF,EAAE0F,wBAC1EC,QAAS,CAACC,QAAS,CAAC,aAGpB,kBAACC,EAAA,EAAKC,QAAQC,SAAd,CAAuBlG,KAAK,WACzBqF,GAAWC,GAAS,8BAAOA,KAIhC,kBAAC,WAAD,KACE,kBAACrB,EAAA,EAAD,KACE,kCAAI5E,QAAJ,IAAIA,OAAJ,EAAIA,EAAOG,WAOvBwF,EAAcxE,aAAe,CAC3B0E,KAAM,IACNK,MAAM,GAGOP,QCoCTmB,EAAWC,YAAkB,cAelBC,gBAdA,SAACC,GAEhB,MAAO,CACL3B,IAFUwB,EAASG,EAAO,OAG1BC,cAAe,MAhCH,GA0CCF,CAIbG,YAAU,CAAEC,KAAM,aAAcC,oBAAoB,GAApDF,EA7FQ,SAAC5F,GACTR,QAAQC,IAAIO,GADO,IAEb+F,EAA2D/F,EAA3D+F,aAAqBC,GAAsChG,EAA7CiG,MAA6CjG,EAAtCgG,UAAUE,EAA4BlG,EAA5BkG,WAAYC,EAAgBnG,EAAhBmG,QAASpC,EAAO/D,EAAP+D,IAC5D,OACE,kBAAC,WAAD,KACE,yBAAKpF,UAAU,kBACb,0BAAMA,UAAU,WAAWyH,SAAUL,GACnC,kBAACM,EAAA,EAAD,CACEjD,MACE,kBAAC,WAAD,KACE,yBAAKzE,UAAU,QACb,kBAAC2H,EAAA,EAAD,CAAazE,QAAS7B,EAAMuG,YAA5B,WAEF,yBAAK5H,UAAU,QACb,kBAAC2H,EAAA,EAAD,CACErG,SAAUkG,GAAWH,GAAYE,EACjC9G,KAAK,SACLF,WAAW,6BAHb,YAYR,kBAACmE,EAAA,EAAD,CAAK1E,UAAU,QACX,kBAAC2E,EAAA,EAAD,CAAKkD,GAAI,GACT,kBAACjD,EAAA,EAAD,CACC1E,KAAK,MACJO,KAAK,WACLkF,KAAK,IACLZ,UAAW+C,EACXlC,YAAY,6BAGd,kBAACjB,EAAA,EAAD,CAAKkD,GAAI,GAET,kBAAC,EAAD,CAAYzC,IAAKA,aCtChB2C,GARI,WACf,OACI,kBAAC,WAAD,KACI,kBAAC,GAAD,QCMZ,SAASC,GAAT,GAA6C,IAAdjD,EAAa,EAAbA,UAE7B,OADAlE,QAAQC,IAAIiE,GACJA,GACN,IAAK,2CAEL,IAAK,0CACH,OAAO,kBAAC,EAAD,MACT,IAAK,qCAEL,IAAK,oCACH,OAAO,kBAAC,GAAD,MACT,QACE,MAAO,IAIb,IAuCekD,GAvCS,SAAC5G,GAAW,IAAD,EACC6G,IAAM1G,SAAS,4CADhB,mBAC1BuD,EAD0B,KACfoD,EADe,KAKjC,OACE,kBAAC,WAAD,KACE,kBAACzD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKyD,GAAI,EAAGpI,UAAU,QACpB,yBAAKgF,MAAM,qDACT,6BACE,wBAAIhF,UAAU,aAAd,4BAEF,kBAACqI,EAAA,EAAD,CAAMrI,UAAU,eACb,CACC,2CACA,0CACA,qCACA,qCACAgC,KAAI,SAACsG,EAAMC,GAAP,OACJ,kBAACC,EAAA,EAAD,CACEtF,QAAS,WAlBvBiF,EAkBmDG,IACrC/C,IAAKkD,MACLzI,UAAW0I,kBAAK,CAAEC,OAAQC,YAAcN,EAAMvD,MAE7CuD,SAMX,kBAAC3D,EAAA,EAAD,CAAKyD,GAAI,GACP,kBAACJ,GAAD,CAAqBjD,UAAWA,QCrCpC8D,GAAWC,4BAAkB,CACjCxE,MAAOyE,qBAAW,CAAEC,QAAS,gCAC7BC,SAAUF,qBAAW,CAAEC,QAAS,6BAChCE,YAAaC,4BACXJ,qBAAW,CAAEC,QAAS,+BACtBI,+BAAqB,EAArBA,CAAwB,CACtBJ,QAAS,kDAHAG,GAMbE,KAAMN,qBAAW,QACjBO,MAAOP,qBAAW,SAClBQ,SAAUR,qBAAW,YACrBS,UAAWT,qBAAW,QACtBU,QAASV,qBAAW,UAwPhBnC,GAAWC,YAAkB,kBAiBpBC,iBAfE,SAACC,GAGhB,MAAO,CACL2C,SAHe9C,GAASG,EAAO,YAI/BtG,KAHWmG,GAASG,EAAO,QAI3BC,cAAe,CACbvG,KAAM,CACJV,MAAO,UACPE,MAAO,WAETyJ,SAAU,WAjBA,GAqBD5C,CAGbG,YAAU,CAAEC,KAAM,iBAAkB2B,aAApC5B,EAzQkB,SAAC5F,GAAW,IAAD,MACrB+F,EAAwD/F,EAAxD+F,aAAcC,EAA0ChG,EAA1CgG,SAAUE,EAAgClG,EAAhCkG,WAAYC,EAAoBnG,EAApBmG,QAASmC,EAAWtI,EAAXsI,OADxB,EAIKnI,oBAAS,GAJd,mBAItBoI,EAJsB,KAIXC,EAJW,KAKvBC,EAAcC,uBAAY,SAACnJ,GAE/BiJ,GAAa,KACZ,IAGGG,EAAeD,uBAAY,SAACE,GAChCpJ,QAAQC,IAAImJ,KAEX,IACGC,EAAiB,CACrB,CACEnK,MAAO,UACPE,MAAO,WAET,CACEF,MAAO,WACPE,MAAO,YAET,CACEF,MAAO,QACPE,MAAO,SAET,CACEF,MAAO,UACPE,MAAO,WAGT,CACEF,MAAO,eACPE,MAAO,gBAET,CACEF,MAAO,WACPE,MAAO,YAET,CACEF,MAAO,iBACPE,MAAO,kBAET,CACEF,MAAO,cACPE,MAAO,eAET,CACEF,MAAO,SACPE,MAAO,UAET,CACEF,MAAO,iBACPE,MAAO,kBAET,CACEF,MAAO,eACPE,MAAO,iBA8CX,OACE,kBAAC,WAAD,KACG2J,EACC,kBAACO,EAAA,EAAD,CACEC,KAAK,KACLC,UAAQ,EACRC,KAAMV,EACND,OAAQ,kBAAME,GAAa,IAC3BtJ,WAAW,8BAEX,kBAAC,GAAD,CAAkBoJ,OAAQ,kBAAME,GAAa,OAG/C,GAGF,0BAAM7J,UAAU,cAAcyH,SAAUL,EAAa4C,IACnD,kBAACtC,EAAA,EAAD,CACElD,KAAM,wBAAIxE,UAAU,SAAd,mBACNyE,MACE,kBAAC,WAAD,KACG,IACD,yBAAKzE,UAAU,QACb,kBAAC2H,EAAA,EAAD,CAAazE,QAASyG,EAAQ3J,UAAU,oBAAxC,WAIF,yBAAKA,UAAU,QACb,kBAAC2H,EAAA,EAAD,CACErG,SAAUkG,GAAWH,GAAYE,EACjC9G,KAAK,SACLT,UAAU,gBAHZ,YAYR,kBAAC0E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK4F,GAAI,GACP,kBAAChG,EAAA,EAAD,CACEC,KAAK,OACLC,MACE,kBAACG,EAAA,EAAD,CACE1E,KAAK,OACLsK,SAAS,EACTzF,UAAW0F,IACXC,YAAY,EACZlE,QAAS0D,MAIf,kBAAC3F,EAAA,EAAD,CACEC,KAAK,MACLC,MACE,kBAACG,EAAA,EAAD,CACE1E,KAAK,MACL6E,UAAW0F,IACXC,YAAY,EACZlE,QAAS0D,EACTS,aAAa,QAInB,kBAACpG,EAAA,EAAD,CACEC,KAAK,QACLC,MAAO,kBAACG,EAAA,EAAD,CAAO1E,KAAK,QAAQ6E,UAAW6F,QAExC,kBAACrG,EAAA,EAAD,CACEC,KAAK,SACLC,MAAO,kBAACG,EAAA,EAAD,CAAO1E,KAAK,SAAS6E,UAAW8F,QAEzC,kBAACtG,EAAA,EAAD,CACEC,KAAK,OACLC,MAAO,kBAACG,EAAA,EAAD,CAAO1E,KAAK,OAAO6E,UAAW8F,QAEvC,kBAACtG,EAAA,EAAD,CACEC,KAAK,SACLC,MACE,kBAACG,EAAA,EAAD,CACE1E,KAAK,SACL6E,UAAW0F,IACXC,YAAY,EACZlE,QAAS0D,EACTS,aAAa,QAInB,kBAACpG,EAAA,EAAD,CACEC,KAAK,QACLC,MAAO,kBAACG,EAAA,EAAD,CAAO1E,KAAK,QAAQ6E,UAAW+F,IAAUC,IAAK,MAEvD,kBAACxG,EAAA,EAAD,CACEC,KAAK,aACLC,MACE,kBAACG,EAAA,EAAD,CACE1E,KAAK,aACL6E,UAAW0F,IACXC,YAAY,EACZlE,QAAS0D,EACTS,aAAa,QAKnB,kBAACpG,EAAA,EAAD,CACEC,KAAK,SACLC,MACE,kBAAC,WAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,KACE,kBAACgD,EAAA,EAAD,CACEzE,QAAS4G,EACT3J,MAAI,EACJH,UAAU,wBAEV,uBAAGgF,MAAM,sBAOpB,UAAA3D,EAAMZ,YAAN,eAAYR,OA1KF,SAAC+K,GACpB,OAAQA,GACN,IAAK,UACH,OAAO,kBAAC,EAAD,CAAmB1G,MAAM,cAClC,IAAK,QACH,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAmBA,MAAM,WACzB,kBAAC,EAAD,CAAmBA,MAAM,aAG/B,IAAK,eACH,OAAO,kBAAC,EAAD,CAAmBA,MAAM,YAClC,IAAK,WACH,OAAO,kBAAC,EAAD,CAAmBA,MAAM,gBAClC,IAAK,iBACH,OAAO,kBAAC,EAAD,CAAmBA,MAAM,cAClC,IAAK,SACH,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAmBA,MAAM,YACzB,kBAAC,EAAD,CAAmBA,MAAM,eAG/B,IAAK,cACH,OAAO,kBAAC,EAAD,CAAmBA,MAAM,YAClC,IAAK,SACH,OAAO,kBAAC,EAAD,CAAmBA,MAAM,cAClC,IAAK,iBACH,OAAO,kBAAC,EAAD,CAAmBA,MAAM,cAClC,IAAK,eACH,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAmBA,MAAM,WACzB,kBAAC,EAAD,CAAmBA,MAAM,aAG/B,IAAK,WACH,OAAO,kBAAC,EAAD,CAAmBA,MAAM,YAClC,QACE,MAAO,IAkIkB2G,CAAY,UAAC5J,EAAMZ,YAAP,aAAC,EAAYR,OAAS,IAEzD,kBAAC0E,EAAA,EAAD,CAAK4F,GAAI,IAAI,UAAAlJ,EAAMZ,YAAN,eAAYR,OAAQ,kBAAC,EAAaoB,GAAY,Y,6OChPtD6J,MA9Bf,SAA6BC,GAAmB,IAAD,EACO3J,mBAClD2J,GAF2C,mBACtCC,EADsC,KAClBC,EADkB,KAIvCrI,EAAMsI,iBAAO,MAEbC,EAAqB,SAACC,GACR,WAAdA,EAAMjG,KACR8F,GAAsB,IAIpBI,EAAqB,SAAAD,GACrBxI,EAAI0I,UAAY1I,EAAI0I,QAAQC,SAASH,EAAMI,SAC7CP,GAAsB,IAa1B,OATAzI,qBAAU,WAGR,OAFAiJ,SAASC,iBAAiB,UAAWP,GAAoB,GACzDM,SAASC,iBAAiB,QAASL,GAAoB,GAChD,WACLI,SAASE,oBAAoB,UAAWR,GAAoB,GAC5DM,SAASE,oBAAoB,QAASN,GAAoB,OAIvD,CAAEzI,MAAKoI,qBAAoBC,0BCuFrBW,EAvEK,WAAO,IAAD,EACAxK,oBAAS,GADT,mBACjB8I,EADiB,KACX2B,EADW,OAEIzK,mBAAS,MAFb,mBAEjBoK,EAFiB,KAETM,EAFS,KAGlBC,EAASb,iBAAO,MACtBzK,QAAQC,IAAI,UAJY,MASpBoK,GAAoB,GAHtBlI,EANsB,EAMtBA,IACAoI,EAPsB,EAOtBA,mBACAC,EARsB,EAQtBA,sBAiBF,OARAzI,qBAAU,WAERqJ,EAAQb,KAEP,CAACA,IAGNvK,QAAQC,IAAIsK,GAER,kBAAC,WAAD,KACE,6BAGA,kBAACzD,EAAA,EAAD,CAAazE,QApBG,SAACsI,GACnB3K,QAAQC,IAAIsK,GACZC,GAAuBD,GACvBa,GAAS3B,GACT4B,EAAUV,EAAMI,SAgBqBzL,MAAI,GACrC,uBAAG6E,MAAM,0BAEX,kBAACoH,EAAA,EAAD,CACE9B,KAAMA,EACNsB,OAAQA,EACRS,UAAWF,EAAOT,QAClBY,UAAU,SACVC,iBAAkB,IAElB,kBAACC,EAAA,EAAD,CAAUhH,GAAG,qBACX,kBAACgH,EAAA,EAAQC,QAAT,KACE,yBAAKzJ,IAAKA,GACV,kBAAC0J,EAAA,EAAD,CACJC,IAAK,wBACLC,MAAO,iIACPC,QAAS,WACT3D,YAAa,QACblJ,UAAU,oCAEV,kBAAC8M,EAAA,EAAD,CAAc1C,KAAM,GAAI2C,OAAK,KAE/B,kBAACC,EAAA,EAAD,CACE1I,MAAO,OACPqI,IAAK,wBACLM,SAAU,CAAC,WAAY,aAEvB,kBAACC,EAAA,EAAD,CAAa9C,KAAM,GAAI2C,OAAK,IAL9B,WASA,kBAACpF,EAAA,EAAD,CAAaxH,MAAI,GAAC,uBAAG6E,MAAM,oBAA3B,Y,2CC3GN,kCAmBA,IAAMmI,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CAEJC,SAAU,UACVC,aAAc,QAEhBC,MAAO,CACLC,OAAQ,EACRC,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYV,EAAMW,YAAYC,OAAO,YAAa,CAChDC,SAAUb,EAAMW,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACNC,gBAAiBC,IAAI,UAIV,SAASC,EAAT,GAAyF,IAA/DC,EAA8D,EAA9DA,KAAMC,EAAwD,EAAxDA,gBAAiBC,EAAuC,EAAvCA,kBAAmBC,EAAoB,EAApBA,iBAC3EtO,EAAU6M,IACV0B,EAAWC,aAAY,qBAAGC,KAAgBC,QAGhD,OAFAnO,QAAQC,IAAI+N,GACZhO,QAAQC,IAAI2N,GAEV,kBAACQ,EAAA,EAAD,CAAMjP,UAAWM,EAAQgN,MACvB,kBAAC4B,EAAA,EAAD,CACEb,OACE,kBAACc,EAAA,EAAD,CAAQC,IAAKX,EAAKY,WAAWC,WAAYC,IAAKd,EAAKY,WAAWG,gBAAiBxP,UAAWM,EAAQ+N,SAEpG/J,MAAO,kBAAC,WAAD,KAAWmK,EAAKY,WAAWC,WAA3B,IAAwCb,EAAKY,WAAWI,UAAxD,MAAsEhB,EAAKjJ,IAClFkK,UACE,kBAAC,WAAD,KACkB,GAAfjB,EAAKkB,OAAc,kBAAC,WAAD,SAAYC,IAAOnB,EAAKoB,YAAYC,OAAO,cAA3C,KAAwE,kDAEhGC,OACE,kBAAC,WAAD,KACE,kBAACpI,EAAA,EAAD,CAAaxH,MAAI,GACf,kBAAC,EAAD,OAEc,GAAfsO,EAAKkB,OAAc,GAAK,kBAAC,WAAD,KACvB,kBAAChI,EAAA,EAAD,CAAaxH,MAAI,EAAC+C,QAAS,kBAAM0L,EAAiBH,EAAKjJ,MACrD,uBAAGR,MAAM,sBAEX,kBAAC2C,EAAA,EAAD,CAAaxH,MAAI,EAAC+C,QAAS,kBAAMyL,EAAkBF,EAAKjJ,MACtD,uBAAGR,MAAM,iCAMnB,kBAACgL,EAAA,EAAD,CAAUC,SAAU,MACjBxB,EAAKyB,OAAOlO,KAAI,SAACsD,EAAM6K,GAAP,OACf,kBAACH,EAAA,EAASzL,KAAV,KAKE,kBAACI,EAAA,EAAD,KACE,yBACE3E,UAAU,QACVuP,IAAKjK,EAAKqH,IACVyC,IAAI,qBAMZ,kBAACY,EAAA,EAASzL,KAAV,OASF,kBAAC6L,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBxL,UAAU,IAAI/E,UAAU,iBACvEyO,EAAKnG,OAGV,kBAACkI,EAAA,EAAD,CAAaC,gBAAc,EAACzQ,UAAU,uBACpC,kBAAC2H,EAAA,EAAD,CAAazE,QAAS,kBAAMwL,EAAgBD,EAAKjJ,KAAKrF,MAAI,GAAGsO,EAAKiC,MAAMzN,OAASwL,EAAKiC,MAAMzN,OAAS,EACnG,kBAAC,IAAD,W,sWClDK0N,EArDC,SAACtP,GAAW,IAClBuP,EAAWvP,EAAXuP,OADiB,EAEOpP,mBAAS,aAFhB,mBAElBqP,EAFkB,KAERC,EAFQ,KAYnBC,EAAiB,SAACnQ,GACtBkQ,EAAYlQ,EAAEI,cAAcf,QAU9B,OAPA2C,qBAAU,WACR/B,QAAQC,IAAIO,KAIX,IAGD,kBAAC,WAAD,KACE,kBAAC2P,EAAA,EAAD,CAAUC,QAtBE,SAACrQ,GACfgQ,EAAOM,KAAKtQ,GACZC,QAAQC,IAAIF,MAqBV,yBAAKZ,UAAU,8BACb,yBAAKA,UAAU,QACb,kBAAC2H,EAAA,EAAD,CAAaxH,MAAI,GACf,uBAAG6E,MAAM,qBAEX,kBAACmM,EAAA,EAAD,CAAanR,UAAU,gCAAgCQ,QAAM,GAxB7C,CACtB,CAAEN,KAAM,YAAaD,MAAO,aAC5B,CAAEC,KAAM,oBAAqBD,MAAO,sBAuBX+B,KAAI,SAACoP,EAAOC,GAAR,OACnB,kBAACC,EAAA,EAAD,CACE/L,IAAKkD,MACLhI,KAAK,QACLP,KAAK,QACLD,MAAOmR,EAAMnR,MACbS,QAASmQ,IAAaO,EAAMnR,MAC5BU,SAAUoQ,GAETK,EAAMlR,YAMjB,kBAACwE,EAAA,EAAD,MACA,kBAAC6M,EAAA,EAAD,QC3CSC,EARI,WACf,OACG,kBAAC,WAAD,KACI,kBAACC,EAAA,EAAD,CAAYvR,KAAK,QAAQ6E,UAAW4L,M,kCC8BhCe,EA7BI,SAACrQ,GAAW,IAAD,EACQG,oBAAS,GADjB,mBACnBoI,EADmB,KACRC,EADQ,OAEUrI,mBAAS,GAFnB,mBAEnBmQ,EAFmB,KAEPC,EAFO,KAK1B,OACE,kBAAC,WAAD,KACGhI,EACC,kBAACO,EAAA,EAAD,CAAcG,KAAMV,EAAWD,OAAQ,kBAAME,GAAa,KACxD,6BACE,kBAACgI,EAAA,EAAD,CAAajK,WAAY,kBAAMiC,GAAa,IAAQpC,SAAU,SAAC7G,GAAD,OAAOC,QAAQC,IAAIF,QAKrF,GAEF,kBAAC8G,EAAA,EAAD,CACEjD,MACE,kBAAC,WAAD,KACE,kBAACkD,EAAA,EAAD,CAAa3H,UAAU,wBAAwBkD,QAAS,kBAAM0O,GAAc,SAAAE,GAAI,OAAIA,EAAO,OAA3F,WACA,kBAACnK,EAAA,EAAD,CAAa3H,UAAU,4BAA4BkD,QAAS,kBAAK2G,GAAa,KAA9E,UAIN,kBAAC4H,EAAA,EAAD,CAAYzL,KAAM3E,EAAM2E,KAAM9F,KAAK,WAAWyR,WAAYA,EAAY5M,UAAWgN,Q,SCR1EC,EAnBI,SAAC3Q,GAAW,IAAD,EAEUG,mBAAS,GAFnB,6BAK1B,OAFJX,QAAQC,IAAIO,GAGN,kBAAC,WAAD,KASE,kBAACoQ,EAAA,EAAD,CAAYzL,KAAM3E,EAAM2E,KAAM9F,KAAK,WAAW6E,UAAWkN,Q,mFCF3DpJ,GAAWC,4BAAkB,CAChCoJ,WAAYnJ,qBAAW,CAAEC,QAAS,gCAClCmJ,SAAUpJ,qBAAW,CAAEC,QAAS,6BACjCoJ,OAAQjJ,4BACNJ,qBAAW,CAAEC,QAAS,+BACtBI,+BAAqB,EAArBA,CAAwB,CACtBJ,QAAS,kDAHLG,GAMRkJ,WAAYtJ,qBAAW,QACvBO,MAAOP,qBAAW,SAClBQ,SAAUR,qBAAW,YACrBS,UAAWT,qBAAW,QACtBU,QAASV,qBAAW,UAqGhBnC,GAAWC,YAAkB,eAOpBC,gBANE,SAACC,GAEhB,MAAO,CACLuL,YAFe1L,GAASG,EAAO,aAAc,WAAY,aAAa,aAN1D,GAWDD,CAGbG,YAAU,CAAEC,KAAM,cAAeF,cAAe,GAAI6B,aAApD5B,EA5GkB,SAAC5F,GAAW,IACtB+F,EAAoF/F,EAApF+F,aAAcC,EAAsEhG,EAAtEgG,SAAUsC,EAA4DtI,EAA5DsI,OAAQpC,EAAoDlG,EAApDkG,WAAYC,EAAwCnG,EAAxCmG,QAAQ+K,EAAgClR,EAAhCkR,eAAgBD,EAAgBjR,EAAhBiR,YAO5E,OADFzR,QAAQC,IAAIO,GAER,kBAAC,WAAD,KACE,yBAAKrB,UAAU,kBACb,0BAAMA,UAAU,cAAcyH,SAAUL,GACtC,kBAAC,WAAD,KACE,kBAACM,EAAA,EAAD,CACElD,KACE,kBAAC,WAAD,KACE,wBAAIxE,UAAU,SAAd,iBAGJyE,MACE,kBAAC,WAAD,KACE,kBAAC,WAAD,KACE,yBAAKzE,UAAU,QACb,kBAAC2H,EAAA,EAAD,CAAazE,QAASyG,GAAtB,WAEF,yBAAK3J,UAAU,QACb,kBAAC2H,EAAA,EAAD,CACErG,SAAUkG,GAAWH,GAAYE,EACjCrE,QAAS,kBAxB3BrC,QAAQC,IAAIwR,QACdC,EAAeD,IAwBKtS,UAAU,6BAHZ,eAYV,kBAACuE,EAAA,EAAD,CACEC,KAAK,kBACLC,MACE,kBAAC,WAAD,KACE,yBAAKzE,UAAU,OACb,kBAAC2E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE1E,KAAK,aACL6E,UAAW6F,IACXhF,YAAY,gBAGhB,kBAACjB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE1E,KAAK,WACL6E,UAAW6F,IACXhF,YAAY,kBAQxB,kBAACrB,EAAA,EAAD,CACEC,KAAK,iBACLC,MACE,kBAACG,EAAA,EAAD,CACE1E,KAAK,cACL6E,UAAW6F,IACXhF,YAAY,eAKlB,kBAACrB,EAAA,EAAD,CACEC,KAAK,SACLC,MACE,kBAACG,EAAA,EAAD,CACE1E,KAAK,SACLyF,KAAM,EACNZ,UAAW+F,KACXlF,YAAY,iBAMtB,6BACE,kBAACrB,EAAA,EAAD,CAAMC,KAAK,4BCqHNgO,GApOY,SAACnR,GAAW,IAEnC2E,EAGE3E,EAHF2E,KACA4K,EAEEvP,EAFFuP,OAHkC,EAKhCvP,EADFwE,KAJkC,KAI1BE,MAJ0B,EAInB0M,aAGiBvK,IAAM1G,UAAS,IAPb,mBAO7BoI,EAP6B,KAOlBC,EAPkB,KAS9BK,EAAiB,CACrB,CACEnK,MAAO,SACPE,MAAO,UAET,CACEF,MAAO,mBACPE,MAAO,mBAET,CACEF,MAAO,QACPE,MAAO,MA6BX,OACE,kBAAC,WAAD,KACG2J,EACC,kBAACO,EAAA,EAAD,CACEC,KAAK,KACLE,KAAMV,EACND,OAAQ,kBAAME,GAAa,KAE3B,kBAAC,GAAD,CACE0I,eAAgB,SAAC3R,GAAD,OArBA,SAACA,GACvB,IAAIX,EAAQ2Q,EAAO8B,IAAI,GACvBzS,EAAMiS,WAAatR,EAAEsR,WACrBjS,EAAMkS,SAAWvR,EAAEuR,SACnBlS,EAAM0S,YAAc/R,EAAE+R,YACtB1S,EAAMmS,OAASxR,EAAEwR,OACjBxB,EAAOgC,YACPhC,EAAOM,KAAKjR,GACZY,QAAQC,IAAIb,GACdY,QAAQC,IAAIF,GAYmBiS,CAAkBjS,IACzC+I,OAAQ,kBAAME,GAAa,OAI/B,GAGD+G,EAAO5O,KAAI,SAACsD,EAAMiD,GAAP,OACV,kBAAC7D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKkD,GAAI,GACP,wBAAI7H,UAAU,SAAd,WACA,kBAACuE,EAAA,EAAD,CACEC,KAAK,SACLC,MACE,kBAAC,WAAD,KACE,kBAACG,EAAA,EAAD,CACEoB,KAAMA,EACN9F,KAAI,UAAKoF,EAAL,WACJP,UAAW0F,IACXC,YAAY,EACZF,SAAS,EACThE,QAAS0D,OAKjB,kBAAC3F,EAAA,EAAD,CACEC,KAAK,SACLC,MACE,kBAAC,WAAD,KACE,kBAACG,EAAA,EAAD,CACEoB,KAAMA,EACN9F,KAAI,UAAKoF,EAAL,WACJP,UAAW0F,IACXC,YAAY,EACZF,SAAS,EACThE,QAAS0D,OAKjB,kBAAC3F,EAAA,EAAD,CACEC,KAAK,gBACLC,MACE,kBAAC,WAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEoB,KAAMA,EACN9F,KAAI,UAAKoF,EAAL,SACJP,UAAW8F,OAGf,kBAAClG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEoB,KAAMA,EACN9F,KAAI,UAAKoF,EAAL,OACJP,UAAW8F,WAOvB,kBAACtG,EAAA,EAAD,CACEC,KAAK,cACLC,MACE,kBAAC,WAAD,KACGuB,EACC,kBAAC2B,EAAA,EAAD,CACE3H,UAAU,wBACVkD,QAAS,kBAAM2G,GAAa,KAF9B,gBAOA,yBAAK7J,UAAU,OACb,kBAAC2E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACAoB,MAAM,EACN9F,KAAI,UAAKoF,EAAL,eACFP,UAAW6F,IACXhF,YAAY,gBAGhB,kBAACjB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACAoB,MAAM,EACN9F,KAAI,UAAKoF,EAAL,aACFP,UAAW6F,IACXhF,YAAY,kBAQ1B,kBAACrB,EAAA,EAAD,CACEC,KAAK,cACLC,MACE,kBAAC,WAAD,KACE,kBAACG,EAAA,EAAD,CACA1E,KAAI,UAAKoF,EAAL,gBACFP,UAAW6F,IACXhF,YAAY,kBAKpB,kBAACrB,EAAA,EAAD,CACEC,KAAK,cACLC,MACE,kBAAC,WAAD,KACE,yBAAKzE,UAAU,OACb,kBAAC2E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACC1E,KAAI,UAAKoF,EAAL,qBACHP,UAAW6F,IACXhF,YAAY,gBAGhB,kBAACjB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACC1E,KAAI,UAAKoF,EAAL,mBACHP,UAAW6F,IACXhF,YAAY,mBAQ1B,kBAACjB,EAAA,EAAD,CAAKkD,GAAI,GACP,wBAAI7H,UAAU,SAAd,eACA,kBAACuE,EAAA,EAAD,CACEC,KAAK,SACLC,MACE,kBAAC,WAAD,KACE,kBAACG,EAAA,EAAD,CACEoB,KAAMA,EACN9F,KAAI,UAAKoF,EAAL,aACJP,UAAW6F,IACXhF,YAAY,gBAKpB,kBAACrB,EAAA,EAAD,CACEC,KAAK,WACLC,MACE,kBAAC,WAAD,KACE,kBAACG,EAAA,EAAD,CACEoB,KAAMA,EACN9F,KAAI,UAAKoF,EAAL,aACJP,UAAW6F,IACXhF,YAAY,uBCtNjBkN,GATG,SAACzR,GACf,OACI,kBAAC,WAAD,KAEK,kBAACoQ,EAAA,EAAD,CAAYzL,KAAM3E,EAAM2E,KAAM9F,KAAK,UAAU6E,UAAWyN,O,2FCuM/D5L,IAvLWkC,4BAAkB,IAuLlBjC,YAAkB,sBAuBpBC,gBArBE,SAACC,GAehB,OAdAlG,QAAQC,IAAIiG,GAcL,CACLgM,QAbanM,GACbG,EACA,OACA,OACA,cACA,aACA,iBACA,KACA,KACA,cAKAC,cAAe,MAMjB,KAFaF,CAGbG,YAAU,CAAEC,KAAM,qBAAlBD,EAjMgB,SAAC5F,GAAW,IAE1B+F,EAQE/F,EARF+F,aACAC,EAOEhG,EAPFgG,SAEAG,GAKEnG,EANFkG,WAMElG,EALFmG,SAEAuL,GAGE1R,EAJFkR,eAIElR,EAHF0R,SACAnL,EAEEvG,EAFFuG,WACApC,EACEnE,EADFmE,GAsCF,OAhBA5C,qBAAU,WAEJ4C,GACFwN,eACGC,MAAK,YAAe,IAAZxE,EAAW,EAAXA,KACP5N,QAAQC,IAAI2N,GACZpN,EAAM6R,WAAN,eAAqBzE,OAGtB0E,OAAM,iBAGV,IAGHtS,QAAQC,IAAIO,GAEV,kBAAC,WAAD,KACE,yBAAKrB,UAAU,kBACb,0BAAMA,UAAU,cAAcyH,SAAUL,GACtC,kBAAC,WAAD,KACE,kBAACM,EAAA,EAAD,CACElD,KACE,kBAAC,WAAD,KACE,wBAAIxE,UAAU,SAAd,iBAGJyE,MACE,kBAAC,WAAD,KACE,kBAAC,WAAD,KACE,yBAAKzE,UAAU,QACb,kBAAC2H,EAAA,EAAD,CAAazE,QAAS0E,GAAtB,WAEF,yBAAK5H,UAAU,QACb,kBAAC2H,EAAA,EAAD,CACErG,SAAUkG,GAAWH,EACrBnE,QAAS,WAtD7BrC,QAAQC,IAAIiS,IAuDQ/S,UAAU,6BAHZ,eAYV,kBAACuE,EAAA,EAAD,CACEC,KAAK,kBACLC,MACE,kBAAC,WAAD,KACE,kBAACG,EAAA,EAAD,CACE1E,KAAK,OACL0F,YAAY,gBACZb,UAAW0F,IACXC,YAAY,EACZF,SAAS,EACThE,QAvEG,CACnB,CACEzG,MAAO,YACPE,MAAO,KAET,CACEF,MAAO,cACPE,MAAO,KAET,CACEF,MAAO,QACPE,MAAO,WAiED,kBAACyE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,yBAAK3E,UAAU,kBACb,kBAACyG,GAAA,EAAK2M,MAAN,CAAYpT,UAAU,aAAaoI,GAAI,GAAvC,6CAGA,kBAACzD,EAAA,EAAD,CAAKyD,GAAI,GACP,kBAACxD,EAAA,EAAD,CAAO1E,KAAK,KAAK6E,UAAWsO,UAIlC,kBAAC1O,EAAA,EAAD,KACE,yBAAK3E,UAAU,kBACb,kBAACyG,GAAA,EAAK2M,MAAN,CAAYpT,UAAU,aAAaoI,GAAI,GAAvC,6CAGA,kBAACzD,EAAA,EAAD,CAAKyD,GAAI,GACP,kBAACxD,EAAA,EAAD,CAAO1E,KAAK,KAAK6E,UAAWsO,WAMpC,kBAAC9O,EAAA,EAAD,CACEC,KAAK,iBACLC,MAAO,kBAACG,EAAA,EAAD,CAAO1E,KAAK,iBAAiB6E,UAAW8F,QAGjD,kBAACtG,EAAA,EAAD,CACEC,KAAK,cACLC,MACE,kBAACG,EAAA,EAAD,CACE1E,KAAK,aACL6E,UAAW6F,IACXhF,YAAY,eAIlB,kBAACrB,EAAA,EAAD,CACEC,KAAK,eACLC,MACE,kBAACG,EAAA,EAAD,CACE1E,KAAK,cACL6E,UAAW6F,IACXhF,YAAY,eAIlB,kBAACrB,EAAA,EAAD,CACEC,KAAK,OACLC,MACE,kBAACG,EAAA,EAAD,CACE1E,KAAK,OACLyF,KAAM,EACNZ,UAAW+F,KACXlF,YAAY,4BAIjB,kBAACrB,EAAA,EAAD,CACCC,KAAK,aACLC,MACE,kBAACgN,EAAA,EAAD,CAAYvR,KAAK,aAAaO,KAAM,OAAOsE,UAAWuO,WAK9D,6BACE,kBAAC/O,EAAA,EAAD,CAAMC,KAAK,4BC7LrB,SAASE,GAAT,GAAgD,IAAD,sBAAhCkM,EAAgC,EAAhCA,OAAQtL,EAAwB,EAAxBA,KAAMiD,EAAkB,EAAlBA,MAAOrF,EAAW,EAAXA,QAAW,EACrBgF,IAAM1G,UAAS,GADM,mBACtCmB,EADsC,KAChC4Q,EADgC,KAQ7C,OACE,kBAAC,IAAMC,SAAP,KACE,wBAAItQ,QAAS,kBAAMA,EAAQqF,KACzB,4BACE,kBAAC3D,EAAA,EAAD,CACE1E,KAAI,UAAKoF,EAAL,eACJP,UAAW0O,KACXhT,KAAK,cAGT,mCACGmQ,QADH,IACGA,GADH,UACGA,EAAQ8B,IAAInK,UADf,iBACG,EAAoBmL,cADvB,aACG,EAA4BpP,MAAO,KAC7B,OAANsM,QAAM,IAANA,GAAA,UAAAA,EAAQ8B,IAAInK,UAAZ,eAAoBmL,OAAOC,kBAC1B,kBAAChM,EAAA,EAAD,CAAaxH,MAAI,GACd,IACD,uBAAG6E,MAAM,qBAGX,IAGJ,4BAAK4K,KAAM,OAACgB,QAAD,IAACA,GAAD,UAACA,EAAQ8B,IAAInK,UAAb,aAAC,EAAoBqL,MAAM9D,OAAO,eAC7C,mCAAKc,QAAL,IAAKA,GAAL,UAAKA,EAAQ8B,IAAInK,UAAjB,aAAK,EAAoBsL,YAEzB,mCAAKjD,QAAL,IAAKA,GAAL,UAAKA,EAAQ8B,IAAInK,UAAjB,aAAK,EAAoBuL,aACzB,6BACS,OAANlD,QAAM,IAANA,GAAA,UAAAA,EAAQ8B,IAAInK,UAAZ,eAAoBwL,KACnB,0BAAM/O,MAAM,cAEZ,0BAAMA,MAAM,aAGhB,wBAAIhF,UAAU,WACL,OAAN4Q,QAAM,IAANA,GAAA,UAAAA,EAAQ8B,IAAInK,UAAZ,eAAoByL,KACnB,0BAAMhU,UAAU,kBAEhB,0BAAMA,UAAU,gBACf,KACI,OAAN4Q,QAAM,IAANA,GAAA,UAAAA,EAAQ8B,IAAInK,UAAZ,eAAoB0L,MACnB,8BACE,kBAACtM,EAAA,EAAD,CAAazE,QAAS,SAACtC,GAAD,OA7CX,SAACA,GACtBA,EAAEsT,kBACFX,GAAS5Q,GA2C8BwR,CAAevT,IAAIT,MAAI,GACjD,IACD,uBAAG6E,MAAM,oBAAoBoP,cAAY,WAI7C,MAIC,OAANxD,QAAM,IAANA,GAAA,UAAAA,EAAQ8B,IAAInK,UAAZ,eAAoB0L,OAAQtR,EAC3B,kBAAC,WAAD,KACE,4BACE,wBAAI3C,UAAU,MAAMqU,QAAQ,KAA5B,OACGzD,QADH,IACGA,GADH,UACGA,EAAQ8B,IAAInK,UADf,aACG,EAAoB0L,QAK3B,IAMR,IAuKeK,GAvKK,SAACjT,GAAW,IACtBuP,EAAWvP,EAAXuP,OADqB,EAEapP,mBAAS,IAFtB,gCAGKA,oBAAS,IAHd,mBAGtBoI,EAHsB,KAGXC,EAHW,OAITrI,mBAAS,MAJA,mBAItBgE,EAJsB,KAIlB+O,EAJkB,KAM7B3R,qBAAU,WACR4R,eACGvB,MAAK,YAAe,IAAZxE,EAAW,EAAXA,MACFmC,EAAO3N,OAAS,GACnBwL,EAAKzM,KAAI,SAACsD,EAAMiD,GACdqI,EAAOM,KAAK5L,SAIjB6N,OAAM,iBA0BR,IAEHvQ,qBAAU,WACR6R,MACC,CAACpT,EAAMsQ,aAEV,IAgBM8C,EAAe,WACnB,IAAK,IAAItE,EAAIS,EAAO3N,OAAS,EAAGkN,GAAK,EAAGA,IAClCS,EAAO8B,IAAIvC,GAAGuE,YAChB9D,EAAO+D,OAAOxE,GAIlBtE,SAAS+I,eAAe,eAAelU,SAAU,GAoC7CmU,EAAc,WAClBhL,GAAa,GACb0K,EAAM,OAGR,OACE,kBAAC,WAAD,KACE,yBAAKvU,UAAU,kCACZ4J,EACC,kBAACO,EAAA,EAAD,CAAcG,KAAMV,EAAWD,OAAQ,kBAAMkL,MAC3C,6BACE,kBAAC,GAAD,CACErP,GAAIA,EACJoC,WAAY,kBAAMiN,KAClBpN,SAAU,SAAC7G,GAAD,OAAOC,QAAQC,IAAIF,QAKnC,GAGF,kBAACkU,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAC7K,KAAK,MACjC,+BACE,4BACE,4BACG,IACD,2BACE5E,GAAG,cACH/E,KAAK,WACLE,SA/Dc,SAACC,GAC7B,IAAMsU,EAAMtE,EAAOuE,SACbC,IAAWvJ,SAAS+I,eAAe,eAAelU,QAIxDkQ,EAAOgC,YACPsC,EAAIrS,SAAQ,SAACyC,EAAMiD,GACjB2M,EAAI3M,GAAOmM,WAAaU,EACxBxE,EAAOM,KAAK5L,UAyDJ,sCACA,oCACA,2CACA,4CACA,oCACA,sCAGJ,+BACE,kBAAC,WAAD,CAAUnB,SAAU,kBAACC,GAAA,EAAD,OAApB,OACGwM,QADH,IACGA,OADH,EACGA,EAAQ5O,KAAI,SAACsD,EAAMiD,GAAP,OACX,kBAAC,WAAD,CAAUhD,IAAKgD,GACb,kBAAC,GAAD,CACEjD,KAAMA,EACNpC,QAAS,SAACtC,GAAD,OApDP,SAACA,GACnBiJ,GAAa,GACb0K,EAAM3T,GAkD0ByU,CAAYzU,IAC5B2H,MAAOA,EACPqI,OAAQA,cC5Mb0E,GA5BG,SAACjU,GAAW,IAAD,EACSG,oBAAS,GADlB,mBAClBoI,EADkB,KACPC,EADO,OAEWrI,mBAAS,GAFpB,mBAElBmQ,EAFkB,KAENC,EAFM,KAGzB,OACI,kBAAC,WAAD,KACChI,EACC,kBAACO,EAAA,EAAD,CAAcG,KAAMV,EAAWD,OAAQ,kBAAME,GAAa,KACxD,6BACE,kBAAC,GAAD,CAAWjC,WAAY,kBAAMiC,GAAa,IAAQpC,SAAU,SAAC7G,GAAD,OAAOC,QAAQC,IAAIF,QAKnF,GAEF,kBAAC8G,EAAA,EAAD,CACEjD,MACE,kBAAC,WAAD,KACE,kBAACkD,EAAA,EAAD,CAAa3H,UAAU,wBAAwBkD,QAAS,kBAAM0O,GAAc,SAAAE,GAAI,OAAIA,EAAO,OAA3F,WACA,kBAACnK,EAAA,EAAD,CAAa3H,UAAU,4BAA4BkD,QAAS,kBAAK2G,GAAa,KAA9E,UAIN,kBAAC4H,EAAA,EAAD,CAAYzL,KAAM3E,EAAM2E,KAAM9F,KAAK,UAAUyR,WAAYA,EAAY5M,UAAWuP,OClBzEiB,GARC,SAAClU,GAEb,OACE,kBAAC,WAAD,KACE,kBAACoQ,EAAA,EAAD,CAAavR,KAAK,QAAQ6E,UAAWuO,SCE7C,SAASkC,GAASnU,GAAQ,IAChBoU,EAAqCpU,EAArCoU,SAAUxV,EAA2BoB,EAA3BpB,MAAOsI,EAAoBlH,EAApBkH,MAAUmN,EADZ,YACsBrU,EADtB,8BAEvB,OACE,uCACEsU,KAAK,WACLC,OAAQ3V,IAAUsI,EAClB/C,GAAE,mCAA8B+C,GAChCsN,kBAAA,8BAAwCtN,IACpCmN,GAEHzV,IAAUsI,GAAS,kBAAC,WAAD,KAAWkN,IAKrC,SAASK,GAAUvN,GACjB,MAAO,CACL/C,GAAG,uBAAD,OAAyB+C,GAC3B,gBAAgB,4BAAhB,OAA6CA,IAIjD,IAAM4E,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0I,KAAM,CACJC,SAAU,EACV1H,gBAAiBjB,EAAM4I,QAAQC,WAAWC,OAE5CC,OAAQ,CACNC,OAAQhJ,EAAMiJ,QAAQ,IAExBxW,MAAO,CACLyW,QAAS,QAEXC,UAAW,CACT1I,WAAYT,EAAMiJ,QAAQ,QAyDfG,GArDQ,SAACpV,GAC+CA,EAA7D+F,aAA6D/F,EAA/CgG,SADW,IACDrB,EAAqC3E,EAArC2E,KADA,GACqC3E,EAA/BiG,MAA+BjG,EAAxBkG,WAAwBlG,EAAZmG,QAE/BhG,mBAAS,IAHH,mBAGzBvB,EAHyB,KAGlByW,EAHkB,KAS1BpW,EAAU6M,KAEhB,OADAtM,QAAQC,IAAIkF,GAEV,kBAAC,WAAD,KACJ,yBAAKhG,UAAWM,EAAQyV,MACR,kBAACY,EAAA,EAAD,CAAQC,SAAS,SAAS5W,UAAU,WAClC,kBAAC6W,EAAA,EAAD,CACE7W,UAAU,OACVsQ,QAAQ,aACRwG,cAAc,OACd7W,MAAOA,EACPU,SAfG,SAAC6K,EAAOuL,GAC3BL,EAASK,IAeOC,kBAAmB,CAAEjU,MAAO,CAAEmT,WAAY,iBAE1C,kBAACe,EAAA,EAAD,eAAKlX,MAAM,QAAW+V,GAAU,KAChC,kBAACmB,EAAA,EAAD,eAAKlX,MAAM,YAAe+V,GAAU,KACpC,kBAACmB,EAAA,EAAD,eAAKlX,MAAM,YAAe+V,GAAU,KACpC,kBAACmB,EAAA,EAAD,eAAKlX,MAAM,WAAc+V,GAAU,KACnC,kBAACmB,EAAA,EAAD,eAAKlX,MAAM,WAAc+V,GAAU,KACnC,kBAACmB,EAAA,EAAD,eAAKlX,MAAM,SAAY+V,GAAU,OAGrC,kBAACN,GAAD,CAAUxV,UAAU,MAAMC,MAAOA,EAAOsI,MAAO,GAC7C,kBAAC2O,EAAA,EAAD,KACE,kBAAC,EAAD,MAAe,MAGnB,kBAAC1B,GAAD,CAAUxV,UAAU,MAAMC,MAAOA,EAAOsI,MAAO,GAC7C,kBAAC2O,EAAA,EAAD,CAAexJ,OAAO,QAAO,kBAAC,EAAD,CAAY1H,KAAMA,MAEjD,kBAACwP,GAAD,CAAUxV,UAAU,MAAMC,MAAOA,EAAOsI,MAAO,GAAG,kBAAC,EAAD,CAAYvC,KAAMA,KACpE,kBAACwP,GAAD,CAAUxV,UAAU,MAAMC,MAAOA,EAAOsI,MAAO,GAA/C,IAAmD,kBAAC,GAAD,CAAWvC,KAAMA,IAApE,KACA,kBAACwP,GAAD,CAAUxV,UAAU,MAAMC,MAAOA,EAAOsI,MAAO,GAE7C,kBAAC4O,GAAD,OAGF,kBAAC3B,GAAD,CAAUxV,UAAU,MAAMC,MAAOA,EAAOsI,MAAO,GAA/C,IAAmD,kBAAC,GAAD,U,oCC0BnE,I,8BCxFM6O,GAAgB,SAAC,GAAqC,IAAnCxG,EAAkC,EAAlCA,OAAQpL,EAA0B,EAA1BA,GAA0B,EAAtBK,KAAQE,MAU3C,OACE,kBAAC,WAAD,KACE,wBAAI/F,UAAU,aAAauF,IAAI,eAC7B,wBAAI8R,QAAS,GACX,yBAAKrX,UAAU,UACb,2BAAOgF,MAAM,eAAevE,KAAK,OAAO+E,GAAIA,IAC5C,kBAAC8R,EAAA,EAAD,CACEpU,QAAS,kBAhBD,WAClB,IAAIqU,EAEAC,EAAM3L,SAAS+I,eAAepP,GAAIvF,MACtCsX,EAAM,CAAEC,OACR5G,EAAOM,KAAKsG,GACZ3W,QAAQC,IAAIyW,GAUalC,IACfoC,aAAW,SACXrN,KAAK,QACLpK,UAAU,qBAEV,uBAAGA,UAAU,6BAS3B,SAAS0E,GAAT,GAAsD,IAAD,sBAAtCkM,EAAsC,EAAtCA,OAAQtL,EAA8B,EAA9BA,KAAMiD,EAAwB,EAAxBA,MAAgBvC,GAAQ,EAAjB9C,QAAiB,EAAR8C,MAAQ,EAC3BkC,IAAM1G,UAAS,GADY,mBAC5CmB,EAD4C,KACtC4Q,EADsC,KAE7CY,EAAiB,SAACvT,GACtBA,EAAEsT,kBACFX,GAAS5Q,IAELuH,EAAiB,CACrB,CACEnK,MAAO,SACPE,MAAO,UAET,CACEF,MAAO,mBACPE,MAAO,mBAET,CACEF,MAAO,QACPE,MAAO,MAKX,OADAY,QAAQC,IAAIkF,GAEV,kBAAC,IAAMwN,SAAP,KACI,4BACE,kBAAC5O,EAAA,EAAD,CACE1E,KAAI,UAAKoF,EAAL,eACJP,UAAW0O,KACXhT,KAAK,cAGT,mCAAKmQ,QAAL,IAAKA,GAAL,UAAKA,EAAQ8B,IAAInK,UAAjB,aAAK,EAAoBmP,UACzB,wBAAI1X,UAAU,UACZ,kBAAC4E,EAAA,EAAD,CAAO1E,KAAI,UAAKoF,EAAL,cAAuBP,UAAW6F,IAAW5E,KAAMA,KACvD,OAAN4K,QAAM,IAANA,GAAA,UAAAA,EAAQ8B,IAAInK,UAAZ,mBAAoBoP,YAApB,mBAA0BC,eAA1B,eAAmC3U,QAClC,kBAAC0E,EAAA,EAAD,CAAazE,QAAS,SAACtC,GAAD,OAAOuT,EAAevT,IAAIT,MAAI,GACjD,IACD,uBAAG6E,MAAM,oBAAoBoP,cAAY,UAG3C,kBAACzM,EAAA,EAAD,CAAaxH,MAAI,EAAC+C,QAAS,SAACtC,GAAD,OAAOuT,EAAevT,KAC9C,IACD,uBAAGoE,MAAM,sBAIf,mCAAK4L,QAAL,IAAKA,GAAL,UAAKA,EAAQ8B,IAAInK,UAAjB,aAAK,EAAoBsP,YACzB,wBAAI7X,UAAU,oBAAoBqU,QAAQ,KACxC,yBAAKrU,UAAU,gBACb,kBAAC4E,EAAA,EAAD,CACE1E,KAAI,UAAKoF,EAAL,gBACJP,UAAW6F,IACX5E,KAAMA,EACNQ,QAAW0D,IAEb,kBAACtF,EAAA,EAAD,CACE1E,KAAI,UAAKoF,EAAL,kBACJP,UAAW0F,IACXzE,KAAMA,EACNwE,SAAS,EACTE,YAAY,EACZlE,QAAW0D,IAEb,kBAACtF,EAAA,EAAD,CACE1E,KAAI,UAAKoF,EAAL,kBACJP,UAAW0F,IACXzE,KAAMA,EACNQ,QAAW0D,IAEb,kBAACtF,EAAA,EAAD,CACE1E,KAAI,UAAKoF,EAAL,cACJP,UAAW0F,IACXzE,KAAMA,EACNQ,QAAW0D,IAEb,kBAAC4N,GAAA,EAAD,OACK,KAGX,kBAAC,WAAD,KACGnV,EACC,kBAAC8O,EAAA,EAAD,CACEvR,KAAI,UAAKoF,EAAL,iBACJP,UAAWqS,GACX5R,GAAIiD,QAGN,IAGK,OAANmI,QAAM,IAANA,GAAA,UAAAA,EAAQ8B,IAAInK,UAAZ,mBAAoBoP,YAApB,mBAA0BC,eAA1B,eAAmC3U,SAAUN,EAC5C,kBAAC,WAAD,YACGiO,QADH,IACGA,GADH,UACGA,EAAQ8B,IAAInK,UADf,iBACG,EAAoBoP,YADvB,iBACG,EAA0BC,eAD7B,aACG,EAAmC5V,KAAI,SAAC+V,EAASxP,GAAV,OACtC,4BACE,wBAAIvI,UAAU,MAAMqU,QAAQ,KAC1B,kBAACzP,EAAA,EAAD,CACE1E,KAAI,UAAKoF,EAAL,yBAA0BiD,EAA1B,KACJxD,UAAW6F,IACX5E,KAAMA,UAShB,KAOV,IA0KegS,GA1Ke,SAAC3W,GAAW,IAChCuP,EAAuBvP,EAAvBuP,OAAQnQ,EAAeY,EAAfZ,KAAMuF,EAAS3E,EAAT2E,KADiB,EAEnBxE,mBAAS,MAFU,6BAIvCoB,qBAAU,WACRqV,eACGhF,MAAK,YAAe,IAAZxE,EAAW,EAAXA,MACFmC,EAAO3N,OAAS,IACnBpC,QAAQC,IAAI2N,GACZA,EAAKzM,KAAI,SAACsD,EAAMiD,GACdqI,EAAOM,KAAK5L,UAIjB6N,OAAM,iBACR,IAEHvQ,qBAAU,WACR/B,QAAQC,IAAI,cASX,CAACL,IAEJmC,qBAAU,WACR6R,MACC,CAACpT,EAAMsQ,aAEV,IAgBM8C,EAAe,WACnB,IAAK,IAAItE,EAAIS,EAAO3N,OAAS,EAAGkN,GAAK,EAAGA,IAClCS,EAAO8B,IAAIvC,GAAGuE,YAChB9D,EAAO+D,OAAOxE,IAmCpB,OACE,kBAAC,WAAD,KACE,yBAAKnQ,UAAU,kCACb,kBAAC8U,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAC7K,KAAK,MACjC,+BACE,4BACE,4BACE,2BAAO5E,GAAG,cAAc/E,KAAK,cAE/B,oCACA,oCACA,0CACA,sCAGJ,+BACE,4BACE,6BACA,4BACE,wCACET,UAAU,eACVwF,GAAG,YAFL,YAGY,iBAEV,4BAAQvF,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,OAGJ,4BACE,2BACEQ,KAAK,OACL+E,GAAG,OACHxF,UAAU,mCACVkY,UAAQ,KAGZ,4BACE,wCACElY,UAAU,eACVwF,GAAG,cAFL,YAGY,iBAEV,4BAAQvF,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,OAGJ,wBAAID,UAAU,UACZ,2BACES,KAAK,OACL+E,GAAG,OACHxF,UAAU,mCACVkY,UAAQ,IAEV,kBAACZ,EAAA,EAAD,CACEpU,QAhHS,WAAO,IAAD,MACzBqU,EAAM,GACVA,EAAIY,SAAWtM,SAAS+I,eAAe,YAAY3U,MACnDsX,EAAIa,SAAWvM,SAAS+I,eAAe,mBAAmB3U,MAC1DsX,EAAIc,YAAa,UAAAxM,SAAS+I,eAAe,4BAAxB,eAA8C3U,OAC3D4L,SAAS+I,eAAe,qBAAqB3U,MAC7C,GACJsX,EAAIe,UAAW,UAAAzM,SAAS+I,eAAe,0BAAxB,eAA4C3U,OACvD4L,SAAS+I,eAAe,mBAAmB3U,MAC3C,GACJsX,EAAIgB,UAAW,UAAA1M,SAAS+I,eAAe,2BAAxB,eAA6C3U,OACxD4L,SAAS+I,eAAe,oBAAoB3U,MAC5C,IAqGUwX,aAAW,SACXrN,KAAK,QACLpK,UAAU,qBAEV,uBAAGA,UAAU,2BAKnB,kBAAC,WAAD,CAAUmE,SAAU,kBAACC,GAAA,EAAD,OACpB,kBAACoU,GAAA,EAAD,CAAe5H,OAAQA,GAAvB,OACGA,QADH,IACGA,OADH,EACGA,EAAQ5O,KAAI,SAACsD,EAAMiD,GAAP,OACX,kBAAC,WAAD,CAAUhD,IAAKgD,GACb,kBAAC,GAAD,CAAKjD,KAAMA,EAAMiD,MAAOA,EAAOqI,OAAQA,EAAQ5K,KAAMA,QAH3D,UClTN6C,GAAWC,4BAAkB,CACjCoJ,WAAYnJ,qBAAW,CAAEC,QAAS,gCAClCmJ,SAAUpJ,qBAAW,CAAEC,QAAS,6BAChCoJ,OAAQjJ,4BACNJ,qBAAW,CAAEC,QAAS,+BACtBI,+BAAqB,EAArBA,CAAwB,CACtBJ,QAAS,kDAHLG,GAMRkJ,WAAYtJ,qBAAW,QACvBO,MAAOP,qBAAW,SAClBQ,SAAUR,qBAAW,YACrBS,UAAWT,qBAAW,QACtBU,QAASV,qBAAW,U,IAqGPjC,aANE,SAACC,GAEhB,MAAO,CACLkD,OAFawO,aAAc,oBAAdA,CAAmC1R,MANpC,GAWDD,CAIbG,YAAU,CAAEC,KAAM,oBAAqBF,cAAe,GAAI6B,aAA1D5B,EAtGwB,SAAC5F,GAAW,IAElC+F,EAME/F,EANF+F,aACAC,EAKEhG,EALFgG,SACAsC,EAIEtI,EAJFsI,OACApC,EAGElG,EAHFkG,WACAC,EAEEnG,EAFFmG,QAEEnG,EADFkR,eAEF1R,QAAQC,IAAIO,GAC+BA,EAAnCuP,OAAmCvP,EAA3B2E,KAA2B3E,EAArBsW,KAAqBtW,EAAfwW,WAVO,MAWXrW,mBAAS,IAXE,mBAW5Bf,EAX4B,KAWtBiY,EAXsB,OAaflX,mBAAS,MAbM,6BAkCnC,OADAX,QAAQC,IAAIO,GAEV,kBAAC,WAAD,KACE,yBAAKrB,UAAU,kBACb,0BAAMA,UAAU,iBAAiByH,SAAUL,GACzC,kBAAC,WAAD,KACE,kBAACM,EAAA,EAAD,CACElD,KACE,kBAAC,WAAD,KACE,wBAAIxE,UAAU,SAAd,sBACA,yBAAKA,UAAU,cACb,kBAAC,KAAD,CACEW,SAAU,SAACC,GAAD,OAAO8X,EAAQ9X,IACzB4F,QAhCG,CACrB,CACEzG,MAAO,SACPE,MAAO,UAET,CACEF,MAAO,mBACPE,MAAO,mBAET,CACEF,MAAO,QACPE,MAAO,MAsBS0Y,mBAAqB,MAK7BlU,MACE,kBAAC,WAAD,KACE,kBAAC,WAAD,KACE,yBAAKzE,UAAU,QACb,kBAAC2H,EAAA,EAAD,CAAaxH,MAAI,EAAC+C,QAASyG,GAAQ,uBAAG3E,MAAM,mBAE9C,yBAAKhF,UAAU,QACb,kBAAC2H,EAAA,EAAD,CAAazE,QAASyG,GAAtB,WAEF,yBAAK3J,UAAU,QACb,kBAAC2H,EAAA,EAAD,CACErG,SAAUkG,GAAWH,GAAYE,EACjCrE,QAAS,aACTlD,UAAU,6BAHZ,aAaV,kBAACyR,EAAA,EAAD,CACEvR,KAAK,oBACLO,KAAMA,EACNsE,UAAWiT,a,4DC7EnBY,I,MAnBwB1Q,IAAM2Q,YAClC,WAA6B7V,GAAS,IAAnC8V,EAAkC,EAAlCA,cAAkBC,EAAgB,iCAC7BC,EAAa9Q,IAAMoD,SACnB2N,EAAcjW,GAAOgW,EAM3B,OAJA9Q,IAAMtF,WAAU,WACdqW,EAAYvN,QAAQoN,cAAgBA,IACnC,CAACG,EAAaH,IAGf,oCAEE,kBAACI,GAAA,EAAD,eAAUlZ,UAAU,iBAAiBgD,IAAKiW,GAAiBF,QAO9C,SAACI,EAAYC,GAAb,oBAEjBC,WAAY,OACZzC,SAAU,SAGVV,WAAYiD,EAAa,aAAe,QAGrCC,KAeWlR,IAAMoR,MAAK,YAAgC,IAAXC,EAAU,EAAVA,OAChD,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAQvX,KAAI,SAACsD,EAAMiD,GAAP,OACjB,kBAACiR,GAAD,CAAO5M,MAAOtH,EAAMiD,MAAOA,EAAOhD,IAAKgD,UAgC3C,SAASiR,GAAT,GAAkC,IAAjB5M,EAAgB,EAAhBA,MAAOrE,EAAS,EAATA,MACtB,OACE,kBAAC,KAAD,CAAWkR,YAAa7M,EAAMpH,GAAI+C,MAAOA,IACtC,SAACmR,EAASC,GAAV,OACI,sCAAI3W,IAAK0W,EAASE,UACdF,EAASG,eACTH,EAASI,gBAFb,CAGA/W,MAAO6V,GACNe,EAASR,WACTO,EAASG,eAAe9W,SAGzB,4BAAM6J,EAAMmN,gBAAZ,IAA8BnN,EAAMoN,MAApC,IAA2C,kBAACrS,EAAA,EAAD,CAAaxH,MAAI,GAAjB,IAAoB,uBAAG6E,MAAM,oBAA7B,UCpGxBkD,IAAM2Q,YAClC,WAA6B7V,GAAS,IAAnC8V,EAAkC,EAAlCA,cAAkBC,EAAgB,iCAC7BC,EAAa9Q,IAAMoD,SACnB2N,EAAcjW,GAAOgW,EAM3B,OAJA9Q,IAAMtF,WAAU,WACdqW,EAAYvN,QAAQoN,cAAgBA,IACnC,CAACG,EAAaH,IAGf,oCAEE,kBAACI,GAAA,EAAD,eAAUlZ,UAAU,iBAAiBgD,IAAKiW,GAAiBF,Q,OChBrC7Q,IAAM2Q,YAClC,WAA6B7V,GAAS,IAAnC8V,EAAkC,EAAlCA,cAAkBC,EAAgB,iCAC7BC,EAAa9Q,IAAMoD,SACnB2N,EAAcjW,GAAOgW,EAM3B,OALAnY,QAAQC,IAAIgY,GACZ5Q,IAAMtF,WAAU,WACdqW,EAAYvN,QAAQoN,cAAgBA,IACnC,CAACG,EAAaH,IAGf,oCAEE,kBAACI,GAAA,EAAD,eAAUlZ,UAAU,iBAAiBgD,IAAKiW,GAAiBF,Q,OCMjD3L,aAAW,SAACC,GAAD,MAAY,CACvC0I,KAAM,CACJC,SAAU,EACV1H,gBAAiBjB,EAAM4I,QAAQC,WAAWC,OAE5C8D,OAAQ,CACNC,cAAe,QACfC,eAAgB,iBAElB/D,OAAQ,CACNC,OAAQhJ,EAAMiJ,QAAQ,IAExBxW,MAAO,CACLyW,QAAS,QAEXC,UAAW,CACT1I,WAAYT,EAAMiJ,QAAQ,Q,QCpBbxN,4BAAkB,IDInC,ICkHMlC,GAAWC,YAAkB,qB,IAuBpBC,aArBE,SAACC,GAehB,OAdAlG,QAAQC,IAAIiG,GAcL,CACLgM,QAbanM,GACbG,EACA,OACA,OACA,cACA,aACA,iBACA,KACA,KACA,cAKAC,cAAe,MAMjB,KAFaF,CAGbG,YAAU,CAAEC,KAAM,oBAAlBD,EAhIuB,SAAC5F,GAAW,IAEjC+F,EAQE/F,EARF+F,aACAC,EAOEhG,EAPFgG,SAEAG,GAKEnG,EANFkG,WAMElG,EALFmG,SAEAuL,GAGE1R,EAJFkR,eAIElR,EAHF0R,SACAnL,EAEEvG,EAFFuG,WACApC,EACEnE,EADFmE,GAqCF,OAfA5C,qBAAU,WAEJ4C,GACFwN,eACGC,MAAK,YAAe,IAAZxE,EAAW,EAAXA,KACP5N,QAAQC,IAAI2N,GACZpN,EAAM6R,WAAN,eAAqBzE,OAGtB0E,OAAM,iBAGV,IAEHtS,QAAQC,IAAIO,GAEV,kBAAC,WAAD,KACE,yBAAKrB,UAAU,kBACb,0BAAMA,UAAU,cAAcyH,SAAUL,GACtC,kBAAC,WAAD,KACE,kBAACM,EAAA,EAAD,CACElD,KACE,kBAAC,WAAD,KACE,wBAAIxE,UAAU,SAAd,iCAGJyE,MACE,kBAAC,WAAD,KACE,kBAAC,WAAD,KACE,yBAAKzE,UAAU,QACb,kBAAC2H,EAAA,EAAD,CAAazE,QAAS0E,GAAtB,eAEF,yBAAK5H,UAAU,QACb,kBAAC2H,EAAA,EAAD,CAAazE,QAAS0E,GAAtB,WAEF,yBAAK5H,UAAU,QACb,kBAAC2H,EAAA,EAAD,CACErG,SAAUkG,GAAWH,EACrBnE,QAAS,WAxD7BrC,QAAQC,IAAIiS,IAyDQ/S,UAAU,6BAHZ,eAaV,6BACI,kBAAC0E,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK4F,GAAI,QAYrB,6BACE,kBAAChG,EAAA,EAAD,CAAMC,KAAK,4B,4ICpDN4V,GA1EO,SAAC/Y,GAAW,IACvBgZ,EAA2DhZ,EAA3DgZ,WAAYrU,EAA+C3E,EAA/C2E,KAAOqB,EAAwChG,EAAxCgG,SAAiBE,GAAuBlG,EAA9BiG,MAA8BjG,EAAvBkG,YAAYC,EAAWnG,EAAXmG,QAEvD,OADA3G,QAAQC,IAAIO,GAER,kBAAC,WAAD,KACI,kBAACqD,EAAA,EAAD,CAAK1E,UAAU,qBACb,yBACEuP,IAAK+K,aAAc,4BACnBta,UAAU,eACVoP,IAAI,QAGN,yBAAKpP,UAAU,gBAEjB,yBAAKA,UAAU,aAEdgG,EAAM,kBAACpB,EAAA,EAAD,CAAO2V,UAAQ,EAACra,KAAK,iBAAiB6E,UAAWyV,OAAqB,wBAAIxa,UAAU,SAAd,wCAE7E,wBAAIA,UAAU,SAAd,yBACA,yBAAKA,UAAU,UACf,yBAAKgF,MAAM,gCACX,kBAAC2C,EAAA,EAAD,CAAaxH,MAAI,GACZ,IACD,uBAAG6E,MAAM,uBAEX,kBAAC2C,EAAA,EAAD,CAAaxH,MAAI,GACd,IACD,uBAAG6E,MAAM,sBAEX,kBAAC2C,EAAA,EAAD,CAAaxH,MAAI,GACd,IACD,uBAAG6E,MAAM,sBAEX,kBAAC2C,EAAA,EAAD,CAAaxH,MAAI,GACd,IACD,uBAAG6E,MAAM,uBAEX,kBAAC2C,EAAA,EAAD,CAAazE,QAAS,kBAAKmX,KAAcla,MAAI,GAC3C,uBAAG6E,MAAM,sBAGZgB,EAAM,yBAAKhB,MAAM,OAChB,kBAAC2C,EAAA,EAAD,CAAa3H,UAAU,0BAAvB,UACA,kBAAC2H,EAAA,EAAD,CAAclH,KAAK,SAAUa,SAAUkG,GAAWH,GAAYE,EAAYvH,UAAU,sBAApF,SACO,IAIT,iEAEA,kBAACuE,EAAA,EAAD,CACEvE,UAAU,OACVwE,KAAK,UACLC,MACE,kBAAC,WAAD,KACE,0DACA,4DAIN,kBAACF,EAAA,EAAD,CACEC,KAAK,eACLC,MAAO,kBAAC,WAAD,iCAET,kBAACF,EAAA,EAAD,CACEC,KAAK,SACLC,MAAO,kBAAC,WAAD,oCCdNqC,oBANf,SAAyBC,EAAO1F,GAC9B,MAAO,CACH6F,KAAM,0BAIGJ,CAAyBG,YAAU,CAAEE,oBAAoB,EAAKH,cAAe,CAC1FyT,QAAQ,CAAC,MAD6BxT,EArDb,SAAC5F,GAAW,IAC7B+F,EAAgB/F,EAAhB+F,aAD4B,EAGV5F,mBAAS,GAHC,gCAIZA,oBAAS,IAJG,mBAI7BwE,EAJ6B,KAIvB0U,EAJuB,KAgB9B1Q,EAAeD,uBAAY,SAACE,GAChCpJ,QAAQC,IAAImJ,KAEX,IAEH,OACE,kBAAC,WAAD,KACE,0BAAMxC,SAAUL,EAAa4C,IAC3B,yBAAKhK,UAAU,OACb,kBAAC2E,EAAA,EAAD,CAAK4F,GAAI,EAAG1C,GAAI,GACZ,kBAAC,GAAD,eAAgBwS,WAAY,WAZtCK,GAAS1U,IAYiDA,KAAMA,GAAU3E,KAEpE,kBAACsD,EAAA,EAAD,CAAK4F,GAAI,EAAG1C,GAAI,GACd,yBAAK7H,UAAU,OACf,kBAAC,GAAD,e,yCCJNkK,GAAiB,CACrB,CACEnK,MAAO,YACPE,MAAO,KAET,CACEF,MAAO,cACPE,MAAO,KAET,CACEF,MAAO,QACPE,MAAO,MAGL0a,GAAuB,CAC3B,CACE5a,MAAO,SACPE,MAAO,KAET,CACEF,MAAO,QACPE,MAAO,KAET,CACEF,MAAO,QACPE,MAAO,MAGL2a,GAAgB,CACpB,CACE7a,MAAO,IACPE,MAAO,KAET,CACEF,MAAO,KACPE,MAAO,KAET,CACEF,MAAO,MACPE,MAAO,MA4aIgH,eAAU,CACvBC,KAAM,wBACNF,cAAe,CACb6T,SAAU,CAAC,CACT9a,MAAO,YACPE,MAAO,MAET6a,KAAK,EACLC,OAAQ,SAEVlS,SAlfe,SAACoB,GAChB,IAAM+Q,EAAS,GAkBf,OAjBK/Q,EAAOgR,SAEDhR,EAAOgR,SAAShY,OAAS,KAClC+X,EAAOC,SAAW,iCAFlBD,EAAOC,SAAW,WAIfhR,EAAOiR,MAEA,4CAA4CC,KAAKlR,EAAOiR,SAClEF,EAAOE,MAAQ,yBAFfF,EAAOE,MAAQ,WAIZjR,EAAOmR,IAEDC,MAAMC,OAAOrR,EAAOmR,MAC7BJ,EAAOI,IAAM,mBACJE,OAAOrR,EAAOmR,KAAO,KAC9BJ,EAAOI,IAAM,4CAJbJ,EAAOI,IAAM,WAMRJ,IAqdM/T,EArVe,SAAC5F,GAAW,IAChC+F,EAA8C/F,EAA9C+F,aAAcC,EAAgChG,EAAhCgG,SAAiBE,GAAelG,EAAtBiG,MAAsBjG,EAAfkG,YACvC,OACE,0BAAME,SAAUL,EAAcpH,UAAU,sBACtC,kBAACyG,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOyb,GAAI,IACxB,kBAAC7W,EAAA,EAAD,CAAO1E,KAAK,WAAW0F,YAAY,kBAAkBb,UAAW0F,IAAaC,YAAY,EAAOlE,QAAS0D,GAAgBS,aAAa,eAExI,kBAAChG,EAAA,EAAD,CAAK3E,UAAU,OAAOyb,GAAI,IAC1B,kBAAC7W,EAAA,EAAD,CAAO1E,KAAK,uBAAuB0F,YAAY,kBAAkBb,UAAW0F,IAAaC,YAAY,EAAOlE,QAASmU,MAErH,kBAAChW,EAAA,EAAD,CAAK3E,UAAU,OAAOyb,GAAI,IAC1B,kBAAC7W,EAAA,EAAD,CAAO1E,KAAK,gBAAgB0F,YAAY,gBAAgBb,UAAW0F,IAAaC,YAAY,EAAOlE,QAASoU,MAE5G,yBAAK5a,UAAU,qBACf,kBAACyG,GAAA,EAAK2M,MAAN,CAAYpT,UAAU,aAAaoI,GAAI,GAAvC,gBAGI,kBAACzD,EAAA,EAAD,CAAKyD,GAAI,GACP,kBAACxD,EAAA,EAAD,CACE1E,KAAK,MACL6E,UAAWsO,UASrB,kBAAC5M,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOyb,GAAI,IACxB,kBAAC7W,EAAA,EAAD,CACE1E,KAAK,OACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,kBAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOyb,GAAI,IACxB,kBAAC7W,EAAA,EAAD,CACE1E,KAAK,QACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,kBAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOyb,GAAI,IACxB,kBAAC7W,EAAA,EAAD,CACE1E,KAAK,QACLO,KAAK,QACLsE,UAAW6F,IACXhF,YAAY,oBAMlB,kBAACa,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,aACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,gBAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,WACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,cAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,0CACA,4BAAQ9E,MAAM,UAAd,cACA,4BAAQA,MAAM,UAAd,mBAGJ,kBAAC0E,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,MACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,SAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,OACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,UAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,MACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,SAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,iBACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,oBAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GAC1B,kBAACxD,EAAA,EAAD,CACI5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,4BAAQ9E,MAAM,UAAd,SACA,4BAAQA,MAAM,UAAd,eACA,4BAAQA,MAAM,UAAd,OACA,4BAAQA,MAAM,UAAd,eAGJ,kBAAC0E,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,eACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,kBAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,4BAAQ9E,MAAM,UAAd,SACA,4BAAQA,MAAM,UAAd,eAAmC,6BAAK,yCAAgB,qCACxD,4BAAQA,MAAM,UAAd,OACA,4BAAQA,MAAM,UAAd,gBAYN,kBAACwG,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,8CACA,4BAAQ9E,MAAM,UAAd,cACA,4BAAQA,MAAM,UAAd,mBAGJ,kBAAC0E,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,6CACA,4BAAQ9E,MAAM,UAAd,cACA,4BAAQA,MAAM,UAAd,mBAGJ,kBAAC0E,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,6CACA,4BAAQ9E,MAAM,UAAd,cACA,4BAAQA,MAAM,UAAd,mBAGJ,kBAAC0E,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,kDACA,4BAAQ9E,MAAM,UAAd,cACA,4BAAQA,MAAM,UAAd,oBAQN,kBAACwG,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACZ,kBAACxD,EAAA,EAAD,CACV1E,KAAK,mBACL6E,UAAW8F,IACX6Q,cAAe,GAEfC,WAAW,eACX/V,YAAY,wBAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IAC1B,kBAACxD,EAAA,EAAD,CACI1E,KAAK,iBACL6E,UAAW8F,IACX6Q,cAAe,GAEfC,WAAW,eACX/V,YAAY,yBAQlB,kBAACa,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,YACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,yBAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,YACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,wBAQlB,kBAACa,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,YACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,2BAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,YACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,0BAQlB,kBAACa,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,SACL6E,UAAW6W,KACXC,SAAS,YACTC,SAAS,mBAGb,kBAACnX,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,kDACA,4BAAQ9E,MAAM,UAAd,cACA,4BAAQA,MAAM,UAAd,mBAGJ,kBAAC0E,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,YACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,eAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,YACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,aAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,wCACA,4BAAQ9E,MAAM,UAAd,cACA,4BAAQA,MAAM,UAAd,oBAON,6BACI,kBAAC0H,EAAA,EAAD,CAAa3H,UAAU,gCAAiCS,KAAK,SAASa,SAAU+F,GAAYE,GAA5F,eCrWKwU,GA5Hc,SAAC,GAA4B,IAA1B/V,EAAyB,EAAzBA,KAAOgW,EAAkB,EAAlBA,aAAkB,EAC7Bxa,mBAAS,MADoB,mBAChDya,EADgD,KACzCC,EADyC,KAIvDrb,QAAQC,IAAIkF,GACZpD,qBAAU,WACRuZ,eACGlJ,MAAK,YAAe,IAAZxE,EAAW,EAAXA,KACPyN,EAASzN,EAAKA,MACd5N,QAAQC,IAAI2N,EAAKA,SAElB0E,OAAM,iBACR,IAGH,IAAMiJ,EAAUlU,IAAMmU,SACpB,iBAAM,CACJ,CACEC,OAAQ,OACRF,QAAS,CACP,CACEE,OAAQ,OACRC,SAAU,OACVC,KAAM,gBAAWvc,EAAX,EAAGwc,KAAQxc,MAAX,OACJ,2BAAI2P,KAAO3P,GAAO6P,OAAO,iBAG7B,CACEwM,OAAQ,OACRC,SAAU,KACVC,KAAM,gBAEKE,EAFL,EACJD,KACE1R,IAAO2R,SAFL,OAIA,2BAAI9M,KAAO8M,EAAS9I,MAAM9D,OAAO,aAEzC,CACEwM,OAAQ,KACRC,SAAU,OACVC,KAAM,gBAAWvc,EAAX,EAAGwc,KAAQxc,MAAX,OAAyB,2BAAIA,KAErC,CACEqc,OAAQ,OACRC,SAAU,OACVC,KAAM,gBAAWvc,EAAX,EAAGwc,KAAQxc,MAAX,OAAyB,2BAAIA,KAErC,CACEqc,OAAQ,UACRC,SAAU,UACVC,KAAM,gBAAWvc,EAAX,EAAGwc,KAAQxc,MAAX,OAAyB,2BAAIA,UAK3C,IAEFY,QAAQC,IAAImb,GACZ,IAaMU,EAAQzU,IAAMmU,SAAQ,kBAAMJ,IAAO,CAACA,IAE1C,OACE,6BAEE,kBAACvU,EAAA,EAAD,CACEjD,MACE,kBAAC,WAAD,KACI,kBAACkD,EAAA,EAAD,CACAxH,MAAI,EACJH,UAAU,8BAEV,uBAAGgF,MAAM,wBAA2B,KAEtC,kBAAC2C,EAAA,EAAD,CACExH,MAAI,EACJH,UAAU,8BAEV,uBAAGgF,MAAM,uBAEX,kBAAC2C,EAAA,EAAD,CACExH,MAAI,EACJH,UAAU,8BAEV,uBAAGgF,MAAM,yBAEV,kBAAC4X,GAAA,EAAD,CAAM5c,UAAU,OAAOD,MAAO,0BAAkBkc,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAOhZ,QAAQqN,QAAQ,aACxE,kBAAC3I,EAAA,EAAD,CACM3H,UAAU,mBACVkD,QAAS,kBAAM8Y,MAFrB,aASN,yBAAKhc,UAAU,kBACZ2c,EAEG,kBAACE,GAAA,EAAD,CACEb,aAAc,SAACpb,GAAD,OAAOC,QAAQC,IAAIF,IACjCkc,YAAY,EACZV,QAASA,EACT3N,KAAMkO,EACNI,OAzDU,aA0DVC,eApDK,SAACpc,OAsDV,aChHJuM,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0I,KAAM,CACJQ,QAAS,QAEX0D,OAAQ,CACNlM,WAAYV,EAAMW,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDgP,OAAQ5P,EAAMW,YAAYiP,OAAOC,MACjChP,SAAUb,EAAMW,YAAYE,SAASiP,iBAGzCC,YAAa,CACXC,MAAM,eAAD,OAbW,IAaX,OACLtP,WAAYV,EAAMW,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDgP,OAAQ5P,EAAMW,YAAYiP,OAAOK,QACjCpP,SAAUb,EAAMW,YAAYE,SAASqP,iBAEvCC,YAlBgB,KAoBlBlZ,MAAO,CACL0R,SAAU,GAEZyH,KAAM,CACJlH,QAAS,QAEXmH,OAAQ,CACNL,MA3BgB,IA4BhBM,WAAY,GAEdC,YAAa,CACXrQ,SAAU,SACV8P,MAhCgB,KAkClBQ,aAAa,yBACXtH,QAAS,OACTuH,WAAY,SACZC,QAAS1Q,EAAMiJ,QAAQ,EAAG,IAEvBjJ,EAAM2Q,OAAOzX,SALN,IAMV4T,eAAgB,eAElB8D,QAAQ,aACNjI,SAAU,EACV+H,QAAS1Q,EAAMiJ,QAAQ,GACvBvI,WAAYV,EAAMW,YAAYC,OAAO,SAAU,CAC7CgP,OAAQ5P,EAAMW,YAAYiP,OAAOC,MACjChP,SAAUb,EAAMW,YAAYE,SAASiP,gBAEvCK,aAjDgB,KAkDfnQ,EAAM6Q,YAAYC,KAAK,MAAQ,CAC9BX,YAAa,EACbO,QAAS1Q,EAAMiJ,QAAQ,KAG3B8H,aAAc,CACZrQ,WAAYV,EAAMW,YAAYC,OAAO,SAAU,CAC7CgP,OAAQ5P,EAAMW,YAAYiP,OAAOK,QACjCpP,SAAUb,EAAMW,YAAYE,SAASqP,iBAEvCC,YAAa,OAsFFtV,OAAMoR,KAAKxS,aALF,SAAC,GAAD,EAAGuX,UAAH,MAAoB,KAKO,KAAzBvX,EAlFF,SAACzF,GASvBR,QAAQC,IAAI,UACZ,IAAMR,EAAU6M,KACVE,EAAQiR,cAXmB,EAYTpW,IAAM1G,UAAS,GAZN,mBAY1BmB,EAZ0B,KAYpB4Q,EAZoB,KA+B3BgL,GATexU,uBAAY,kBAAMwJ,GAAS5Q,KAAO,IAS/B,yCAAG,WAAO1C,GAAP,UAAAue,EAAA,sDACzB3d,QAAQC,IAAIb,GADa,2CAAH,uDAIxB,OACE,kBAAC,WAAD,KACE,kBAACyE,EAAA,EAAD,KACE,0BACE1E,UACE,UACA0I,kBAAKpI,EAAQ2d,QAAT,eACD3d,EAAQ8d,aAAezb,KAI5B,kBAAC,GAAD,CAAsBqZ,aAAc,WA/B1CzI,GAAQ,OAiCJ,kBAACkL,EAAA,EAAD,CACEze,UAAWM,EAAQod,OACnBpN,QAAQ,aACRoO,OAAO,QACP/b,KAAMA,EACNrC,QAAS,CACP6V,MAAO7V,EAAQsd,cAGjB,yBAAK5d,UAAWM,EAAQud,cACtB,kBAACvG,EAAA,EAAD,CAAYpU,QAxCI,WACxBqQ,GAAQ,KAwCuB,QAApBlG,EAAMsR,UACL,kBAAC,IAAD,MAEA,kBAAC,IAAD,OAGJ,yBAAK3e,UAAU,SAAf,kBAEF,kBAAC4e,EAAA,EAAD,MACA,yBAAK5e,UAAU,wBACb,kBAAC,GAAD,CAAuByH,SAAU8W,YC3F9BzX,oBAPf,SAAyBC,EAAO1F,GAE9B,OADAR,QAAQC,IAAIO,EAAMwd,QACX,CACH3X,KAAM,yBAIGJ,CAAyBG,YAAU,CAAEE,oBAAoB,EAAKH,cAAe,CAC1FyT,QAAQ,CAAC,MAD6BxT,EA9CZ,SAAC5F,GAAW,IAC9B+F,EAAgB/F,EAAhB+F,aAD6B,EAGX5F,mBAAS,GAHE,gCAIbA,oBAAS,IAJI,mBAI9BwE,EAJ8B,KAIxB0U,EAJwB,KAgB/B1Q,EAAeD,uBAAY,SAACE,GAChCpJ,QAAQC,IAAImJ,KAEX,IAEH,OACE,kBAAC,WAAD,KAEI,yBAAKjK,UAAU,OACb,kBAAC2E,EAAA,EAAD,CAAKkD,GAAI,EAAGiX,GAAI,GAChB,0BAAMrX,SAAUL,EAAa4C,IACzB,kBAAC,GAAD,eAAgBqQ,WAAY,WAbtCK,GAAS1U,IAaiDA,KAAMA,GAAU3E,MAGpE,kBAACsD,EAAA,EAAD,CAAMkD,GAAI,EAAGiX,GAAI,GACf,yBAAK9e,UAAU,OACf,kBAAC,GAAD,cCsHG+e,GAnJe,SAAC,GAA4B,IAA1B/Y,EAAyB,EAAzBA,KAAOgW,EAAkB,EAAlBA,aAAkB,EAC9Bxa,mBAAS,MADqB,mBACjDya,EADiD,KAC1CC,EAD0C,OAEtB1a,mBAAS,MAFa,mBAEjDwd,EAFiD,KAEtCC,EAFsC,OAG1Bzd,mBAAS,MAHiB,mBAGjD0d,EAHiD,KAGxCC,EAHwC,KAKxDte,QAAQC,IAAIkF,GACZpD,qBAAU,WACRuZ,eACGlJ,MAAK,YAAe,IAAZxE,EAAW,EAAXA,KACPyN,EAASzN,EAAKA,MACd5N,QAAQC,IAAI2N,EAAKA,SAElB0E,OAAM,iBACR,IAGH,IAAMiJ,EAAUlU,IAAMmU,SACpB,iBAAM,CACJ,CACEC,OAAQ,OACRF,QAAS,CACP,CACEE,OAAQ,OACRC,SAAU,OACVC,KAAM,gBAAWvc,EAAX,EAAGwc,KAAQxc,MAAX,OACJ,2BAAI2P,KAAO3P,GAAO6P,OAAO,iBAG7B,CACEwM,OAAQ,OACRC,SAAU,KACVC,KAAM,gBAEKE,EAFL,EACJD,KACE1R,IAAO2R,SAFL,OAIA,2BAAI9M,KAAO8M,EAAS9I,MAAM9D,OAAO,aAEzC,CACEwM,OAAQ,KACRC,SAAU,OACVC,KAAM,gBAAWvc,EAAX,EAAGwc,KAAQxc,MAAX,OAAyB,2BAAIA,KAErC,CACEqc,OAAQ,OACRC,SAAU,OACVC,KAAM,gBAAWvc,EAAX,EAAGwc,KAAQxc,MAAX,OAAyB,2BAAIA,KAErC,CACEqc,OAAQ,UACRC,SAAU,UACVC,KAAM,gBAAWvc,EAAX,EAAGwc,KAAQxc,MAAX,OAAyB,2BAAIA,UAK3C,IAEFY,QAAQC,IAAImb,GACZ,IAaMU,EAAQzU,IAAMmU,SAAQ,kBAAMJ,IAAO,CAACA,IAE1C,OACE,6BAEE,kBAACvU,EAAA,EAAD,CACAlD,KACE,kBAAC,WAAD,KACE,6BACI,kBAAC,KAAD,CACEtE,KAAK,YACLF,UAAU,eACVoV,SAAU4J,EACVre,SAAU,SAACiT,GAAD,OAAUqL,EAAarL,IACjCwL,aAAW,KAGf,yBAAKpf,UAAU,QACb,kBAAC,KAAD,CACEE,KAAK,UACLF,UAAU,eACVoV,SAAU8J,EACVve,SAAU,SAACiT,GAAD,OAAUuL,EAAWvL,IAC/BwL,aAAW,MAKnB3a,MACE,kBAAC,WAAD,KACI,kBAACkD,EAAA,EAAD,CACAxH,MAAI,EACJH,UAAU,8BAEV,uBAAGgF,MAAM,wBAA2B,KAEtC,kBAAC2C,EAAA,EAAD,CACExH,MAAI,EACJH,UAAU,8BAEV,uBAAGgF,MAAM,uBAEX,kBAAC2C,EAAA,EAAD,CACExH,MAAI,EACJH,UAAU,8BAEV,uBAAGgF,MAAM,yBAEV,kBAAC4X,GAAA,EAAD,CAAM5c,UAAU,OAAOD,MAAO,0BAAkBkc,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAOhZ,QAAQqN,QAAQ,aACxE,kBAAC3I,EAAA,EAAD,CACM3H,UAAU,mBACVkD,QAAS,kBAAM8Y,MAFrB,aASN,yBAAKhc,UAAU,kBACZ2c,EAEG,kBAACE,GAAA,EAAD,CACEb,aAAc,SAACpb,GAAD,OAAOC,QAAQC,IAAIF,IACjCkc,YAAY,EACZV,QAASA,EACT3N,KAAMkO,EACNI,OA/EU,aAgFVC,eA1EK,SAACpc,OA4EV,aCtHJsJ,GAAiB,CACrB,CACEnK,MAAO,YACPE,MAAO,KAET,CACEF,MAAO,cACPE,MAAO,KAET,CACEF,MAAO,QACPE,MAAO,MAGL0a,GAAuB,CAC3B,CACE5a,MAAO,SACPE,MAAO,KAET,CACEF,MAAO,QACPE,MAAO,KAET,CACEF,MAAO,QACPE,MAAO,MAGL2a,GAAgB,CACpB,CACE7a,MAAO,IACPE,MAAO,KAET,CACEF,MAAO,KACPE,MAAO,KAET,CACEF,MAAO,MACPE,MAAO,MAkbIgH,eAAU,CACvBC,KAAM,yBACNF,cAAe,CACb6T,SAAU,CAAC,CACT9a,MAAO,YACPE,MAAO,MAET6a,KAAK,EACLC,OAAQ,SAEVlS,SAxfe,SAACoB,GAChB,IAAM+Q,EAAS,GAkBf,OAjBK/Q,EAAOgR,SAEDhR,EAAOgR,SAAShY,OAAS,KAClC+X,EAAOC,SAAW,iCAFlBD,EAAOC,SAAW,WAIfhR,EAAOiR,MAEA,4CAA4CC,KAAKlR,EAAOiR,SAClEF,EAAOE,MAAQ,yBAFfF,EAAOE,MAAQ,WAIZjR,EAAOmR,IAEDC,MAAMC,OAAOrR,EAAOmR,MAC7BJ,EAAOI,IAAM,mBACJE,OAAOrR,EAAOmR,KAAO,KAC9BJ,EAAOI,IAAM,4CAJbJ,EAAOI,IAAM,WAMRJ,IA2dM/T,EA3VgB,SAAC5F,GAAW,IACjC+F,EAA8C/F,EAA9C+F,aAAcC,EAAgChG,EAAhCgG,SAAiBE,GAAelG,EAAtBiG,MAAsBjG,EAAfkG,YACvC,OACE,0BAAME,SAAUL,EAAcpH,UAAU,sBACtC,kBAACyG,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOyb,GAAI,IACxB,kBAAC7W,EAAA,EAAD,CAAO1E,KAAK,WAAW0F,YAAY,kBAAkBb,UAAW0F,IAAaC,YAAY,EAAOlE,QAAS0D,GAAgBS,aAAa,eAExI,kBAAChG,EAAA,EAAD,CAAK3E,UAAU,OAAOyb,GAAI,IAC1B,kBAAC7W,EAAA,EAAD,CAAO1E,KAAK,uBAAuB0F,YAAY,kBAAkBb,UAAW0F,IAAaC,YAAY,EAAOlE,QAASmU,MAErH,kBAAChW,EAAA,EAAD,CAAK3E,UAAU,OAAOyb,GAAI,IAC1B,kBAAC7W,EAAA,EAAD,CAAO1E,KAAK,gBAAgB0F,YAAY,gBAAgBb,UAAW0F,IAAaC,YAAY,EAAOlE,QAASoU,MAE5G,yBAAK5a,UAAU,qBACf,kBAACyG,GAAA,EAAK2M,MAAN,CAAYpT,UAAU,aAAaoI,GAAI,GAAvC,gBAGI,kBAACzD,EAAA,EAAD,CAAKyD,GAAI,GACP,kBAACxD,EAAA,EAAD,CACE1E,KAAK,MACL6E,UAAWsO,UASrB,kBAAC5M,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOyb,GAAI,IACxB,kBAAC7W,EAAA,EAAD,CACE1E,KAAK,OACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,kBAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOyb,GAAI,IACxB,kBAAC7W,EAAA,EAAD,CACE1E,KAAK,QACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,kBAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOyb,GAAI,IACxB,kBAAC7W,EAAA,EAAD,CACE1E,KAAK,QACLO,KAAK,QACLsE,UAAW6F,IACXhF,YAAY,oBAMlB,kBAACa,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,aACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,gBAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,WACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,cAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,0CACA,4BAAQ9E,MAAM,UAAd,cACA,4BAAQA,MAAM,UAAd,mBAGJ,kBAAC0E,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,MACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,SAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,OACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,UAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,MACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,SAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,iBACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,oBAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GAC1B,kBAACxD,EAAA,EAAD,CACI5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,4BAAQ9E,MAAM,UAAd,SACA,4BAAQA,MAAM,UAAd,eACA,4BAAQA,MAAM,UAAd,OACA,4BAAQA,MAAM,UAAd,eAGJ,kBAAC0E,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,eACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,kBAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,4BAAQ9E,MAAM,UAAd,SACA,4BAAQA,MAAM,UAAd,eAAmC,6BAAK,yCAAgB,qCACxD,4BAAQA,MAAM,UAAd,OACA,4BAAQA,MAAM,UAAd,gBAYN,kBAACwG,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,8CACA,4BAAQ9E,MAAM,UAAd,cACA,4BAAQA,MAAM,UAAd,mBAGJ,kBAAC0E,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,6CACA,4BAAQ9E,MAAM,UAAd,cACA,4BAAQA,MAAM,UAAd,mBAGJ,kBAAC0E,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,6CACA,4BAAQ9E,MAAM,UAAd,cACA,4BAAQA,MAAM,UAAd,mBAGJ,kBAAC0E,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,kDACA,4BAAQ9E,MAAM,UAAd,cACA,4BAAQA,MAAM,UAAd,oBAQN,kBAACwG,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACZ,kBAACxD,EAAA,EAAD,CACV1E,KAAK,mBACL6E,UAAW8F,IACX6Q,cAAe,GAEfC,WAAW,eACX/V,YAAY,wBAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IAC1B,kBAACxD,EAAA,EAAD,CACI1E,KAAK,iBACL6E,UAAW8F,IACX6Q,cAAe,GAEfC,WAAW,eACX/V,YAAY,yBAQlB,kBAACa,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,YACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,yBAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,YACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,wBAQlB,kBAACa,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,YACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,2BAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,YACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,0BAQlB,kBAACa,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,SACL6E,UAAW6W,KACXC,SAAS,YACTC,SAAS,mBAGb,kBAACnX,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,kDACA,4BAAQ9E,MAAM,UAAd,cACA,4BAAQA,MAAM,UAAd,mBAGJ,kBAAC0E,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,YACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,eAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,YACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,aAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,wCACA,4BAAQ9E,MAAM,UAAd,cACA,4BAAQA,MAAM,UAAd,oBAON,6BACI,kBAAC0H,EAAA,EAAD,CAAa3H,UAAU,gCAAiCS,KAAK,SAASa,SAAU+F,GAAYE,GAA5F,eC5dJ4F,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0I,KAAM,CACJQ,QAAS,QAEX0D,OAAQ,CACNlM,WAAYV,EAAMW,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDgP,OAAQ5P,EAAMW,YAAYiP,OAAOC,MACjChP,SAAUb,EAAMW,YAAYE,SAASiP,iBAGzCC,YAAa,CACXC,MAAM,eAAD,OAbW,IAaX,OACLtP,WAAYV,EAAMW,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDgP,OAAQ5P,EAAMW,YAAYiP,OAAOK,QACjCpP,SAAUb,EAAMW,YAAYE,SAASqP,iBAEvCC,YAlBgB,KAoBlBlZ,MAAO,CACL0R,SAAU,GAEZyH,KAAM,CACJlH,QAAS,QAEXmH,OAAQ,CACNL,MA3BgB,IA4BhBM,WAAY,GAEdC,YAAa,CACXrQ,SAAU,SACV8P,MAhCgB,KAkClBQ,aAAa,yBACXtH,QAAS,OACTuH,WAAY,SACZC,QAAS1Q,EAAMiJ,QAAQ,EAAG,IAEvBjJ,EAAM2Q,OAAOzX,SALN,IAMV4T,eAAgB,eAElB8D,QAAQ,aACNjI,SAAU,EACV+H,QAAS1Q,EAAMiJ,QAAQ,GACvBvI,WAAYV,EAAMW,YAAYC,OAAO,SAAU,CAC7CgP,OAAQ5P,EAAMW,YAAYiP,OAAOC,MACjChP,SAAUb,EAAMW,YAAYE,SAASiP,gBAEvCK,aAjDgB,KAkDfnQ,EAAM6Q,YAAYC,KAAK,MAAQ,CAC9BX,YAAa,EACbO,QAAS1Q,EAAMiJ,QAAQ,KAG3B8H,aAAc,CACZrQ,WAAYV,EAAMW,YAAYC,OAAO,SAAU,CAC7CgP,OAAQ5P,EAAMW,YAAYiP,OAAOK,QACjCpP,SAAUb,EAAMW,YAAYE,SAASqP,iBAEvCC,YAAa,OAsFFtV,OAAMoR,KAAKxS,aALF,SAAC,GAAD,EAAGuX,UAAH,MAAoB,KAKO,KAAzBvX,EAlFD,SAACzF,GASxBR,QAAQC,IAAI,UACZ,IAAMR,EAAU6M,KACVE,EAAQiR,cAXoB,EAYVpW,IAAM1G,UAAS,GAZL,mBAY3BmB,EAZ2B,KAYrB4Q,EAZqB,KA+B5BgL,GATexU,uBAAY,kBAAMwJ,GAAS5Q,KAAO,IAS/B,yCAAG,WAAO1C,GAAP,UAAAue,EAAA,sDACzB3d,QAAQC,IAAIb,GADa,2CAAH,uDAIxB,OACE,kBAAC,WAAD,KACE,kBAACyE,EAAA,EAAD,KACE,0BACE1E,UACE,UACA0I,kBAAKpI,EAAQ2d,QAAT,eACD3d,EAAQ8d,aAAezb,KAI5B,kBAAC,GAAD,CAAuBqZ,aAAc,WA/B3CzI,GAAQ,OAiCJ,kBAACkL,EAAA,EAAD,CACEze,UAAWM,EAAQod,OACnBpN,QAAQ,aACRoO,OAAO,QACP/b,KAAMA,EACNrC,QAAS,CACP6V,MAAO7V,EAAQsd,cAGjB,yBAAK5d,UAAWM,EAAQud,cACtB,kBAACvG,EAAA,EAAD,CAAYpU,QAxCI,WACxBqQ,GAAQ,KAwCuB,QAApBlG,EAAMsR,UACL,kBAAC,IAAD,MAEA,kBAAC,IAAD,OAGJ,yBAAK3e,UAAU,SAAf,kBAEF,kBAAC4e,EAAA,EAAD,MACA,yBAAK5e,UAAU,wBACb,kBAAC,GAAD,CAAwByH,SAAU8W,YC1F/BzX,oBAPf,SAAyBC,EAAO1F,GAE9B,OADAR,QAAQC,IAAIO,EAAMwd,QACX,CACH3X,KAAM,0BAIGJ,CAAyBG,YAAU,CAAEE,oBAAoB,EAAKH,cAAe,CAC1FyT,QAAQ,CAAC,MAD6BxT,EAhDX,SAAC5F,GAAW,IAC/B+F,EAAgB/F,EAAhB+F,aAD8B,EAGZ5F,mBAAS,GAHG,gCAIdA,oBAAS,IAJK,mBAI/BwE,EAJ+B,KAIzB0U,EAJyB,KAgBhC1Q,EAAeD,uBAAY,SAACE,GAChCpJ,QAAQC,IAAImJ,KAEX,IAEH,OACE,kBAAC,WAAD,KAEI,yBAAKjK,UAAU,OACb,kBAAC2E,EAAA,EAAD,CAAKkD,GAAI,EAAGiX,GAAI,GAChB,0BAAMrX,SAAUL,EAAa4C,IACzB,kBAAC,GAAD,eAAgBqQ,WAAY,WAbtCK,GAAS1U,IAaiDA,KAAMA,GAAU3E,MAGpE,kBAACsD,EAAA,EAAD,CAAMkD,GAAI,EAAGiX,GAAI,GACf,yBAAK9e,UAAU,OACf,kBAAC,GAAD,cCFG8G,aANf,SAAyBC,EAAO1F,GAC9B,MAAO,CACH6F,KAAM7F,EAAMge,YAIHvY,CAAyBG,YAAU,CAAEE,oBAAoB,EAAKH,cAAe,IAApDC,EA7Bd,SAAC5F,GAAW,IAC5B+F,EAAuD/F,EAAvD+F,aAAuD/F,EAAzCgG,SAAyChG,EAA/BiG,MAA+BjG,EAAxBkG,WAAwBlG,EAAZmG,QAInD,OAFA3G,QAAQC,IAAI,UAGV,kBAAC,WAAD,KACE,0BAAM2G,SAAUL,GACfc,IAAMoX,aAAaje,EAAMoU,gBCOjB3O,oBANf,SAAyBC,EAAO1F,GAC9B,MAAO,CACH6F,KAAM7F,EAAMge,YAIHvY,CAAyBG,YAAU,CAAEE,oBAAoB,GAAhCF,EAlBpB,SAAC5F,GAAW,IACtB+F,EAAgB/F,EAAhB+F,aAER,OACE,kBAAC,WAAD,KACE,0BAAMK,SAAUL,GACfc,IAAMoX,aAAaje,EAAMoU,gBCS1B5M,GAAWC,4BAAkB,CACjCoJ,WAAYnJ,qBAAW,CAAEC,QAAS,gCAClCmJ,SAAUpJ,qBAAW,CAAEC,QAAS,6BAChCoJ,OAAQjJ,4BACNJ,qBAAW,CAAEC,QAAS,+BACtBI,+BAAqB,EAArBA,CAAwB,CACtBJ,QAAS,kDAHLG,GAMRkJ,WAAYtJ,qBAAW,QACvBO,MAAOP,qBAAW,SAClBQ,SAAUR,qBAAW,YACrBS,UAAWT,qBAAW,QACtBU,QAASV,qBAAW,UAsEhBnC,GAAWC,YAAkB,eAapBC,gBAZE,SAACC,GAQhB,MAAO,CACLuL,YARa1L,GACbG,EACA,aACA,WACA,aACA,aAXY,GAiBDD,CAIbG,YAAU,CAAEC,KAAM,sBAAuBF,cAAe,GAAI6B,aAA5D5B,EApF0B,SAAC5F,GAAW,IAEpC+F,EAOE/F,EAPF+F,aACAC,EAMEhG,EANFgG,SACAsC,EAKEtI,EALFsI,OACApC,EAIElG,EAJFkG,WACAC,EAGEnG,EAHFmG,QAKIwC,GAFF3I,EAFFkR,eAEElR,EADFiR,YAGgB,yCAAG,WAAOrI,GAAP,UAAAuU,EAAA,sDACnB3d,QAAQC,IAAI,cACZD,QAAQC,IAAImJ,GAFO,2CAAH,uDAMlB,OADApJ,QAAQC,IAAIO,GAEV,kBAAC,WAAD,KACE,yBAAKrB,UAAU,kBACb,0BAAMA,UAAU,cAAcyH,SAAUL,EAAa4C,IACnD,kBAAC,WAAD,KACE,kBAACtC,EAAA,EAAD,CACElD,KACE,kBAAC,WAAD,KACE,wBAAIxE,UAAU,SAAd,iBAGJyE,MACE,kBAAC,WAAD,KACE,kBAAC,WAAD,KACE,yBAAKzE,UAAU,QACb,kBAAC2H,EAAA,EAAD,CAAazE,QAASyG,GAAtB,WAEF,yBAAK3J,UAAU,QACb,kBAAC2H,EAAA,EAAD,CACErG,SAAUkG,GAAWH,GAAYE,EACjC9G,KAAK,SACLT,UAAU,6BAHZ,aAaV,yBAAKA,UAAU,qBACb,kBAACyG,GAAA,EAAK2M,MAAN,CAAYpT,UAAU,oBAAoBoI,GAAI,GAA9C,oCAGA,kBAACzD,EAAA,EAAD,CAAKyD,GAAI,GACP,kBAACxD,EAAA,EAAD,CAAQ1E,KAAK,qBAAqB6E,UAAWsO,iBCgI9CkM,GAxMO,SAACle,GAAW,IAAD,EACaG,mBAAS,GADtB,mBACxBge,EADwB,KACRC,EADQ,OAEGvX,IAAM1G,UAAS,GAFlB,mBAExBoI,EAFwB,KAEbC,EAFa,OAGiB3B,IAAM1G,UAAS,GAHhC,mBAGxBke,EAHwB,KAGNC,EAHM,KASzBC,EAAsB,CAC1B,CACE7f,MAAO,QACPE,MAAO,KAET,CACEF,MAAO,QACPE,MAAO,KAET,CACEF,MAAO,QACPE,MAAO,MAIX,OADAY,QAAQC,IAAIO,GAEV,kBAAC,WAAD,KACGuI,EACC,kBAACO,EAAA,EAAD,CAAcG,KAAMV,EAAWD,OAAQ,kBAAME,GAAa,KACxD,6BACE,kBAACgI,EAAA,EAAD,CACEjK,WAAY,kBAAMiC,GAAa,IAC/BpC,SA3BU,SAAC7G,GACzBC,QAAQC,IAAIF,GACZ6e,EAAkBD,EAAiB,QA8B3B,GAEDE,EACC,kBAACvV,EAAA,EAAD,CAAcC,KAAK,KAAKE,KAAMoV,EAAkB/V,OAAQ,kBAAMgW,GAAoB,KAChF,6BACE,kBAAC,GAAD,CAAqB/X,WAAY,kBAAM+X,GAAoB,QAK/D,GAEF,kBAACjb,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKma,GAAI,IACP,kBAAC,GAAD,CAAaO,SAAUhe,EAAMge,UAC3B,kBAAC,WAAD,KACE,kBAAC3X,EAAA,EAAD,CACEjD,MACE,kBAAC,WAAD,KACE,kBAACkD,EAAA,EAAD,CAAaxH,MAAI,GACf,uBAAG6E,MAAM,sBAEX,kBAAC2C,EAAA,EAAD,CAAazE,QAAS,kBAAKyc,GAAoB,IAAOxf,MAAI,GACxD,uBAAG6E,MAAM,uBAKjB,wBAAIhF,UAAU,SAAd,gBACA,kBAAC0E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKkD,GAAI,GACP,kBAACtD,EAAA,EAAD,CACEC,KAAK,cACLC,MACE,kBAACG,EAAA,EAAD,CACE1E,KAAK,aACL0F,YAAY,kBACZb,UAAW0F,IACXC,YAAY,EACZlE,QAASoZ,MAIf,kBAACrb,EAAA,EAAD,CACEC,KAAK,OACLC,MACE,kBAACG,EAAA,EAAD,CACE1E,KAAK,WACL0F,YAAY,cACZb,UAAW8F,SAKnB,kBAAClG,EAAA,EAAD,CAAKkD,GAAI,GACP,kBAACtD,EAAA,EAAD,CACEC,KAAK,SACLC,MACE,kBAACG,EAAA,EAAD,CACE1E,KAAK,aACL0F,YAAY,kBACZb,UAAW0F,IACXC,YAAY,EACZlE,QAASoZ,OAKjB,kBAACjb,EAAA,EAAD,CAAKkD,GAAI,GACP,kBAACtD,EAAA,EAAD,CACEC,KAAK,SACLC,MACE,kBAAC,WAAD,KACE,kBAACG,EAAA,EAAD,CACE1E,KAAK,MACL6E,UAAWlF,KACXM,MAAI,EACJJ,MAAO,uBAAGiF,MAAM,qBAElB,kBAACJ,EAAA,EAAD,CACE1E,KAAK,WACL6E,UAAWlF,KACXM,MAAI,EACJJ,MAAO,uBAAGiF,MAAM,0BAElB,kBAACJ,EAAA,EAAD,CACE1E,KAAK,QACL6E,UAAWlF,KACXM,MAAI,EACJJ,MAAO,uBAAGiF,MAAM,oCAO5B,wBAAIhF,UAAU,SAAd,oBACA,kBAAC0E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKkD,GAAI,GACP,kBAACtD,EAAA,EAAD,CACEC,KAAK,UACLC,MAAO,kBAACG,EAAA,EAAD,CAAO1E,KAAK,MAAM6E,UAAW6F,SAGxC,kBAACjG,EAAA,EAAD,CAAKkD,GAAI,GACP,kBAACtD,EAAA,EAAD,CACEC,KAAK,MACLC,MACE,kBAACG,EAAA,EAAD,CACE1E,KAAK,SACL6E,UAAWsO,KACXwM,UAAU,QACVC,WAAW,aAKnB,kBAACnb,EAAA,EAAD,CAAKkD,GAAI,OAKf,kBAACH,EAAA,EAAD,CACElD,KAAM,wBAAIxE,UAAU,SAAd,aACNyE,MACE,kBAAC,WAAD,KACE,kBAACkD,EAAA,EAAD,CAAa3H,UAAU,yBAAvB,SACS,KAET,kBAAC2H,EAAA,EAAD,CACE3H,UAAU,4BACVkD,QAAS,kBAAM2G,GAAa,KAF9B,UAUN,kBAAC,GAAD,CAAawV,SAAUhe,EAAMge,UAC3B,kBAAC,WAAD,KACE,kBAAC5N,EAAA,EAAD,CACEsL,OAAQyC,EACRtf,KAAK,WACL6E,UAAWgN,SAKnB,kBAACpN,EAAA,EAAD,CAAKma,GAAI,GACP,yBAAK9e,UAAU,QACb,wBAAIA,UAAU,SAAd,gBACA,kBAACuE,EAAA,EAAD,CAAMua,GAAI,EAAGta,KAAK,aAAaC,MAAM,kBAEvC,yBAAKzE,UAAU,QACb,wBAAIA,UAAU,SAAd,oBACA,kBAACuE,EAAA,EAAD,CAAQua,GAAI,EAAGta,KAAK,UAAUC,MAAO,kBAACG,EAAA,EAAD,CAAO1E,KAAK,UAAU6E,UAAW6F,aC/JnE9D,oBANf,SAAyBC,EAAO1F,GAC9B,MAAO,CACH6F,KAAM,uBAIGJ,CAAyBG,YAAU,CAAEE,oBAAoB,EAAKH,cAAe,IAApDC,EA3Cd,SAAC5F,GAAW,IAC5B+F,EAAgB/F,EAAhB+F,aAD2B,EAGT5F,mBAAS,GAHA,gCAIXA,oBAAS,IAJE,mBAI5BwE,EAJ4B,KAItB0U,EAJsB,KAY7B1Q,EAAeD,uBAAY,SAACE,GAChCpJ,QAAQC,IAAImJ,KAEX,IAEH,OACE,kBAAC,WAAD,KAEI,yBAAKjK,UAAU,OACb,kBAAC2E,EAAA,EAAD,CAAKkD,GAAI,EAAGiX,GAAI,GAChB,0BAAMrX,SAAUL,EAAa4C,IACzB,kBAAC,GAAD,eAAgBqQ,WAAY,WAbtCK,GAAS1U,IAaiDA,KAAMA,GAAU3E,MAGpE,kBAACsD,EAAA,EAAD,CAAMkD,GAAI,EAAGiX,GAAI,GACf,yBAAK9e,UAAU,OACf,kBAAC,GAAD,CAAeqf,SAAUhe,EAAM6F,eCFrCgD,GAAiB,CACrB,CACEnK,MAAO,YACPE,MAAO,KAET,CACEF,MAAO,cACPE,MAAO,KAET,CACEF,MAAO,QACPE,MAAO,MAGL0a,GAAuB,CAC3B,CACE5a,MAAO,SACPE,MAAO,KAET,CACEF,MAAO,QACPE,MAAO,KAET,CACEF,MAAO,QACPE,MAAO,MAGL2a,GAAgB,CACpB,CACE7a,MAAO,IACPE,MAAO,KAET,CACEF,MAAO,KACPE,MAAO,KAET,CACEF,MAAO,MACPE,MAAO,MAkbIgH,eAAU,CACvBC,KAAM,uBACNF,cAAe,CACb6T,SAAU,CAAC,CACT9a,MAAO,YACPE,MAAO,MAET6a,KAAK,EACLC,OAAQ,SAEVlS,SAxfe,SAACoB,GAChB,IAAM+Q,EAAS,GAkBf,OAjBK/Q,EAAOgR,SAEDhR,EAAOgR,SAAShY,OAAS,KAClC+X,EAAOC,SAAW,iCAFlBD,EAAOC,SAAW,WAIfhR,EAAOiR,MAEA,4CAA4CC,KAAKlR,EAAOiR,SAClEF,EAAOE,MAAQ,yBAFfF,EAAOE,MAAQ,WAIZjR,EAAOmR,IAEDC,MAAMC,OAAOrR,EAAOmR,MAC7BJ,EAAOI,IAAM,mBACJE,OAAOrR,EAAOmR,KAAO,KAC9BJ,EAAOI,IAAM,4CAJbJ,EAAOI,IAAM,WAMRJ,IA2dM/T,EA3Vc,SAAC5F,GAAW,IAC/B+F,EAA8C/F,EAA9C+F,aAAcC,EAAgChG,EAAhCgG,SAAiBE,GAAelG,EAAtBiG,MAAsBjG,EAAfkG,YACvC,OACE,0BAAME,SAAUL,EAAcpH,UAAU,sBACtC,kBAACyG,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOyb,GAAI,IACxB,kBAAC7W,EAAA,EAAD,CAAO1E,KAAK,WAAW0F,YAAY,kBAAkBb,UAAW0F,IAAaC,YAAY,EAAOlE,QAAS0D,GAAgBS,aAAa,eAExI,kBAAChG,EAAA,EAAD,CAAK3E,UAAU,OAAOyb,GAAI,IAC1B,kBAAC7W,EAAA,EAAD,CAAO1E,KAAK,uBAAuB0F,YAAY,kBAAkBb,UAAW0F,IAAaC,YAAY,EAAOlE,QAASmU,MAErH,kBAAChW,EAAA,EAAD,CAAK3E,UAAU,OAAOyb,GAAI,IAC1B,kBAAC7W,EAAA,EAAD,CAAO1E,KAAK,gBAAgB0F,YAAY,gBAAgBb,UAAW0F,IAAaC,YAAY,EAAOlE,QAASoU,MAE5G,yBAAK5a,UAAU,qBACf,kBAACyG,GAAA,EAAK2M,MAAN,CAAYpT,UAAU,aAAaoI,GAAI,GAAvC,gBAGI,kBAACzD,EAAA,EAAD,CAAKyD,GAAI,GACP,kBAACxD,EAAA,EAAD,CACE1E,KAAK,MACL6E,UAAWsO,UASrB,kBAAC5M,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOyb,GAAI,IACxB,kBAAC7W,EAAA,EAAD,CACE1E,KAAK,OACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,kBAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOyb,GAAI,IACxB,kBAAC7W,EAAA,EAAD,CACE1E,KAAK,QACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,kBAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOyb,GAAI,IACxB,kBAAC7W,EAAA,EAAD,CACE1E,KAAK,QACLO,KAAK,QACLsE,UAAW6F,IACXhF,YAAY,oBAMlB,kBAACa,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,aACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,gBAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,WACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,cAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,0CACA,4BAAQ9E,MAAM,UAAd,cACA,4BAAQA,MAAM,UAAd,mBAGJ,kBAAC0E,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,MACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,SAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,OACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,UAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,MACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,SAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,iBACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,oBAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GAC1B,kBAACxD,EAAA,EAAD,CACI5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,4BAAQ9E,MAAM,UAAd,SACA,4BAAQA,MAAM,UAAd,eACA,4BAAQA,MAAM,UAAd,OACA,4BAAQA,MAAM,UAAd,eAGJ,kBAAC0E,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,eACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,kBAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,4BAAQ9E,MAAM,UAAd,SACA,4BAAQA,MAAM,UAAd,eAAmC,6BAAK,yCAAgB,qCACxD,4BAAQA,MAAM,UAAd,OACA,4BAAQA,MAAM,UAAd,gBAYN,kBAACwG,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,8CACA,4BAAQ9E,MAAM,UAAd,cACA,4BAAQA,MAAM,UAAd,mBAGJ,kBAAC0E,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,6CACA,4BAAQ9E,MAAM,UAAd,cACA,4BAAQA,MAAM,UAAd,mBAGJ,kBAAC0E,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,6CACA,4BAAQ9E,MAAM,UAAd,cACA,4BAAQA,MAAM,UAAd,mBAGJ,kBAAC0E,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,kDACA,4BAAQ9E,MAAM,UAAd,cACA,4BAAQA,MAAM,UAAd,oBAQN,kBAACwG,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACZ,kBAACxD,EAAA,EAAD,CACV1E,KAAK,mBACL6E,UAAW8F,IACX6Q,cAAe,GAEfC,WAAW,eACX/V,YAAY,wBAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IAC1B,kBAACxD,EAAA,EAAD,CACI1E,KAAK,iBACL6E,UAAW8F,IACX6Q,cAAe,GAEfC,WAAW,eACX/V,YAAY,yBAQlB,kBAACa,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,YACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,yBAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,YACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,wBAQlB,kBAACa,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,YACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,2BAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,YACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,0BAQlB,kBAACa,GAAA,EAAK8U,MAAN,CAAYC,GAAI9W,KACd,kBAACC,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,SACL6E,UAAW6W,KACXC,SAAS,YACTC,SAAS,mBAGb,kBAACnX,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,kDACA,4BAAQ9E,MAAM,UAAd,cACA,4BAAQA,MAAM,UAAd,mBAGJ,kBAAC0E,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,YACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,eAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,GACxB,kBAACxD,EAAA,EAAD,CACE1E,KAAK,YACLO,KAAK,OACLsE,UAAW6F,IACXhF,YAAY,aAGhB,kBAACjB,EAAA,EAAD,CAAK3E,UAAU,OAAOoI,GAAI,IACxB,kBAACxD,EAAA,EAAD,CACE5E,UAAU,4BACVE,KAAK,gBACL6E,UAAU,UAEV,wCACA,4BAAQ9E,MAAM,UAAd,cACA,4BAAQA,MAAM,UAAd,oBAON,6BACI,kBAAC0H,EAAA,EAAD,CAAa3H,UAAU,gCAAiCS,KAAK,SAASa,SAAU+F,GAAYE,GAA5F,eC5UKwY,GAnJa,SAAC,GAA4B,IAA1B/Z,EAAyB,EAAzBA,KAAOgW,EAAkB,EAAlBA,aAAkB,EAC5Bxa,mBAAS,MADmB,mBAC/Cya,EAD+C,KACxCC,EADwC,OAEpB1a,mBAAS,MAFW,mBAE/Cwd,EAF+C,KAEpCC,EAFoC,OAGxBzd,mBAAS,MAHe,mBAG/C0d,EAH+C,KAGtCC,EAHsC,KAKtDte,QAAQC,IAAIkF,GACZpD,qBAAU,WACRuZ,eACGlJ,MAAK,YAAe,IAAZxE,EAAW,EAAXA,KACPyN,EAASzN,EAAKA,MACd5N,QAAQC,IAAI2N,EAAKA,SAElB0E,OAAM,iBACR,IAGH,IAAMiJ,EAAUlU,IAAMmU,SACpB,iBAAM,CACJ,CACEC,OAAQ,OACRF,QAAS,CACP,CACEE,OAAQ,OACRC,SAAU,OACVC,KAAM,gBAAWvc,EAAX,EAAGwc,KAAQxc,MAAX,OACJ,2BAAI2P,KAAO3P,GAAO6P,OAAO,iBAG7B,CACEwM,OAAQ,OACRC,SAAU,KACVC,KAAM,gBAEKE,EAFL,EACJD,KACE1R,IAAO2R,SAFL,OAIA,2BAAI9M,KAAO8M,EAAS9I,MAAM9D,OAAO,aAEzC,CACEwM,OAAQ,KACRC,SAAU,OACVC,KAAM,gBAAWvc,EAAX,EAAGwc,KAAQxc,MAAX,OAAyB,2BAAIA,KAErC,CACEqc,OAAQ,OACRC,SAAU,OACVC,KAAM,gBAAWvc,EAAX,EAAGwc,KAAQxc,MAAX,OAAyB,2BAAIA,KAErC,CACEqc,OAAQ,UACRC,SAAU,UACVC,KAAM,gBAAWvc,EAAX,EAAGwc,KAAQxc,MAAX,OAAyB,2BAAIA,UAK3C,IAEFY,QAAQC,IAAImb,GACZ,IAaMU,EAAQzU,IAAMmU,SAAQ,kBAAMJ,IAAO,CAACA,IAE1C,OACE,6BAEE,kBAACvU,EAAA,EAAD,CACAlD,KACE,kBAAC,WAAD,KACE,6BACI,kBAAC,KAAD,CACEtE,KAAK,YACLF,UAAU,eACVoV,SAAU4J,EACVre,SAAU,SAACiT,GAAD,OAAUqL,EAAarL,IACjCwL,aAAW,KAGf,yBAAKpf,UAAU,QACb,kBAAC,KAAD,CACEE,KAAK,UACLF,UAAU,eACVoV,SAAU8J,EACVve,SAAU,SAACiT,GAAD,OAAUuL,EAAWvL,IAC/BwL,aAAW,MAKnB3a,MACE,kBAAC,WAAD,KACI,kBAACkD,EAAA,EAAD,CACAxH,MAAI,EACJH,UAAU,8BAEV,uBAAGgF,MAAM,wBAA2B,KAEtC,kBAAC2C,EAAA,EAAD,CACExH,MAAI,EACJH,UAAU,8BAEV,uBAAGgF,MAAM,uBAEX,kBAAC2C,EAAA,EAAD,CACExH,MAAI,EACJH,UAAU,8BAEV,uBAAGgF,MAAM,yBAEV,kBAAC4X,GAAA,EAAD,CAAM5c,UAAU,OAAOD,MAAO,0BAAkBkc,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAOhZ,QAAQqN,QAAQ,aACxE,kBAAC3I,EAAA,EAAD,CACM3H,UAAU,mBACVkD,QAAS,kBAAM8Y,MAFrB,aASN,yBAAKhc,UAAU,kBACZ2c,EAEG,kBAACE,GAAA,EAAD,CACEb,aAAc,SAACpb,GAAD,OAAOC,QAAQC,IAAIF,IACjCkc,YAAY,EACZV,QAASA,EACT3N,KAAMkO,EACNI,OA/EU,aAgFVC,eA1EK,SAACpc,OA4EV,aCzIJuM,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0I,KAAM,CACJQ,QAAS,QAEX0D,OAAQ,CACNlM,WAAYV,EAAMW,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDgP,OAAQ5P,EAAMW,YAAYiP,OAAOC,MACjChP,SAAUb,EAAMW,YAAYE,SAASiP,iBAGzCC,YAAa,CACXC,MAAM,eAAD,OAbW,IAaX,OACLtP,WAAYV,EAAMW,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDgP,OAAQ5P,EAAMW,YAAYiP,OAAOK,QACjCpP,SAAUb,EAAMW,YAAYE,SAASqP,iBAEvCC,YAlBgB,KAoBlBlZ,MAAO,CACL0R,SAAU,GAEZyH,KAAM,CACJlH,QAAS,QAEXmH,OAAQ,CACNL,MA3BgB,IA4BhBM,WAAY,GAEdC,YAAa,CACXrQ,SAAU,SACV8P,MAhCgB,KAkClBQ,aAAa,yBACXtH,QAAS,OACTuH,WAAY,SACZC,QAAS1Q,EAAMiJ,QAAQ,EAAG,IAEvBjJ,EAAM2Q,OAAOzX,SALN,IAMV4T,eAAgB,eAElB8D,QAAQ,aACNjI,SAAU,EACV+H,QAAS1Q,EAAMiJ,QAAQ,GACvBvI,WAAYV,EAAMW,YAAYC,OAAO,SAAU,CAC7CgP,OAAQ5P,EAAMW,YAAYiP,OAAOC,MACjChP,SAAUb,EAAMW,YAAYE,SAASiP,gBAEvCK,aAjDgB,KAkDfnQ,EAAM6Q,YAAYC,KAAK,MAAQ,CAC9BX,YAAa,EACbO,QAAS1Q,EAAMiJ,QAAQ,KAG3B8H,aAAc,CACZrQ,WAAYV,EAAMW,YAAYC,OAAO,SAAU,CAC7CgP,OAAQ5P,EAAMW,YAAYiP,OAAOK,QACjCpP,SAAUb,EAAMW,YAAYE,SAASqP,iBAEvCC,YAAa,OAsFFtV,OAAMoR,KAAKxS,aALF,SAAC,GAAD,EAAGuX,UAAH,MAAoB,KAKO,KAAzBvX,EAlFH,SAACzF,GAStBR,QAAQC,IAAI,UACZ,IAAMR,EAAU6M,KACVE,EAAQiR,cAXkB,EAYRpW,IAAM1G,UAAS,GAZP,mBAYzBmB,EAZyB,KAYnB4Q,EAZmB,KA+B1BgL,GATexU,uBAAY,kBAAMwJ,GAAS5Q,KAAO,IAS/B,yCAAG,WAAO1C,GAAP,UAAAue,EAAA,sDACzB3d,QAAQC,IAAIb,GADa,2CAAH,uDAIxB,OACE,kBAAC,WAAD,KACE,kBAACyE,EAAA,EAAD,KACE,0BACE1E,UACE,UACA0I,kBAAKpI,EAAQ2d,QAAT,eACD3d,EAAQ8d,aAAezb,KAI5B,kBAAC,GAAD,CAAqBqZ,aAAc,WA/BzCzI,GAAQ,OAiCJ,kBAACkL,EAAA,EAAD,CACEze,UAAWM,EAAQod,OACnBpN,QAAQ,aACRoO,OAAO,QACP/b,KAAMA,EACNrC,QAAS,CACP6V,MAAO7V,EAAQsd,cAGjB,yBAAK5d,UAAWM,EAAQud,cACtB,kBAACvG,EAAA,EAAD,CAAYpU,QAxCI,WACxBqQ,GAAQ,KAwCuB,QAApBlG,EAAMsR,UACL,kBAAC,IAAD,MAEA,kBAAC,IAAD,OAGJ,yBAAK3e,UAAU,SAAf,kBAEF,kBAAC4e,EAAA,EAAD,MACA,yBAAK5e,UAAU,wBACb,kBAAC,GAAD,CAAsByH,SAAU8W,YC1F7BzX,oBAPf,SAAyBC,EAAO1F,GAE9B,OADAR,QAAQC,IAAIO,EAAMwd,QACX,CACH3X,KAAM,wBAIGJ,CAAyBG,YAAU,CAAEE,oBAAoB,EAAKH,cAAe,CAC1FyT,QAAQ,CAAC,MAD6BxT,EAhDb,SAAC5F,GAAW,IAC7B+F,EAAgB/F,EAAhB+F,aAD4B,EAGV5F,mBAAS,GAHC,gCAIZA,oBAAS,IAJG,mBAI7BwE,EAJ6B,KAIvB0U,EAJuB,KAgB9B1Q,EAAeD,uBAAY,SAACE,GAChCpJ,QAAQC,IAAImJ,KAEX,IAEH,OACE,kBAAC,WAAD,KAEI,yBAAKjK,UAAU,OACb,kBAAC2E,EAAA,EAAD,CAAKkD,GAAI,EAAGiX,GAAI,GAChB,0BAAMrX,SAAUL,EAAa4C,IACzB,kBAAC,GAAD,eAAgBqQ,WAAY,WAbtCK,GAAS1U,IAaiDA,KAAMA,GAAU3E,MAGpE,kBAACsD,EAAA,EAAD,CAAMkD,GAAI,EAAGiX,GAAI,GACf,yBAAK9e,UAAU,OACf,kBAAC,GAAD,cCvBG,SAASggB,GAAkB3e,GAAQ,IACxC4e,EAAwB5e,EAAxB4e,cAAeja,EAAS3E,EAAT2E,KAIvB,OAHAnF,QAAQC,IAAIO,GAEZR,QAAQC,IAAIO,GACJ4e,GACN,IAAK,kBACH,OAAO,kBAAC,GAAD,MAuBT,IAAK,iBACH,OAAO,kBAAC,GAAD,MACT,IAAK,iBACH,OAAO,kBAAC,GAAD,MACT,IAAK,gBACH,OAAO,kBAAC,GAAD,MACT,IAAK,eACH,OAAO,kBAAC,GAAD,MACT,IAAK,gBACH,OAAO,kBAAC,GAAD,CAAmBja,KAAMA,IAClC,QACE,MAAO,ICJb,IAEMmH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0I,KAAM,CACJQ,QAAS,QAGX2J,WAAY,GAGZzC,KAAM,CACJlH,QAAS,QAEX4J,MAAO,CACLC,WAAY,UAEd1C,OAAQ,CACNL,MAjBgB,IAkBhBM,WAAY,EACZ0C,WAAY,UAEdC,WAAY,CACVjD,MAtBgB,IAuBhBtP,WAAYV,EAAMW,YAAYC,OAAO,QAAS,CAC5CgP,OAAQ5P,EAAMW,YAAYiP,OAAOC,MACjChP,SAAUb,EAAMW,YAAYE,SAASqP,kBAGzCgD,YAAa,CACXxS,WAAYV,EAAMW,YAAYC,OAAO,QAAS,CAC5CgP,OAAQ5P,EAAMW,YAAYiP,OAAOC,MACjChP,SAAUb,EAAMW,YAAYE,SAASiP,gBAEvCqD,UAAW,SACXnD,MAAM,OAMR9W,QAAQ,aACNgQ,QAAS,OACTuH,WAAY,SACZ3D,eAAgB,WAChB4D,QAAS1Q,EAAMiJ,QAAQ,EAAG,IAEvBjJ,EAAM2Q,OAAOzX,SAElBka,aAAc,CACZ7J,SAAU,QACVlJ,OAAQ,QAEVuQ,QAAS,CACPjI,SAAU,EACVlI,YAAa,GACbP,SAAU,UAEZmT,aAAc,CACZ5S,WAAY,OA2FDhH,uBARS,SAACC,GAAD,MAAY,KAIT,GAIZD,EAvFO,SAACzF,GAAW,IAAD,IACzBf,EAAU6M,KADe,GAEjBmR,cACUpW,IAAM1G,UAAS,IAHR,mBAGxBmB,EAHwB,KAGlB4Q,EAHkB,OAIGrL,IAAM1G,SAAS,mBAJlB,mBAIxBuD,EAJwB,KAIboD,EAJa,KAmB/B,OACE,yBAAKnI,UAAWM,EAAQyV,MACtB,kBAAC4K,EAAA,EAAD,MAEA,kBAAClC,EAAA,EAAD,CACEnO,QAAQ,YACRtQ,UAAW0I,kBAAKpI,EAAQod,QAAT,mBACZpd,EAAQggB,WAAa3d,GADT,cAEZrC,EAAQigB,aAAe5d,GAFX,IAIfrC,QAAS,CACP6V,MAAOzN,mBAAI,mBACRpI,EAAQggB,WAAa3d,GADb,cAERrC,EAAQigB,aAAe5d,GAFf,MAMb,kBAACic,EAAA,EAAD,MACA,kBAACvW,EAAA,EAAD,CAAOrI,UAAW0I,kBAAK,cAAD,eACnBpI,EAAQ6f,OAASxd,KAEjB,CAAC,kBAAmB,WAAY,YAAY,qBAAqB,UAAU,UAAU,oBAAoB,eAAe,WAAW,gBAAgB,QAAQ,iBAAiB,iBAAiB,gBAAgB,eAAe,iBAAiBX,KAAI,SAACsG,EAAMC,GAAP,OAChP,kBAACC,EAAA,EAAD,CAAUtF,QAAS,WA1B3BiF,EA0BsDG,IAAO/C,IAAKkD,MAAQzI,UAAW0I,kBAAK,CAAE,OAAUE,aAAcN,EAAKvD,MAC9GuD,OAIP,yBAAMtI,UAAW0I,kBAAKpI,EAAQiG,QAAT,eACdjG,EAAQmgB,cAAgB9d,KAE7B,kBAAC2U,EAAA,EAAD,CAAYpU,QAvCM,WACxBqQ,GAAQ,IAsCsCvT,UAAW0I,kBAAKpI,EAAQ4f,WAAT,eAClD5f,EAAQmd,MAAQ9a,KAEpB,kBAAC,IAAD,OAED,kBAAC2U,EAAA,EAAD,CACE/G,MAAM,UACNkH,aAAW,cACXvU,QAnDe,WACvBqQ,GAAQ,IAmDAqN,KAAK,QACL5gB,UAAW0I,kBAAKpI,EAAQ4f,WAAT,eACZ5f,EAAQmd,KAAO9a,KAGnB,kBAAC,IAAD,SAKL,yBAAK3C,UAAW0I,kBAAKpI,EAAQ2d,QAAT,eACX3d,EAAQogB,cAAgB/d,KAG/B,kBAACqd,GAAD,CAAmBC,cAAelb","file":"static/js/12.1eb5f37d.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap'\n\nexport const SingleToggleButton = ({ input, label, value, className, name, icon, positiveIcon, positiveClass }) => {\n\n    const handleAlignment = (e) => {\n        console.log(e)\n        input.onChange(e);\n      };\n      const classes = icon ? \" icon-btn\" : \" btn themeButton \";\n      const classNames = icon ? \"default-icon-button\" : className + \" \" + positiveClass;\n    return (\n        <ButtonGroup toggle className=\"mb-2\">\n        <ToggleButton\n          name={name}\n          type=\"checkbox\"\n          className={classNames + classes}\n          checked={input?.value ? input?.value : false}\n          onChange={(e) => handleAlignment(e.currentTarget.checked)}\n        >\n          {!positiveIcon ? label : (input?.value ? positiveIcon : label ) }\n          {/* {label} */}\n        </ToggleButton>\n      </ButtonGroup>\n    )\n}\n\nSingleToggleButton.defaultProps = {\n  classNames: \"lightGrey-button\",\n };","import React, { useCallback, useState, useEffect, Fragment } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Chip } from \"@material-ui/core\";\nimport { Image } from \"react-bootstrap\";\nimport ThemeButton from \"../button/ThemeButton\";\n\nconst centralDivStyle = {\n  textAlign: \"center\",\n};\nconst adaptFileEventToValue = delegate => e => delegate(e.target.files[0]);\nexport const FileInputRef = (props) => {\n  const {\n    input: { onChange },\n    disabled,\n    inputFileRef,\n    icon,\n  } = props;\n\n  const [files, setFiles] = useState([]);\n  const { getRootProps, getInputProps, open, acceptedFiles } = useDropzone({\n    accept: \"image/*\",\n    multiple: true,\n    onDrop: (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n      onChange(acceptedFiles);\n    },\n    noClick: true,\n    noKeyboard: true,\n  });\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\n    },\n    [files]\n  );\n\n  if (disabled) {\n    return null;\n  }\nconsole.log(acceptedFiles)\n  return (\n    <Fragment>\n      <div {...getRootProps()} style={centralDivStyle}>\n        <input ref={inputFileRef} {...getInputProps()} />\n        <ThemeButton className={acceptedFiles.length > 0 ? \"green-icon-button\": ''} icon onClick={open}>\n          {\" \"}\n          {icon}\n        </ThemeButton>\n      </div>\n    </Fragment>\n  );\n};\n","import { lazy, Fragment, Suspense } from \"react\";\n\nimport React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nconst buyer = lazy(() => import(`./Buyer`));\nconst general = lazy(() => import(`./General`));\nconst listing = lazy(() => import(`./Listing`));\nconst marketReview = lazy(() => import(`./MarketReview`));\nconst oneToOne = lazy(() => import(`./OneToOne`));\nconst openHome = lazy(() => import(`./OpenHome`));\nconst rental = lazy(() => import(`./Rental`));\nconst rentalOpenHome = lazy(() => import(`./RentalOpenHome`));\nconst sellerVisit = lazy(() => import(`./SellerVisit`));\nconst tenant = lazy(() => import(`./Tenant`));\nconst virtualBuyer = lazy(() => import(`./VirtualBuyer`));\nconst virtualListing = lazy(() => import(`./VirtualListing`));\n\nconst appointmentType = {\n  buyer,\n  general,\n  listing,\n  marketReview,\n  oneToOne,\n  openHome,\n  rentalOpenHome,\n  rental,\n  sellerVisit,\n  tenant,\n  virtualListing,\n  virtualBuyer,\n};\n\nconst TypeList = (props) => {\n  console.log(props);\n  const Component = appointmentType[props.type.value]\n    ? appointmentType[props.type.value]\n    : appointmentType[\"general\"];\n  return (\n    <Fragment>\n      <Suspense fallback={<Spinner />}>\n        <Component {...props} />\n      </Suspense>\n    </Fragment>\n  );\n};\n\nexport default TypeList;\n","import React, { Fragment } from 'react'\nimport Item from '../../../../../../partials/display/Item'\nimport { Row, Col } from 'react-bootstrap'\nimport { Field } from 'redux-form'\nimport { SingleToggleButton } from '../../../../../../partials/form/singleToggleButton/SingleToggleButton'\nimport { ucFirst, spaceRemove } from '../../../../../../_helpers/_utils/utils'\n\n\n\nconst AppointmentAlerts = ({title}) => {\n    return (\n        <Fragment>\n                        <Item\n              left={title}\n              right={\n                <Fragment>\n                  <Row>\n                    <Col>\n                      <Field\n                        name={`notify${ucFirst(spaceRemove(title))}ByEmail`}\n                        component={SingleToggleButton}\n                        icon\n                        label={<i class=\"fas fa-envelope\"></i>}\n                      />\n                      <Field\n                        name={`notify${ucFirst(spaceRemove(title))}ByMobile`}\n                        component={SingleToggleButton}\n                        icon\n                        label={<i class=\"fas fa-mobile-alt\"></i>}\n                      />\n                    </Col>\n                    <Col>\n                      <Field\n                        name={`remind${ucFirst(spaceRemove(title))}ByEmail`}\n                        component={SingleToggleButton}\n                        icon\n                        label={<i class=\"fas fa-envelope\"></i>}\n                      />\n                      <Field\n                        name={`remind${ucFirst(spaceRemove(title))}ByMobile`}\n                        component={SingleToggleButton}\n                        icon\n                        label={<i class=\"fas fa-mobile-alt\"></i>}\n                      />\n                    </Col>\n                    <Col>\n                    </Col>\n                  </Row>\n                </Fragment>\n              }\n            />\n        </Fragment>\n    )\n}\n\nexport default AppointmentAlerts\n","import React, { Fragment } from 'react'\n\nconst Email = () => {\n    return (\n        <Fragment>\n            \n        </Fragment>\n    )\n}\n\nexport default Email\n","import React, { Fragment } from 'react'\nimport Email from '../../../../../../partials/component/email/Email'\n\nconst PreviewEmail = () => {\n    return (\n        <Fragment>\n            <Email/>\n        </Fragment>\n    )\n}\n\nexport default PreviewEmail\n","import React, { Fragment } from 'react'\nimport './_mobileView.scss'\n\nconst MobileView = ({sms}) => {\n  console.log(sms)\n    return (\n       <Fragment>\n           <div >\n<div class=\"iphone\">\n  <div class=\"mic\">\n    <li class=\"prox\"></li>\n    <li class=\"grid\"></li>\n  </div>\n<div class=\"container\">\n  <div class=\"header\">\n    <div class=\"not_bar\">\n      <div class=\"sim\">AirTel</div>\n      <div class=\"wifi\"></div>\n      <div class=\"time\">1:27 AM</div>\n      <div class=\"bat\"></div>\n    </div>\n    <div class=\"text_head\">\n      <div class=\"back\"> <i class=\"fas fa-arrow-left\"></i>\n        </div>\n          <div>Wiseberry</div>\n          <div class=\"info\">i</div>\n      </div>\n    </div>\n    \n    <div class=\"message_area\">\n    <div><span class=\"sms_box animated bounceInUp\"> {sms?.split('\\n').map((item, key) => {\n  return <Fragment key={key}>{item}<br/></Fragment>\n})}</span>\n   \n    </div>\n    </div>\n    \n    <div class=\"text\">\n      <div class=\"send_dock\">\n        <div class=\"cam_icon\"></div>\n        <input type=\"text\" id=\"m_text\"/>\n        <div class=\"send_button\">Send</div>\n      </div>\n    </div>\n  </div>\n  <div class=\"home\"></div>\n</div></div>\n       </Fragment>\n    )\n}\n\nexport default MobileView\n","import React, { Fragment } from \"react\";\nimport { convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToMarkdown from 'draftjs-to-markdown';\nimport ThemeButton from \"../button/ThemeButton\";\nimport { Form, Row } from \"react-bootstrap\";\n\nconst TextAreaEmoji = ({\n  input,\n  rows,\n  classnames,\n  placeholder,\n  meta: { touched, error },\n  edit,\n}) => {\n\n  console.log(input);\n  return (\n    <Fragment>\n       \n      {edit ? (\n        <Fragment>\n           <div className={\"d-flex textAreaEmoji \" + classnames}>\n         <Editor\n          wrapperClassName=\"textAreaEmoji-wrapper\"\n          editorClassName=\"textAreaEmoji-editor\"\n          onEditorStateChange={(e) => input.onChange(draftToMarkdown(convertToRaw(e.getCurrentContent())))}\n          toolbar={{options: ['emoji']}}\n        />\n        </div>\n          <Form.Control.Feedback type=\"invalid\">\n            {touched && error && <span>{error}</span>}\n          </Form.Control.Feedback>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <Row>\n            <p>{input?.value}</p>\n          </Row>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\nTextAreaEmoji.defaultProps = {\n  rows: \"3\",\n  edit: true,\n};\n\nexport default TextAreaEmoji;\n","import React, { Fragment } from \"react\";\nimport ThemeHeader from \"../../content/ThemeHeader\";\nimport ThemeButton from \"../../button/ThemeButton\";\nimport { Row, Col } from \"react-bootstrap\";\nimport MobileView from \"./MobileView\";\nimport { Field, reduxForm, formValueSelector } from \"redux-form\";\nimport TextArea from \"../../form/TextArea\";\nimport { connect } from \"react-redux\";\nimport { formValues } from 'redux-form' // ES6\nimport TextAreaEmoj from \"../../form/TextAreaEmoji\";\n\nconst Sms = (props) => {\n    console.log(props)\n  const { handleSubmit, reset, pristine, submitting, invalid ,sms} = props;\n  return (\n    <Fragment>\n      <div className=\"p-4 mobileView\">\n        <form className=\"smsForm \" onSubmit={handleSubmit}>\n          <ThemeHeader\n            right={\n              <Fragment>\n                <div className=\"pl-2\">\n                  <ThemeButton onClick={props.closeModal}>Cancel</ThemeButton>\n                </div>\n                <div className=\"pl-2\">\n                  <ThemeButton\n                    disabled={invalid || pristine || submitting}\n                    type=\"submit\"\n                    classNames=\"theme-button green-button\"\n                  >\n                    Save\n                  </ThemeButton>\n                </div>\n              </Fragment>\n            }\n          />\n\n          <Row className=\"pt-2\">\n              <Col lg={6}>\n              <Field\n               name='sms'\n                type=\"textarea\"\n                rows=\"3\"\n                component={TextAreaEmoj}\n                placeholder=\"Comment about the offer\"\n              />\n              </Col>\n              <Col lg={6}>\n\n              <MobileView sms={sms}/>\n              </Col>\n          </Row>\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nconst actions = {\n    // closeModal: modal.actions.closeModal,\n    // tasksAdd: diary.actions.addTask,\n    // tasksUpdate: diary.actions.deleteTask,\n  };\n//   const mapState = (state, ownProps) => {\n//     // let task = {};\n  \n//     // if (typeof state.task != \"undefined\") {\n//     //   task = state.task;\n//     // }\n  \n//     // return {\n//     //   start: state.modal.modalProps.start\n//     //     ? state.modal.modalProps.start\n//     //     : ownProps.task.start,\n//     //   end: state.modal.modalProps.end\n//     //     ? state.modal.modalProps.end\n//     //     : ownProps.task.end,\n//     //   popssss: state.task,\n//     //   taskModalForm: state.form,\n//     //   closeModal: state.closeModal,\n//     //   initialValues: { ...ownProps.task },\n//     // }; // Foram name must have to be different\n//   };\n\n\nconst selector = formValueSelector(\"smsPreview\");\nconst mapState = (state) => {\n  const sms = selector(state, \"sms\");\n  return {\n    sms:sms,\n    initialValues: {\n    //   type: {\n    //     label: \"General\",\n    //     value: \"general\",\n    //   },\n    //   location: \"same\",\n    // },\n  }\n};}\n\n  export default connect(\n    mapState,\n    actions\n  )(\n    reduxForm({ form: \"smsPreview\", enableReinitialize: true })(\n      Sms\n    )\n  );\n  ","import React, { Fragment } from 'react'\nimport Sms from '../../../../../../partials/component/sms/Sms'\n\nconst PreviewSms = () => {\n    return (\n        <Fragment>\n            <Sms/>\n        </Fragment>\n    )\n}\n\nexport default PreviewSms\n","import React, { Fragment } from \"react\";\nimport { List, ListItem } from \"@material-ui/core\";\nimport cuid from \"cuid\";\nimport { stringCompare } from \"../../../../../_helpers/_utils/utils\";\nimport clsx from \"clsx\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Prospects from \"../../../../prospect/pages/Prospects\";\nimport AddressManagement from \"../../../../prospect/pages/addressManagement/AddressManagement\";\nimport ZoneAnalysis from \"../../../../prospect/pages/zoneAnalysis/ZoneAnalysis\";\nimport PreviewEmail from \"./type/PreviewEmail\";\nimport PreviewSms from \"./type/PreviewSms\";\n\nfunction PreviewEmailSmsList({ component }) {\n  console.log(component);\n  switch (component) {\n    case \"Appointment Notification Email to Seller\":\n      return <PreviewEmail/>;\n    case \"Appointment Notification Email to Buyer\":\n      return <PreviewEmail/>;\n    case \"Appointment Reminder SMS to Seller\":\n      return <PreviewSms/>;\n    case \"Appointment Reminder SMS to Buyer\":\n      return <PreviewSms/>;\n    default:\n      return \"\";\n  }\n}\n\nconst PreviewEmailSms = (props) => {\n  const [component, setComponent] = React.useState(\"Appointment Notification Email to Seller\");\n  const handleChangeComponent = (e) => {\n    setComponent(e);\n  };\n  return (\n    <Fragment>\n      <Row>\n        <Col xs={4} className=\"pt-3\">\n          <div class=\"d-flex flex-column bd-highlight border-right mb-3\">\n            <div>\n              <h5 className=\"title p-4\">Preview an Email or Sms</h5>\n            </div>\n            <List className=\"drawer-list\">\n              {[\n                \"Appointment Notification Email to Seller\",\n                \"Appointment Notification Email to Buyer\",\n                \"Appointment Reminder SMS to Seller\",\n                \"Appointment Reminder SMS to Buyer\",\n              ].map((text, index) => (\n                <ListItem\n                  onClick={() => handleChangeComponent(text)}\n                  key={cuid()}\n                  className={clsx({ active: stringCompare(text, component) })}\n                >\n                  {text}\n                </ListItem>\n              ))}\n            </List>\n          </div>\n        </Col>\n        <Col xs={8}>\n          <PreviewEmailSmsList component={component} />\n        </Col>\n      </Row>\n    </Fragment>\n  );\n};\n\nexport default PreviewEmailSms;\n","import React, { useState, Fragment, useCallback, Suspense } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { reduxForm, Field, formValueSelector } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport {\n  combineValidators,\n  isRequired,\n  composeValidators,\n  hasLengthGreaterThan,\n} from \"revalidate\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport ThemeHeader from \"../../../../../partials/content/ThemeHeader\";\nimport ThemeButton from \"../../../../../partials/button/ThemeButton\";\nimport Item from \"../../../../../partials/display/Item\";\nimport DateInput from \"../../../../../partials/form/DateInput\";\nimport TextInput from \"../../../../../partials/form/TextInput\";\nimport MultiSelect from \"../../../../../partials/form/MultiSelect\";\nimport TextArea from \"../../../../../partials/form/TextArea\";\nimport TypeList from \"./type/TypeList\";\nimport AppointmentAlerts from \"./partials/AppointmentAlerts\";\nimport DefaultModal from \"../../../../../partials/modal/DefaultModal\";\nimport PreviewEmailSms from \"../previewEmailSms/PreviewEmailSms\";\n\nconst validate = combineValidators({\n  title: isRequired({ message: \"The event title is required\" }),\n  category: isRequired({ message: \"The category is required\" }),\n  description: composeValidators(\n    isRequired({ message: \"Please enter a description\" }),\n    hasLengthGreaterThan(4)({\n      message: \"Description needs to be at least 5 characters\",\n    })\n  )(),\n  city: isRequired(\"city\"),\n  venue: isRequired(\"venue\"),\n  checkbox: isRequired(\"checkbox\"),\n  startTime: isRequired(\"date\"),\n  endTime: isRequired(\"date\"),\n});\n\nconst Appointment = (props) => {\n  const { handleSubmit, pristine, submitting, invalid, onHide } = props;\n\n  // Preview Email Sms Modal\n  const [modalShow, setModalShow] = useState(false);\n  const handleModal = useCallback((e) => {\n    // setModalData(e);\n    setModalShow(true);\n  }, []);\n  //\n\n  const onFormSubmit = useCallback((values) => {\n    console.log(values);\n    // setShow(false);\n  }, []);\n  const myBuyerOptions = [\n    {\n      label: \"General\",\n      value: \"general\",\n    },\n    {\n      label: \"OneToOne\",\n      value: \"oneToOne\",\n    },\n    {\n      label: \"Buyer\",\n      value: \"buyer\",\n    },\n    {\n      label: \"Listing\",\n      value: \"listing\",\n    },\n\n    {\n      label: \"MarketReview\",\n      value: \"marketReview\",\n    },\n    {\n      label: \"OpenHome\",\n      value: \"openHome\",\n    },\n    {\n      label: \"RentalOpenHome\",\n      value: \"rentalOpenHome\",\n    },\n    {\n      label: \"SellerVisit\",\n      value: \"sellerVisit\",\n    },\n    {\n      label: \"Tenant\",\n      value: \"tenant\",\n    },\n    {\n      label: \"VirtualListing\",\n      value: \"virtualListing\",\n    },\n    {\n      label: \"VirtualBuyer\",\n      value: \"virtualBuyer\",\n    },\n  ];\n  const renderSwitch = (param) => {\n    switch (param) {\n      case \"listing\":\n        return <AppointmentAlerts title=\"Prospects\" />;\n      case \"buyer\":\n        return (\n          <Fragment>\n            <AppointmentAlerts title=\"Buyers\" />\n            <AppointmentAlerts title=\"Sellers\" />\n          </Fragment>\n        );\n      case \"marketReview\":\n        return <AppointmentAlerts title=\"Sellers\" />;\n      case \"oneToOne\":\n        return <AppointmentAlerts title=\"Team Member\" />;\n      case \"rentalOpenHome\":\n        return <AppointmentAlerts title=\"Landlords\" />;\n      case \"tenant\":\n        return (\n          <Fragment>\n            <AppointmentAlerts title=\"Tenants\" />\n            <AppointmentAlerts title=\"Landlords\" />\n          </Fragment>\n        );\n      case \"sellerVisit\":\n        return <AppointmentAlerts title=\"Sellers\" />;\n      case \"rental\":\n        return <AppointmentAlerts title=\"Landlords\" />;\n      case \"virtualListing\":\n        return <AppointmentAlerts title=\"Prospects\" />;\n      case \"virtualBuyer\":\n        return (\n          <Fragment>\n            <AppointmentAlerts title=\"Buyers\" />\n            <AppointmentAlerts title=\"Sellers\" />\n          </Fragment>\n        );\n      case \"openHome\":\n        return <AppointmentAlerts title=\"Sellers\" />;\n      default:\n        return \"\";\n    }\n  };\n  return (\n    <Fragment>\n      {modalShow ? (\n        <DefaultModal\n          size=\"xl\"\n          centered\n          show={modalShow}\n          onHide={() => setModalShow(false)}\n          classNames=\"borderLess previewSmsEmail\"\n        >\n          <PreviewEmailSms  onHide={() => setModalShow(false)} />\n        </DefaultModal>\n      ) : (\n        \"\"\n      )}\n\n      <form className=\"contactForm\" onSubmit={handleSubmit(onFormSubmit)}>\n        <ThemeHeader\n          left={<h5 className=\"title\">New Appointment</h5>}\n          right={\n            <Fragment>\n              {\" \"}\n              <div className=\"pl-2\">\n                <ThemeButton onClick={onHide} className=\"lightGrey-button\">\n                  Cancel\n                </ThemeButton>\n              </div>\n              <div className=\"pl-2\">\n                <ThemeButton\n                  disabled={invalid || pristine || submitting}\n                  type=\"submit\"\n                  className=\"green-button\"\n                >\n                  Save\n                </ThemeButton>\n              </div>\n            </Fragment>\n          }\n        />\n\n        <Row>\n          <Col md={5}>\n            <Item\n              left=\"Type\"\n              right={\n                <Field\n                  name=\"type\"\n                  isMulti={false}\n                  component={MultiSelect}\n                  showBottom={false}\n                  options={myBuyerOptions}\n                />\n              }\n            />\n            <Item\n              left=\"For\"\n              right={\n                <Field\n                  name=\"for\"\n                  component={MultiSelect}\n                  showBottom={false}\n                  options={myBuyerOptions}\n                  defaultValue=\"1\"\n                />\n              }\n            />\n            <Item\n              left=\"Title\"\n              right={<Field name=\"title\" component={TextInput} />}\n            />\n            <Item\n              left=\"Starts\"\n              right={<Field name=\"starts\" component={DateInput} />}\n            />\n            <Item\n              left=\"Ends\"\n              right={<Field name=\"ends\" component={DateInput} />}\n            />\n            <Item\n              left=\"Repeat\"\n              right={\n                <Field\n                  name=\"repeat\"\n                  component={MultiSelect}\n                  showBottom={false}\n                  options={myBuyerOptions}\n                  defaultValue=\"1\"\n                />\n              }\n            />\n            <Item\n              left=\"Notes\"\n              right={<Field name=\"notes\" component={TextArea} row={3} />}\n            />\n            <Item\n              left=\"Attendance\"\n              right={\n                <Field\n                  name=\"attendance\"\n                  component={MultiSelect}\n                  showBottom={false}\n                  options={myBuyerOptions}\n                  defaultValue=\"1\"\n                />\n              }\n            />\n\n            <Item\n              left=\"Alerts\"\n              right={\n                <Fragment>\n                  <Row>\n                    <Col>Notify</Col>\n                    <Col>Remind</Col>\n                    <Col>\n                      <ThemeButton\n                        onClick={handleModal}\n                        icon\n                        className=\"darkGrey-icon-button\"\n                      >\n                        <i class=\"fas fa-eye\"></i>\n                      </ThemeButton>\n                    </Col>\n                  </Row>\n                </Fragment>\n              }\n            />\n            {props.type?.value ? renderSwitch(props.type?.value) : \"\"}\n          </Col>\n          <Col md={7}>{props.type?.value ? <TypeList {...props} /> : \"\"}</Col>\n        </Row>\n      </form>\n    </Fragment>\n  );\n};\n\nconst actions = {\n  // socialFeedPost: news.actions.socialFeedPostAsync,\n};\n\nconst selector = formValueSelector(\"newAppointment\");\n\nconst mapState = (state) => {\n  const location = selector(state, \"location\");\n  const type = selector(state, \"type\");\n  return {\n    location,\n    type,\n    initialValues: {\n      type: {\n        label: \"General\",\n        value: \"general\",\n      },\n      location: \"same\",\n    },\n  };\n};\nexport default connect(\n  mapState,\n  actions\n)(reduxForm({ form: \"newAppointment\", validate })(Appointment));\n","import React, { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nfunction useComponentVisible(initialIsVisible) {\n  const [isComponentVisible, setIsComponentVisible] = useState(\n    initialIsVisible\n  );\n  const ref = useRef(null);\n\n  const handleHideDropdown = (event: KeyboardEvent) => {\n    if (event.key === \"Escape\") {\n      setIsComponentVisible(false);\n    }\n  };\n\n  const handleClickOutside = event => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setIsComponentVisible(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleHideDropdown, true);\n    document.addEventListener(\"click\", handleClickOutside, true);\n    return () => {\n      document.removeEventListener(\"keydown\", handleHideDropdown, true);\n      document.removeEventListener(\"click\", handleClickOutside, true);\n    };\n  });\n\n  return { ref, isComponentVisible, setIsComponentVisible };\n}\n\nexport default useComponentVisible\n","import React, { Fragment, useRef, useState, useEffect } from \"react\";\n\nimport {\n  EmailShareButton,\n  FacebookShareButton,\n  InstapaperShareButton,\n  LineShareButton,\n  LinkedinShareButton,\n  LivejournalShareButton,\n  MailruShareButton,\n  OKShareButton,\n  PinterestShareButton,\n  PocketShareButton,\n  RedditShareButton,\n  TelegramShareButton,\n  TumblrShareButton,\n  TwitterShareButton,\n  ViberShareButton,\n  VKShareButton,\n  WhatsappShareButton,\n  WorkplaceShareButton,\n  EmailIcon,\n  FacebookIcon,\n  FacebookMessengerIcon,\n  InstapaperIcon,\n  LineIcon,\n  LinkedinIcon,\n  LivejournalIcon,\n  MailruIcon,\n  OKIcon,\n  PinterestIcon,\n  PocketIcon,\n  RedditIcon,\n  TelegramIcon,\n  TumblrIcon,\n  TwitterIcon,\n  ViberIcon,\n  VKIcon,\n  WeiboIcon,\n  WhatsappIcon,\n  WorkplaceIcon\n} from \"react-share\";\nimport { OverlayTrigger, Popover, Overlay } from \"react-bootstrap\";\nimport ThemeButton from \"../../button/ThemeButton\";\nimport useComponentVisible from \"../../../_helpers/_hooks/useComponentVisible\";\n\nconst SocialShare = () => {\n  const [show, setShow] = useState(false);\n  const [target, setTarget] = useState(null);\n  const popRef = useRef(null);\n  console.log(\"called\");\n  const {\n    ref,\n    isComponentVisible,\n    setIsComponentVisible,\n  } = useComponentVisible(false);\n  const handleClick = (event) => {\n    console.log(isComponentVisible);\n    setIsComponentVisible(!isComponentVisible);\n    setShow(!show);\n    setTarget(event.target);\n  };\n\n  useEffect(() => {\n\n    setShow(isComponentVisible);\n\n  }, [isComponentVisible]);\n\n\nconsole.log(isComponentVisible)\n  return (\n    <Fragment>\n      <div >\n\n      \n      <ThemeButton onClick={handleClick} icon>\n        <i class=\"fas fa-share-alt    \"></i>\n      </ThemeButton>\n      <Overlay\n        show={show}\n        target={target}\n        container={popRef.current}\n        placement=\"bottom\"\n        containerPadding={20}\n      >\n        <Popover  id=\"popover-contained\">\n          <Popover.Content>\n            <div ref={ref} >\n            <FacebookShareButton\n        url={\"https://peing.net/ja/\"}\n        quote={\"フェイスブックはタイトルが付けれるようです\"}\n        hashtag={\"#hashtag\"}\n        description={\"aiueo\"}\n        className=\"Demo__some-network__share-button\"\n      >\n        <FacebookIcon size={32} round />\n      </FacebookShareButton>\n      <TwitterShareButton\n        title={\"test\"}\n        url={\"https://peing.net/ja/\"}\n        hashtags={[\"hashtag1\", \"hashtag2\"]}\n      >\n        <TwitterIcon size={32} round />\n        Twitter\n      </TwitterShareButton>\n\n      <ThemeButton icon><i class=\"fas fa-copy    \"></i> </ThemeButton>\n            </div>\n          </Popover.Content>\n        </Popover>\n      </Overlay>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default SocialShare;\n","/* eslint-disable no-restricted-imports */\n\nimport React, { Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport SocialShare from '../../../../partials/component/speedDial/SocialShare';\nimport { Carousel, Col } from 'react-bootstrap';\nimport moment from \"moment\";\nimport ThemeButton from '../../../../partials/button/ThemeButton';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    // marginBottom: 1 rem;\n    overflow: 'visible',\n    marginBottom: '1rem',\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function SocialFeedCard({ data, handleLikeClick, handlePostApprove, handlePostDelete }) {\n  const classes = useStyles();\n  const userInfo = useSelector(({ auth }) => auth.user);\n  console.log(userInfo)\n  console.log(data)\n  return (\n    <Card className={classes.card}>\n      <CardHeader\n        avatar={\n          <Avatar alt={data.created_by.first_name} src={data.created_by.profile_picture} className={classes.avatar} />\n        }\n        title={<Fragment>{data.created_by.first_name} {data.created_by.last_name}   {data.id}</Fragment>}\n        subheader={\n          <Fragment>\n            {data.status == 2 ? <Fragment> {moment(data.created_at).format(\"DD/MM/YYYY\")} </Fragment> : <div>Pending Approval</div>}\n          </Fragment>}\n        action={\n          <Fragment>\n            <ThemeButton icon >\n              <SocialShare />\n            </ThemeButton>\n            {data.status == 2 ? '' : <Fragment>\n              <ThemeButton icon onClick={() => handlePostDelete(data.id)}>\n                <i class=\"fas fa-trash    \"></i>\n              </ThemeButton>\n              <ThemeButton icon onClick={() => handlePostApprove(data.id)} >\n                <i class=\"fas fa-check-circle    \"></i>\n              </ThemeButton>\n            </Fragment>}\n          </Fragment>\n        }\n      />\n      <Carousel interval={null}>\n        {data.images.map((item, i) => (\n          <Carousel.Item>\n            {/* <div>\n            \n            </div> */}\n\n            <Col>\n              <img\n                className=\"w-100\"\n                src={item.url}\n                alt=\"First slide\"\n              />\n            </Col>\n\n          </Carousel.Item>\n        ))}\n        <Carousel.Item>\n          {/* <iframe width=\"420\" height=\"345\" src=\"https://www.youtube.com/embed/tgbNymZ7vqY\"/> */}\n        </Carousel.Item>\n      </Carousel>\n      {/* <CardMedia\n        className={classes.media}\n        image=\"https://buybuy-com-au.s3.amazonaws.com/public/agency/portmacquarie/302010/feed/1590364858-0.jpg\"\n        title=\"Contemplative Reptile\"\n      /> */}\n      <CardContent>\n\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className=\"printTextArea\">\n          {data.text}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing className=\"justify-content-end\">\n        <ThemeButton onClick={() => handleLikeClick(data.id)} icon >{data.likes.length ? data.likes.length : 0}\n          <FavoriteIcon />\n        </ThemeButton>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport NoteForm from \"../../../../../../partials/form/partials/note/NoteForm\";\nimport NoteLists from \"../../../../../../partials/component/notes/NoteLists\";\nimport { Row, ButtonGroup, ToggleButton } from \"react-bootstrap\";\nimport ThemeButton from \"../../../../../../partials/button/ThemeButton\";\nimport cuid from \"cuid\";\n\nconst SLnotes = (props) => {\n  const { fields } = props;\n  const [noteType, setNoteType] = useState(\"All Notes\");\n  const addNote = (e) => {\n    fields.push(e);\n    console.log(e);\n  };\n  const noteTypeOptions = [\n    { name: \"All Notes\", value: \"All Notes\" },\n    { name: \"This Listing Only\", value: \"This Listing Only\" },\n  ];\n\n  const handleNoteType = (e) => {\n    setNoteType(e.currentTarget.value);\n  };\n\n  useEffect(() => {\n    console.log(props);\n    // setDiaryType(props.diaryType)\n    // setDiaryOf(props.diaryOf)\n    // setDiaryView(props.view)\n  }, []);\n\n  return (\n    <Fragment>\n      <NoteForm addNote={addNote} />\n      <div className=\"d-flex justify-content-end\">\n        <div className=\"pb-2\">\n          <ThemeButton icon>\n            <i class=\"fas fa-download\"></i>\n          </ThemeButton>\n          <ButtonGroup className=\"themeButton-toggle-group pl-2\" toggle>\n            {noteTypeOptions.map((radio, idx) => (\n              <ToggleButton\n                key={cuid()}\n                type=\"radio\"\n                name=\"radio\"\n                value={radio.value}\n                checked={noteType === radio.value}\n                onChange={handleNoteType}\n              >\n                {radio.name}\n              </ToggleButton>\n            ))}\n          </ButtonGroup>\n        </div>\n      </div>\n      <Row></Row>\n      <NoteLists />\n    </Fragment>\n  );\n};\n\nexport default SLnotes;\n","import React, { Fragment } from 'react'\nimport { FieldArray } from 'redux-form'\nimport SLnotes from './SLnotes'\n\nconst SLnoteForm = () => {\n    return (\n       <Fragment>\n           <FieldArray name=\"notes\" component={SLnotes} />\n       </Fragment>\n    )\n}\n\nexport default SLnoteForm\n","import React, { Fragment, useRef, useState } from 'react'\nimport DefaultModal from '../../../../../../partials/modal/DefaultModal';\nimport ContactForm from '../../../../../contacts/modals/contactFormModal/ContactForm';\nimport ThemeHeader from '../../../../../../partials/content/ThemeHeader';\nimport ThemeButton from '../../../../../../partials/button/ThemeButton';\nimport { FieldArray } from 'redux-form';\nimport FormContacts from '../../../../../../partials/form/partials/FormContacts';\n\nconst SLcontacts = (props) => {\n    const [modalShow, setModalShow] = useState(false);\n    const [deleteItem, setDeleteItem] = useState(0);\n\n\n    return (\n      <Fragment>\n        {modalShow ? (\n          <DefaultModal show={modalShow} onHide={() => setModalShow(false)}>\n            <div>\n              <ContactForm closeModal={() => setModalShow(false)} onSubmit={(e) => console.log(e)} />\n            </div>\n  \n          </DefaultModal>\n        ) : (\n          \"\"\n        )}\n        <ThemeHeader\n          right={\n            <Fragment>\n              <ThemeButton className=\"mr-2 lightGrey-button\" onClick={() => setDeleteItem(prev => prev + 1)} >Remove </ThemeButton>\n              <ThemeButton className=\"theme-button green-button\" onClick={()=> setModalShow(true) }>Add</ThemeButton>\n            </Fragment>\n          }\n        />\n        <FieldArray edit={props.edit} name=\"contacts\" deleteItem={deleteItem} component={FormContacts}/>\n      </Fragment>\n    );\n  };\nexport default SLcontacts","import React, { Fragment, useRef, useState } from 'react'\nimport ThemeHeader from '../../../../../../partials/content/ThemeHeader';\nimport ThemeButton from '../../../../../../partials/button/ThemeButton';\nimport { FieldArray } from 'redux-form';\nimport FormFeatures from '../../../../../../partials/form/partials/FormFeatures';\n\nconst SLfeatures = (props) => {\n\n    const [deleteItem, setDeleteItem] = useState(0);\nconsole.log(props)\n\n    return (\n      <Fragment>\n\n        {/* <ThemeHeader\n          right={\n            <Fragment>\n              <ThemeButton className=\"mr-2 lightGrey-button\" onClick={() => setDeleteItem(prev => prev + 1)} >Remove </ThemeButton>\n            </Fragment>\n          }\n        /> */}\n        <FieldArray edit={props.edit} name=\"features\" component={FormFeatures}/>\n      </Fragment>\n    );\n  };\nexport default SLfeatures\n","import React, { useEffect, useState, useCallback, Fragment } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\n// import * as modal from '../_redux/modalRedux'\nimport { makeStyles, Button } from \"@material-ui/core\";\nimport { reduxForm, Field, formValueSelector } from \"redux-form\";\n\nimport {\n  combineValidators,\n  isRequired,\n  composeValidators,\n  hasLengthGreaterThan,\n} from \"revalidate\";\nimport ThemeHeader from \"../../../../partials/content/ThemeHeader\";\nimport ThemeButton from \"../../../../partials/button/ThemeButton\";\nimport Item from \"../../../../partials/display/Item\";\nimport { Col } from \"react-bootstrap\";\nimport TextInput from \"../../../../partials/form/TextInput\";\nimport TextArea from \"../../../../partials/form/TextArea\";\n\nconst validate = combineValidators({\n   price_from: isRequired({ message: \"The event title is required\" }),\n   price_to: isRequired({ message: \"The category is required\" }),\n  reason: composeValidators(\n    isRequired({ message: \"Please enter a description\" }),\n    hasLengthGreaterThan(4)({\n      message: \"Description needs to be at least 5 characters\",\n    })\n  )(),\n  price_view: isRequired(\"city\"),\n  venue: isRequired(\"venue\"),\n  checkbox: isRequired(\"checkbox\"),\n  startTime: isRequired(\"date\"),\n  endTime: isRequired(\"date\"),\n});\n\nconst AdjustPrice = (props) => {\n  const { handleSubmit, pristine, onHide, submitting, invalid,selectedValues, adjustPrice } = props;\n\n  const handleAdjustPrice = () => {\n      console.log(adjustPrice)\n    selectedValues(adjustPrice)\n  }\nconsole.log(props)\n  return (\n    <Fragment>\n      <div className=\"buyerFormModal\">\n        <form className=\"contactForm\" onSubmit={handleSubmit}>\n          <Fragment>\n            <ThemeHeader\n              left={\n                <Fragment>\n                  <h5 className=\"title\">Adjust Price</h5>\n                </Fragment>\n              }\n              right={\n                <Fragment>\n                  <Fragment>\n                    <div className=\"pl-2\">\n                      <ThemeButton onClick={onHide}>Cancel</ThemeButton>\n                    </div>\n                    <div className=\"pl-2\">\n                      <ThemeButton\n                        disabled={invalid || pristine || submitting}\n                        onClick={()=>handleAdjustPrice()}\n                        className=\"theme-button green-button\"\n                      >\n                        Adjust\n                      </ThemeButton>\n                    </div>\n                  </Fragment>\n                </Fragment>\n              }\n            />\n            <Item\n              left=\"New Price Range\"\n              right={\n                <Fragment>\n                  <div className=\"row\">\n                    <Col>\n                      <Field\n                        name=\"price_from\"\n                        component={TextInput}\n                        placeholder=\"Price From\"\n                      />\n                    </Col>\n                    <Col>\n                      <Field\n                        name=\"price_to\"\n                        component={TextInput}\n                        placeholder=\"Price To\"\n                      />\n                    </Col>\n                  </div>\n                </Fragment>\n              }\n            />\n\n            <Item\n              left=\"New Price View\"\n              right={\n                <Field\n                  name=\"public_view\"\n                  component={TextInput}\n                  placeholder=\"Price To\"\n                />\n              }\n            />\n\n            <Item\n              left=\"Reason\"\n              right={\n                <Field\n                  name=\"reason\"\n                  rows={4}\n                  component={TextArea}\n                  placeholder=\"Price To\"\n                />\n              }\n            />\n          </Fragment>\n        </form>\n        <div>\n          <Item left=\"past Adjustments\" />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst actions = {\n  // socialFeedPost: news.actions.socialFeedPostAsync,\n};\n\nconst selector = formValueSelector(\"adjustPrice\");\nconst mapState = (state) => {\n    const values = selector(state, \"price_from\", \"price_to\", \"price_view\",\"reason\");\n  return {\n    adjustPrice:values,\n  \n};}\nexport default connect(\n  mapState,\n  actions\n)(reduxForm({ form: \"adjustPrice\", initialValues: {}, validate })(AdjustPrice));\n","import React, { Fragment } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Item from \"../../../display/Item\";\nimport { Field } from \"redux-form\";\nimport MultiSelect from \"../../MultiSelect\";\nimport DateInput from \"../../DateInput\";\nimport TextInput from \"../../TextInput\";\nimport DefaultModal from \"../../../modal/DefaultModal\";\nimport AdjustPrice from \"../../../../modules/listings/modals/adjustPrice/AdjustPrice\";\nimport ThemeButton from \"../../../button/ThemeButton\";\n\nconst ListingDetailsForm = (props) => {\n  const {\n    edit,\n    fields,\n    meta: { error, submitFailed },\n  } = props;\n\n  const [modalShow, setModalShow] = React.useState(false);\n\n  const myBuyerOptions = [\n    {\n      label: \"Seller\",\n      value: \"seller\",\n    },\n    {\n      label: \"Seller Solicitor\",\n      value: \"sellerSolicitor\",\n    },\n    {\n      label: \"Sarah\",\n      value: \"3\",\n    },\n  ];\n  const statusOptions = [\n    {\n      label: \"Seller\",\n      value: \"seller\",\n    },\n    {\n      label: \"Seller Solicitor\",\n      value: \"sellerSolicitor\",\n    },\n    {\n      label: \"Sarah\",\n      value: \"3\",\n    },\n  ];\n  const handleAdjustPrice = (e) => {\n      let value = fields.get(0);\n      value.price_from = e.price_from;\n      value.price_to = e.price_to;\n      value.public_view = e.public_view;\n      value.reason = e.reason;\n      fields.removeAll();\n      fields.push(value);\n      console.log(value)\n    console.log(e);\n  };\n\n  return (\n    <Fragment>\n      {modalShow ? (\n        <DefaultModal\n          size=\"lg\"\n          show={modalShow}\n          onHide={() => setModalShow(false)}\n        >\n          <AdjustPrice\n            selectedValues={(e) => handleAdjustPrice(e)}\n            onHide={() => setModalShow(false)}\n          />\n        </DefaultModal>\n      ) : (\n        \"\"\n      )}\n\n      {fields.map((item, index) => (\n        <Row>\n          <Col lg={6}>\n            <h5 className=\"title\">Listing</h5>\n            <Item\n              left=\"Status\"\n              right={\n                <Fragment>\n                  <Field\n                    edit={edit}\n                    name={`${item}.status`}\n                    component={MultiSelect}\n                    showBottom={false}\n                    isMulti={false}\n                    options={myBuyerOptions}\n                  />\n                </Fragment>\n              }\n            />\n            <Item\n              left=\"Status\"\n              right={\n                <Fragment>\n                  <Field\n                    edit={edit}\n                    name={`${item}.status`}\n                    component={MultiSelect}\n                    showBottom={false}\n                    isMulti={false}\n                    options={myBuyerOptions}\n                  />\n                </Fragment>\n              }\n            />\n            <Item\n              left=\"Start and End\"\n              right={\n                <Fragment>\n                  <Row>\n                    <Col>\n                      <Field\n                        edit={edit}\n                        name={`${item}.from`}\n                        component={DateInput}\n                      />\n                    </Col>\n                    <Col>\n                      <Field\n                        edit={edit}\n                        name={`${item}.to`}\n                        component={DateInput}\n                      />\n                    </Col>\n                  </Row>\n                </Fragment>\n              }\n            />\n            <Item\n              left=\"Price Range\"\n              right={\n                <Fragment>\n                  {edit ? (\n                    <ThemeButton\n                      className=\"darkGrey-button w-100\"\n                      onClick={() => setModalShow(true)}\n                    >\n                      Adjust Price\n                    </ThemeButton>\n                  ) : (\n                    <div className=\"row\">\n                      <Col>\n                        <Field\n                        edit={false}\n                        name={`${item}.price_from`}\n                          component={TextInput}\n                          placeholder=\"Price From\"\n                        />\n                      </Col>\n                      <Col>\n                        <Field\n                        edit={false}\n                        name={`${item}.price_to`}\n                          component={TextInput}\n                          placeholder=\"Price To\"\n                        />\n                      </Col>\n                    </div>\n                  )}\n                </Fragment>\n              }\n            />\n            <Item\n              left=\"Public view\"\n              right={\n                <Fragment>\n                  <Field\n                  name={`${item}.public_view`}\n                    component={TextInput}\n                    placeholder=\"Price From\"\n                  />\n                </Fragment>\n              }\n            />\n            <Item\n              left=\"Group Price\"\n              right={\n                <Fragment>\n                  <div className=\"row\">\n                    <Col>\n                      <Field\n                       name={`${item}.group_price_from`}\n                        component={TextInput}\n                        placeholder=\"Price From\"\n                      />\n                    </Col>\n                    <Col>\n                      <Field\n                       name={`${item}.group_price_to`}\n                        component={TextInput}\n                        placeholder=\"Price To\"\n                      />\n                    </Col>\n                  </div>\n                </Fragment>\n              }\n            />\n          </Col>\n          <Col lg={6}>\n            <h5 className=\"title\">Sellers App</h5>\n            <Item\n              left=\"Status\"\n              right={\n                <Fragment>\n                  <Field\n                    edit={edit}\n                    name={`${item}.username`}\n                    component={TextInput}\n                    placeholder=\"Username\"\n                  />\n                </Fragment>\n              }\n            />\n            <Item\n              left=\"Password\"\n              right={\n                <Fragment>\n                  <Field\n                    edit={edit}\n                    name={`${item}.password`}\n                    component={TextInput}\n                    placeholder=\"password\"\n                  />\n                </Fragment>\n              }\n            />\n          </Col>\n        </Row>\n      ))}\n    </Fragment>\n  );\n};\n\nexport default ListingDetailsForm;\n","import React, { Fragment } from 'react'\nimport { FieldArray } from 'redux-form'\nimport ListingDetailsForm from '../../../../../../partials/form/partials/listingDetailsForm/ListingDetailsForm'\n\nconst SLdetails = (props) => {\n    return (\n        <Fragment>\n             {/* <FieldArray edit={props.edit} name=\"details\"  component={ListingDetailsForm}/> */}\n             <FieldArray edit={props.edit} name=\"members\" component={ListingDetailsForm} />\n        </Fragment>\n    )\n}\n\nexport default SLdetails\n","import React, { useEffect, useState, useCallback, Fragment } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\n// import * as modal from '../_redux/modalRedux'\nimport { makeStyles, Button } from \"@material-ui/core\";\nimport { reduxForm, Field, formValueSelector, FieldArray } from \"redux-form\";\n\nimport {\n  combineValidators,\n  isRequired,\n  composeValidators,\n  hasLengthGreaterThan,\n} from \"revalidate\";\nimport ThemeHeader from \"../../../../partials/content/ThemeHeader\";\nimport ThemeButton from \"../../../../partials/button/ThemeButton\";\nimport Item from \"../../../../partials/display/Item\";\nimport { Col, Row, Form } from \"react-bootstrap\";\nimport TextInput from \"../../../../partials/form/TextInput\";\nimport TextArea from \"../../../../partials/form/TextArea\";\nimport MultiSelect from \"../../../../partials/form/MultiSelect\";\nimport DateInput from \"../../../../partials/form/DateInput\";\nimport ToggleSwitch from \"../../../../partials/form/toggleSwitch/ToggleSwitch\";\nimport { getListingReportById } from \"../../_crud/listingsCrud\";\nimport DragAndDrop from \"../../../../partials/form/DragAndDrop\";\n\nconst validate = combineValidators({\n  //   price_from: isRequired({ message: \"The event title is required\" }),\n  //   price_to: isRequired({ message: \"The category is required\" }),\n  //   reason: composeValidators(\n  //     isRequired({ message: \"Please enter a description\" }),\n  //     hasLengthGreaterThan(4)({\n  //       message: \"Description needs to be at least 5 characters\",\n  //     })\n  //   )(),\n  //   price_view: isRequired(\"city\"),\n  //   venue: isRequired(\"venue\"),\n  //   checkbox: isRequired(\"checkbox\"),\n  //   startTime: isRequired(\"date\"),\n  //   endTime: isRequired(\"date\"),\n});\n\nconst AddReport = (props) => {\n  const {\n    handleSubmit,\n    pristine,\n    submitting,\n    invalid,\n    selectedValues,\n    reports,\n    closeModal,\n    id,\n  } = props;\n\n  const handleAddReport = () => {\n    console.log(reports);\n    // selectedValues(adjustPrice);\n  };\n  const propertyType = [\n    {\n      label: \"My Buyers\",\n      value: \"1\",\n    },\n    {\n      label: \"Open Buyers\",\n      value: \"2\",\n    },\n    {\n      label: \"Sarah\",\n      value: \"3\",\n    },\n  ];\n\n  useEffect(() => {\n    // initializing data from the useEffect\n    if (id) {\n      getListingReportById()\n        .then(({ data }) => {\n          console.log(data);\n          props.initialize({...data\n          });\n        })\n        .catch(() => {});\n      \n    }\n  }, []);\n  \n\n  console.log(props);\n  return (\n    <Fragment>\n      <div className=\"buyerFormModal\">\n        <form className=\"contactForm\" onSubmit={handleSubmit}>\n          <Fragment>\n            <ThemeHeader\n              left={\n                <Fragment>\n                  <h5 className=\"title\">Adjust Price</h5>\n                </Fragment>\n              }\n              right={\n                <Fragment>\n                  <Fragment>\n                    <div className=\"pl-2\">\n                      <ThemeButton onClick={closeModal}>Cancel</ThemeButton>\n                    </div>\n                    <div className=\"pl-2\">\n                      <ThemeButton\n                        disabled={invalid || pristine}\n                        onClick={() => handleAddReport()}\n                        className=\"theme-button green-button\"\n                      >\n                        Adjust\n                      </ThemeButton>\n                    </div>\n                  </Fragment>\n                </Fragment>\n              }\n            />\n            <Item\n              left=\"New Price Range\"\n              right={\n                <Fragment>\n                  <Field\n                    name=\"type\"\n                    placeholder=\"Select a type\"\n                    component={MultiSelect}\n                    showBottom={false}\n                    isMulti={false}\n                    options={propertyType}\n                  />\n                </Fragment>\n              }\n            />\n            <Row>\n              <Col>\n                <div className=\"row w-100 pt-2\">\n                  <Form.Label className=\"col-7 pl-3\" xs={7}>\n                    Does the Report Author have PI insurance?\n                  </Form.Label>\n                  <Col xs={5}>\n                    <Field name=\"rp\" component={ToggleSwitch} />\n                  </Col>\n                </div>\n              </Col>\n              <Col>\n                <div className=\"row w-100 pt-2\">\n                  <Form.Label className=\"col-7 pl-3\" xs={7}>\n                    Does the Report Author have PI insurance?\n                  </Form.Label>\n                  <Col xs={5}>\n                    <Field name=\"pi\" component={ToggleSwitch} />\n                  </Col>\n                </div>\n              </Col>\n            </Row>\n\n            <Item\n              left=\"Date Conducted\"\n              right={<Field name=\"date_conducted\" component={DateInput} />}\n            />\n\n            <Item\n              left=\"Prepared By\"\n              right={\n                <Field\n                  name=\"preparedBy\"\n                  component={TextInput}\n                  placeholder=\"Price To\"\n                />\n              }\n            />\n            <Item\n              left=\"Requested By\"\n              right={\n                <Field\n                  name=\"RequestedBy\"\n                  component={TextInput}\n                  placeholder=\"Price To\"\n                />\n              }\n            />\n            <Item\n              left=\"Note\"\n              right={\n                <Field\n                  name=\"note\"\n                  rows={4}\n                  component={TextArea}\n                  placeholder=\"Note About the report\"\n                />\n              }\n            />\n             <Item\n              left=\"Attachment\"\n              right={\n                <FieldArray name=\"attachment\" type ='file' component={DragAndDrop} />\n              }\n            />\n          </Fragment>\n        </form>\n        <div>\n          <Item left=\"past Adjustments\" />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst selector = formValueSelector(\"addOrUpdateReport\");\n\nconst mapState = (state) => {\n  console.log(state);\n\n  const values = selector(\n    state,\n    \"type\",\n    \"note\",\n    \"RequestedBy\",\n    \"preparedBy\",\n    \"date_conducted\",\n    \"pi\",\n    \"rp\",\n    \"attachment\"\n  );\n\n  return {\n    reports: values,\n    initialValues: {},\n  }; // Foram name must have to be different\n};\n\nexport default connect(\n  mapState,\n  null\n)(reduxForm({ form: \"addOrUpdateReport\" })(AddReport));\n","import React, { Fragment, useEffect, useState, useRef, Suspense } from \"react\";\nimport { Table, Form, Col, Overlay, Popover, Spinner } from \"react-bootstrap\";\nimport { Field } from \"redux-form\";\nimport ThemeButton from \"../../button/ThemeButton\";\nimport cuid from \"cuid\";\nimport RadioInput from \"../RadioInput\";\nimport { getListingDetailsById } from \"../../../modules/listings/_crud/listingsCrud\";\nimport moment from \"moment\";\nimport DefaultModal from \"../../modal/DefaultModal\";\nimport AddReport from \"../../../modules/listings/modals/addReport/AddReport\";\n\nfunction Row({ fields, item, index, onClick }) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleCollapse = (e) => {\n    e.stopPropagation();\n    setOpen(!open);\n  };\n\n  return (\n    <React.Fragment>\n      <tr onClick={() => onClick(index)}>\n        <td>\n          <Field\n            name={`${item}.isSelected`}\n            component={RadioInput}\n            type=\"checkbox\"\n          />\n        </td>\n        <td>\n          {fields?.get(index)?.report?.title}{\" \"}\n          {fields?.get(index)?.report.isReportUploaded ? (\n            <ThemeButton icon>\n              {\" \"}\n              <i class=\"fas fa-file    \"></i>\n            </ThemeButton>\n          ) : (\n            \"\"\n          )}\n        </td>\n        <td>{moment(fields?.get(index)?.date).format(\"DD/MM/YYYY\")}</td>\n        <td>{fields?.get(index)?.preparedBy}</td>\n\n        <td>{fields?.get(index)?.requestedBy}</td>\n        <td>\n          {fields?.get(index)?.ins ? (\n            <span class=\"dot green\"></span>\n          ) : (\n            <span class=\"dot red\"></span>\n          )}\n        </td>\n        <td className=\"d-flex\">\n          {fields?.get(index)?.rjp ? (\n            <span className=\"dot green m-3\"></span>\n          ) : (\n            <span className=\"dot red m-3\"></span>\n          )}{\" \"}\n          {fields?.get(index)?.note ? (\n            <span>\n              <ThemeButton onClick={(e) => handleCollapse(e)} icon>\n                {\" \"}\n                <i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>\n              </ThemeButton>\n            </span>\n          ) : (\n            \"\"\n          )}\n        </td>\n      </tr>\n      {fields?.get(index)?.note && open ? (\n        <Fragment>\n          <tr>\n            <td className=\"p-5\" colspan=\"7\">\n              {fields?.get(index)?.note}\n            </td>\n          </tr>\n        </Fragment>\n      ) : (\n        \"\"\n      )}\n    </React.Fragment>\n  );\n}\n\nconst FormReports = (props) => {\n  const { fields } = props;\n  const [featuresValue, setFeaturesValue] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n  const [id, setId] = useState(null);\n\n  useEffect(() => {\n    getListingDetailsById()\n      .then(({ data }) => {\n        if (!fields.length > 0) {\n          data.map((item, index) => {\n            fields.push(item);\n          });\n        }\n      })\n      .catch(() => {});\n    // fields.push({\n    //   id: false,\n    //   isSelected: false,\n    //   role: \"bedrooms\",\n    //   name: \"\",\n    //   phone: \"4567890-\",\n    //   email: \"asdsa@asda.com\",\n    // });\n    // fields.push({\n    //   id: false,\n    //   isSelected: false,\n    //   role: {\n    //     label: \"Seller Solicitor\",\n    //     value: \"sellerSolicitor\",\n    //   },\n    // });\n    // fields.push({ id: false, isSelected: false, role: \"seller\" });\n    // fields.push({\n    //   id: false,\n    //   isSelected: false,\n    //   role: {\n    //     label: \"Sarah\",\n    //     value: \"3\",\n    //   },\n    // });\n  }, []);\n\n  useEffect(() => {\n    handleRemove();\n  }, [props.deleteItem]);\n\n  const handleAddFeature = () => {\n    let obj = {};\n    obj.features = document.getElementById(\"features\").value;\n    obj.comments = document.getElementById(\"featureComments\").value;\n    obj.preference = document.getElementById(\"featurePreference\")?.value\n      ? document.getElementById(\"featurePreference\").value\n      : \"\";\n    obj.landSize = document.getElementById(\"featureLandsize\")?.value\n      ? document.getElementById(\"featureLandsize\").value\n      : \"\";\n    obj.landType = document.getElementById(\"featuresLandType\")?.value\n      ? document.getElementById(\"featuresLandType\").value\n      : \"\";\n    fields.push(obj);\n  };\n\n  const handleRemove = () => {\n    for (let i = fields.length - 1; i >= 0; i--) {\n      if (fields.get(i).isSelected) {\n        fields.remove(i);\n      }\n    }\n\n    document.getElementById(\"checkToggle\").checked = false;\n  };\n\n  const handleSelectAllToggle = (e) => {\n    const all = fields.getAll();\n    const selected = document.getElementById(\"checkToggle\").checked\n      ? true\n      : false;\n\n    fields.removeAll();\n    all.forEach((item, index) => {\n      all[index].isSelected = selected;\n      fields.push(item);\n    });\n  };\n\n  const myBuyerOptions = [\n    {\n      label: \"Seller\",\n      value: \"seller\",\n    },\n    {\n      label: \"Seller Solicitor\",\n      value: \"sellerSolicitor\",\n    },\n    {\n      label: \"Sarah\",\n      value: \"3\",\n    },\n  ];\n\n  const handleClick = (e) => {\n    setModalShow(true);\n    setId(e);\n  };\n\n  const handleClose = () => {\n    setModalShow(false);\n    setId(null);\n  };\n\n  return (\n    <Fragment>\n      <div className=\"tableTheme theme-table-striped\">\n        {modalShow ? (\n          <DefaultModal show={modalShow} onHide={() => handleClose()}>\n            <div>\n              <AddReport\n                id={id}\n                closeModal={() => handleClose()}\n                onSubmit={(e) => console.log(e)}\n              />\n            </div>\n          </DefaultModal>\n        ) : (\n          \"\"\n        )}\n\n        <Table striped bordered hover size=\"sm\">\n          <thead>\n            <tr>\n              <th>\n                {\" \"}\n                <input\n                  id=\"checkToggle\"\n                  type=\"checkbox\"\n                  onChange={handleSelectAllToggle}\n                />\n              </th>\n              <th>Report</th>\n              <th>Date</th>\n              <th>Prepared By</th>\n              <th>Requested By</th>\n              <th>Ins?</th>\n              <th>Rjp?</th>\n            </tr>\n          </thead>\n          <tbody>\n            <Suspense fallback={<Spinner />}>\n              {fields?.map((item, index) => (\n                <Fragment key={index}>\n                  <Row\n                    item={item}\n                    onClick={(e) => handleClick(e)}\n                    index={index}\n                    fields={fields}\n                  />\n                </Fragment>\n              ))}\n            </Suspense>\n          </tbody>\n        </Table>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default FormReports;\n","import React, { Fragment, useRef, useState } from 'react'\nimport DefaultModal from '../../../../../../partials/modal/DefaultModal';\nimport ThemeHeader from '../../../../../../partials/content/ThemeHeader';\nimport ThemeButton from '../../../../../../partials/button/ThemeButton';\nimport { FieldArray } from 'redux-form';\nimport FormReports from '../../../../../../partials/form/partials/FormReports';\nimport AddReport from '../../../../modals/addReport/AddReport';\nconst SLReports = (props) => {\n    const [modalShow, setModalShow] = useState(false);\n    const [deleteItem, setDeleteItem] = useState(0);\n    return (\n        <Fragment>\n        {modalShow ? (\n          <DefaultModal show={modalShow} onHide={() => setModalShow(false)}>\n            <div>\n              <AddReport closeModal={() => setModalShow(false)} onSubmit={(e) => console.log(e)} />\n            </div>\n  \n          </DefaultModal>\n        ) : (\n          \"\"\n        )}\n        <ThemeHeader\n          right={\n            <Fragment>\n              <ThemeButton className=\"mr-2 lightGrey-button\" onClick={() => setDeleteItem(prev => prev + 1)} >Remove </ThemeButton>\n              <ThemeButton className=\"theme-button green-button\" onClick={()=> setModalShow(true) }>Add</ThemeButton>\n            </Fragment>\n          }\n        />\n        <FieldArray edit={props.edit} name=\"reports\" deleteItem={deleteItem} component={FormReports}/>\n      </Fragment>\n    )\n}\n\nexport default SLReports\n","import React, { Fragment } from 'react'\nimport { FieldArray } from 'redux-form';\nimport DragAndDrop from '../../../../../../partials/form/DragAndDrop';\n\nconst SLfiles = (props) => {\n\n    return (\n      <Fragment>\n        <FieldArray  name=\"files\" component={DragAndDrop}/>\n      </Fragment>\n    );\n  };\nexport default SLfiles","import React, { Fragment, useState } from \"react\";\nimport { makeStyles, AppBar, Tab, Tabs } from \"@material-ui/core\";\nimport ScrollableDiv from \"../../../../../partials/layout/ScrollableDiv\";\nimport SLnoteForm from \"./note/SLnoteForm\";\nimport SLcontacts from \"./contacts/SLcontacts\";\nimport SLfeatures from \"./features/SLfeatures\";\nimport SLdetails from \"./details/SLdetails\";\nimport SLreports from \"./reports/SLreports\";\nimport SLfiles from \"./files/SLfiles\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Fragment>{children}</Fragment>}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  input: {\n    display: \"none\",\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst ListingDetails = (props) => {\n  const { handleSubmit, pristine, edit, reset, submitting ,invalid } = props;\n  // const { contactProfileId } = props;\n  const [value, setValue] = useState(0);\n  // const [edit, setEdit] = useState(false);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const classes = useStyles();\n  console.log(edit)\n  return (\n    <Fragment>\n<div className={classes.root}>\n                <AppBar position=\"static\" className=\"app-bar\">\n                  <Tabs\n                    className=\"tabs\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                    value={value}\n                    onChange={handleChange}\n                    TabIndicatorProps={{ style: { background: \"transparent\" } }}\n                  >\n                    <Tab label=\"Note\" {...a11yProps(0)} />\n                    <Tab label=\"Contacts\" {...a11yProps(1)} />\n                    <Tab label=\"Features\" {...a11yProps(2)} />\n                    <Tab label=\"Details\" {...a11yProps(3)} />\n                    <Tab label=\"Reports\" {...a11yProps(4)} />\n                    <Tab label=\"Files\" {...a11yProps(5)} />\n                  </Tabs>\n                </AppBar>\n                <TabPanel className=\"p-3\" value={value} index={0}>\n                  <ScrollableDiv>\n                    <SLnoteForm />{\" \"}\n                  </ScrollableDiv>\n                </TabPanel>\n                <TabPanel className=\"p-3\" value={value} index={1}>\n                  <ScrollableDiv height=\"85vh\"><SLcontacts edit={edit}/></ScrollableDiv>\n                </TabPanel>\n                <TabPanel className=\"p-3\" value={value} index={2}><SLfeatures edit={edit}/></TabPanel>\n                <TabPanel className=\"p-3\" value={value} index={3}> <SLdetails edit={edit} /> </TabPanel>\n                <TabPanel className=\"p-3\" value={value} index={4}>\n                  \n                  <SLreports/>\n                  \n                  </TabPanel>\n                <TabPanel className=\"p-3\" value={value} index={5}> <SLfiles/></TabPanel>\n              </div>\n            \n    </Fragment>\n  );\n};\n\nexport default ListingDetails\n","import React, { Fragment, useEffect, useState, useRef, Suspense } from \"react\";\nimport { Table, Form, Col, Overlay, Popover, Spinner } from \"react-bootstrap\";\nimport { Field, FieldArray } from \"redux-form\";\nimport cuid from \"cuid\";\nimport moment from \"moment\";\nimport DefaultModal from \"../../../../../partials/modal/DefaultModal\";\nimport AddReport from \"../../../modals/addReport/AddReport\";\nimport { getListingCheckListById } from \"../../../_crud/listingsCrud\";\nimport ThemeButton from \"../../../../../partials/button/ThemeButton\";\nimport RadioInput from \"../../../../../partials/form/RadioInput\";\nimport TextInput from \"../../../../../partials/form/TextInput\";\nimport DateInput from \"../../../../../partials/form/DateInput\";\nimport { IconButton } from \"@material-ui/core\";\n\nconst renderHobbies = ({ fields, id, meta: { error } }) => {\n  const handleClick = () => {\n    let obj = {};\n\n    let val = document.getElementById(id).value;\n    obj = { val };\n    fields.push(val);\n    console.log(obj);\n  };\n\n  return (\n    <Fragment>\n      <tr className=\"expandable\" key=\"tr-expander\">\n        <td colSpan={6}>\n          <div className=\"d-flex\">\n            <input class=\"form-control\" type=\"text\" id={id} />\n            <IconButton\n              onClick={() => handleClick()}\n              aria-label=\"delete\"\n              size=\"small\"\n              className=\"brand-icon-button\"\n            >\n              <i className=\"fas fa-plus-circle\"></i>\n            </IconButton>\n          </div>\n        </td>\n      </tr>\n    </Fragment>\n  );\n};\n\nfunction Row({ fields, item, index, onClick, edit }) {\n  const [open, setOpen] = React.useState(false);\n  const handleCollapse = (e) => {\n    e.stopPropagation();\n    setOpen(!open);\n  };\n\n  console.log(edit);\n  return (\n    <React.Fragment>\n      <tr>\n        <td>\n          <Field\n            name={`${item}.isSelected`}\n            component={RadioInput}\n            type=\"checkbox\"\n          />\n        </td>\n        <td>{fields?.get(index)?.priority}</td>\n        <td>\n          <Field name={`${item}.task.task`} component={TextInput} edit={edit} />\n          {fields?.get(index)?.task?.subTask?.length ? (\n            <ThemeButton onClick={(e) => handleCollapse(e)} icon>\n              {\" \"}\n              <i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>\n            </ThemeButton>\n          ) : (\n            <ThemeButton icon onClick={(e) => handleCollapse(e)}>\n              {\" \"}\n              <i class=\"fas fa-plus    \"></i>\n            </ThemeButton>\n          )}\n        </td>\n        <td>{fields?.get(index)?.allocation}</td>\n        <td>\n          {\" \"}\n          <Field name={`${item}.date`} component={DateInput} edit={edit} />\n        </td>\n      </tr>\n\n      <Fragment>\n        {open ? (\n          <FieldArray\n            name={`${item}.task.subTask`}\n            component={renderHobbies}\n            id={cuid()}\n          />\n        ) : (\n          \"\"\n        )}\n\n        {fields?.get(index)?.task?.subTask?.length && open ? (\n          <Fragment>\n            {fields?.get(index)?.task?.subTask?.map((subtask, index) => (\n              <tr>\n                <td className=\"p-2\" colspan=\"7\">\n                  <Field\n                    name={`${item}.task.subTask[${index}]`}\n                    component={TextInput}\n                    edit={edit}\n                  />\n                  {/* {fields?.get(index)?.task?.subTask[index]} */}\n                  {/* {item.subTask} */}\n                </td>\n              </tr>\n            ))}\n          </Fragment>\n        ) : (\n          \"\"\n        )}\n      </Fragment>\n    </React.Fragment>\n  );\n}\n\nconst FormCheckList = (props) => {\n  const { fields, edit , task, allocation} = props;\n  const [featuresValue, setFeaturesValue] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n  const [id, setId] = useState(null);\n\n  useEffect(() => {\n    getListingCheckListById()\n      .then(({ data }) => {\n        if (!fields.length > 0) {\n          console.log(data);\n          data.map((item, index) => {\n            fields.push(item);\n          });\n        }\n      })\n      .catch(() => {});\n  }, []);\n\n  useEffect(() => {\n    console.log('i caleed');\n    getListingCheckListById()\n      .then(({ data }) => {\n          fields.removeAll();\n          data.map((item, index) => {\n            fields.push(item);\n          });\n      })\n      .catch(() => {});\n  }, [task,allocation]);\n\n\n\n  useEffect(() => {\n    handleRemove();\n  }, [props.deleteItem]);\n\n  const handleAddFeature = () => {\n    let obj = {};\n    obj.features = document.getElementById(\"features\").value;\n    obj.comments = document.getElementById(\"featureComments\").value;\n    obj.preference = document.getElementById(\"featurePreference\")?.value\n      ? document.getElementById(\"featurePreference\").value\n      : \"\";\n    obj.landSize = document.getElementById(\"featureLandsize\")?.value\n      ? document.getElementById(\"featureLandsize\").value\n      : \"\";\n    obj.landType = document.getElementById(\"featuresLandType\")?.value\n      ? document.getElementById(\"featuresLandType\").value\n      : \"\";\n    // fields.push(obj);\n  };\n\n  const handleRemove = () => {\n    for (let i = fields.length - 1; i >= 0; i--) {\n      if (fields.get(i).isSelected) {\n        fields.remove(i);\n      }\n    }\n\n    // document.getElementById(\"checkToggle\").checked = false;\n  };\n\n  const handleSelectAllToggle = (e) => {\n    const all = fields.getAll();\n    const selected = document.getElementById(\"checkToggle\").checked\n      ? true\n      : false;\n\n    fields.removeAll();\n    all.forEach((item, index) => {\n      all[index].isSelected = selected;\n      fields.push(item);\n    });\n  };\n\n  const myBuyerOptions = [\n    {\n      label: \"Seller\",\n      value: \"seller\",\n    },\n    {\n      label: \"Seller Solicitor\",\n      value: \"sellerSolicitor\",\n    },\n    {\n      label: \"Sarah\",\n      value: \"3\",\n    },\n  ];\n\n  const handleClick = (e) => {\n    setModalShow(true);\n    setId(e);\n  };\n\n  const handleClose = () => {\n    setModalShow(false);\n    setId(null);\n  };\n\n  return (\n    <Fragment>\n      <div className=\"tableTheme theme-table-striped\">\n        {modalShow ? (\n          <DefaultModal show={modalShow} onHide={() => handleClose()}>\n            <div>\n              <AddReport\n                id={id}\n                closeModal={() => handleClose()}\n                onSubmit={(e) => console.log(e)}\n              />\n            </div>\n          </DefaultModal>\n        ) : (\n          \"\"\n        )}\n\n        <Table striped bordered hover size=\"sm\">\n          <thead>\n            <tr>\n              <th>\n                <input\n                  id=\"checkToggle\"\n                  type=\"checkbox\"\n                  onChange={handleSelectAllToggle}\n                />\n              </th>\n              <th>Priority</th>\n              <th>Task</th>\n              <th>Allocation</th>\n              <th>Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td></td>\n              <td>\n                <select\n                  className=\"form-control\"\n                  id=\"features\"\n                  onChange={(e) => setFeaturesValue(e.target.value)}\n                  className=\"custom-select\"\n                >\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                </select>\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  id=\"task\"\n                  className=\"  form-control fix-rounded-right\"\n                  required\n                />\n              </td>\n              <td>\n                <select\n                  className=\"form-control\"\n                  id=\"allocation\"\n                  onChange={(e) => setFeaturesValue(e.target.value)}\n                  className=\"custom-select\"\n                >\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                </select>\n              </td>\n              <td className=\"d-flex\">\n                <input\n                  type=\"date\"\n                  id=\"date\"\n                  className=\"  form-control fix-rounded-right\"\n                  required\n                />\n                <IconButton\n                  onClick={handleAddFeature}\n                  aria-label=\"delete\"\n                  size=\"small\"\n                  className=\"brand-icon-button\"\n                >\n                  <i className=\"fas fa-plus-circle\"></i>\n                </IconButton>\n              </td>\n            </tr>\n            <Suspense fallback={<Spinner />}>\n              {fields?.map((item, index) => (\n                <Fragment key={index}>\n                  <Row\n                    item={item}\n                    onClick={(e) => handleClick(e)}\n                    index={index}\n                    fields={fields}\n                    edit={edit}\n                  />\n                </Fragment>\n              ))}\n            </Suspense>\n          </tbody>\n        </Table>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default FormCheckList;\n","import React, {\n  useEffect,\n  useState,\n  useCallback,\n  Fragment,\n  Suspense,\n} from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\n// import * as modal from '../_redux/modalRedux'\nimport { makeStyles, Button, IconButton } from \"@material-ui/core\";\nimport { reduxForm, Field, formValueSelector, FieldArray } from \"redux-form\";\n\nimport {\n  combineValidators,\n  isRequired,\n  composeValidators,\n  hasLengthGreaterThan,\n} from \"revalidate\";\nimport ThemeHeader from \"../../../../partials/content/ThemeHeader\";\nimport ThemeButton from \"../../../../partials/button/ThemeButton\";\nimport Item from \"../../../../partials/display/Item\";\nimport { Col, Table, Spinner } from \"react-bootstrap\";\nimport TextInput from \"../../../../partials/form/TextInput\";\nimport TextArea from \"../../../../partials/form/TextArea\";\nimport RadioInput from \"../../../../partials/form/RadioInput\";\nimport DateInput from \"../../../../partials/form/DateInput\";\nimport cuid from \"cuid\";\nimport { getListingCheckListSetting } from \"../../_crud/listingsCrud\";\nimport MultiSelect from \"../../../../partials/form/MultiSelect\";\nimport SortableTable from \"../../../../partials/form/sortableTable/SortableTable\";\nimport Handle from \"../../../../partials/component/handle/Handle\";\n\nconst renderHobbies = ({ fields, id, meta: { error } }) => {\n  const handleClick = () => {\n    let obj = {};\n\n    let val = document.getElementById(id).value;\n    obj = { val };\n    fields.push(val);\n    console.log(obj);\n  };\n\n  return (\n    <Fragment>\n      <tr className=\"expandable\" key=\"tr-expander\">\n        <td colSpan={6}>\n          <div className=\"d-flex\">\n            <input class=\"form-control\" type=\"text\" id={id} />\n            <IconButton\n              onClick={() => handleClick()}\n              aria-label=\"delete\"\n              size=\"small\"\n              className=\"brand-icon-button\"\n            >\n              <i className=\"fas fa-plus-circle\"></i>\n            </IconButton>\n          </div>\n        </td>\n      </tr>\n    </Fragment>\n  );\n};\n\nfunction Row({ fields, item, index, onClick, edit }) {\n  const [open, setOpen] = React.useState(false);\n  const handleCollapse = (e) => {\n    e.stopPropagation();\n    setOpen(!open);\n  };\n  const myBuyerOptions = [\n    {\n      label: \"Seller\",\n      value: \"seller\",\n    },\n    {\n      label: \"Seller Solicitor\",\n      value: \"sellerSolicitor\",\n    },\n    {\n      label: \"Sarah\",\n      value: \"3\",\n    },\n  ];\n\n  console.log(edit);\n  return (\n    <React.Fragment>\n        <td>\n          <Field\n            name={`${item}.isSelected`}\n            component={RadioInput}\n            type=\"checkbox\"\n          />\n        </td>\n        <td>{fields?.get(index)?.priority}</td>\n        <td className=\"d-flex\">\n          <Field name={`${item}.task.task`} component={TextInput} edit={edit} />\n          {fields?.get(index)?.task?.subTask?.length ? (\n            <ThemeButton onClick={(e) => handleCollapse(e)} icon>\n              {\" \"}\n              <i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>\n            </ThemeButton>\n          ) : (\n            <ThemeButton icon onClick={(e) => handleCollapse(e)}>\n              {\" \"}\n              <i class=\"fas fa-plus    \"></i>\n            </ThemeButton>\n          )}\n        </td>\n        <td>{fields?.get(index)?.allocation}</td>\n        <td className=\"d-flex lastColumn\" colspan=\"4\">\n          <div className=\"d-flex w-100\">\n            <Field\n              name={`${item}.when.number`}\n              component={TextInput}\n              edit={edit}\n              options = {myBuyerOptions}\n            />\n            <Field\n              name={`${item}.when.timeType`}\n              component={MultiSelect}\n              edit={edit}\n              isMulti={false}\n              showBottom={false}\n              options = {myBuyerOptions}\n            />\n            <Field\n              name={`${item}.when.position`}\n              component={MultiSelect}\n              edit={edit}\n              options = {myBuyerOptions}\n            />\n            <Field\n              name={`${item}.when.type`}\n              component={MultiSelect}\n              edit={edit}\n              options = {myBuyerOptions}\n            />\n            <Handle />\n          </div>{\" \"}\n        </td>\n\n      <Fragment>\n        {open ? (\n          <FieldArray\n            name={`${item}.task.subTask`}\n            component={renderHobbies}\n            id={cuid()}\n          />\n        ) : (\n          \"\"\n        )}\n\n        {fields?.get(index)?.task?.subTask?.length && open ? (\n          <Fragment>\n            {fields?.get(index)?.task?.subTask?.map((subtask, index) => (\n              <tr>\n                <td className=\"p-2\" colspan=\"7\">\n                  <Field\n                    name={`${item}.task.subTask[${index}]`}\n                    component={TextInput}\n                    edit={edit}\n                  />\n                  {/* {fields?.get(index)?.task?.subTask[index]} */}\n                  {/* {item.subTask} */}\n                </td>\n              </tr>\n            ))}\n          </Fragment>\n        ) : (\n          \"\"\n        )}\n      </Fragment>\n    </React.Fragment>\n  );\n}\n\nconst CheckListSettingsForm = (props) => {\n  const { fields, type, edit } = props;\n  const [id, setId] = useState(null);\n\n  useEffect(() => {\n    getListingCheckListSetting()\n      .then(({ data }) => {\n        if (!fields.length > 0) {\n          console.log(data);\n          data.map((item, index) => {\n            fields.push(item);\n          });\n        }\n      })\n      .catch(() => {});\n  }, []);\n\n  useEffect(() => {\n    console.log(\"i caleed\");\n    // getListingCheckListSetting()\n    //   .then(({ data }) => {\n    //     fields.removeAll();\n    //       data.map((item, index) => {\n    //         fields.push(item);\n    //       });\n    //   })\n    //   .catch(() => {});\n  }, [type]);\n\n  useEffect(() => {\n    handleRemove();\n  }, [props.deleteItem]);\n\n  const handleAddFeature = () => {\n    let obj = {};\n    obj.features = document.getElementById(\"features\").value;\n    obj.comments = document.getElementById(\"featureComments\").value;\n    obj.preference = document.getElementById(\"featurePreference\")?.value\n      ? document.getElementById(\"featurePreference\").value\n      : \"\";\n    obj.landSize = document.getElementById(\"featureLandsize\")?.value\n      ? document.getElementById(\"featureLandsize\").value\n      : \"\";\n    obj.landType = document.getElementById(\"featuresLandType\")?.value\n      ? document.getElementById(\"featuresLandType\").value\n      : \"\";\n    // fields.push(obj);\n  };\n\n  const handleRemove = () => {\n    for (let i = fields.length - 1; i >= 0; i--) {\n      if (fields.get(i).isSelected) {\n        fields.remove(i);\n      }\n    }\n\n    // document.getElementById(\"checkToggle\").checked = false;\n  };\n\n  const handleSelectAllToggle = (e) => {\n    const all = fields.getAll();\n    const selected = document.getElementById(\"checkToggle\").checked\n      ? true\n      : false;\n\n    fields.removeAll();\n    all.forEach((item, index) => {\n      all[index].isSelected = selected;\n      fields.push(item);\n    });\n  };\n\n  const myBuyerOptions = [\n    {\n      label: \"Seller\",\n      value: \"seller\",\n    },\n    {\n      label: \"Seller Solicitor\",\n      value: \"sellerSolicitor\",\n    },\n    {\n      label: \"Sarah\",\n      value: \"3\",\n    },\n  ];\n\n  return (\n    <Fragment>\n      <div className=\"tableTheme theme-table-striped\">\n        <Table striped bordered hover size=\"sm\">\n          <thead>\n            <tr>\n              <th>\n                <input id=\"checkToggle\" type=\"checkbox\" />\n              </th>\n              <th>Pri.</th>\n              <th>Task</th>\n              <th>Allocation</th>\n              <th>When</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td></td>\n              <td>\n                <select\n                  className=\"form-control\"\n                  id=\"features\"\n                  className=\"custom-select\"\n                >\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                </select>\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  id=\"task\"\n                  className=\"  form-control fix-rounded-right\"\n                  required\n                />\n              </td>\n              <td>\n                <select\n                  className=\"form-control\"\n                  id=\"allocation\"\n                  className=\"custom-select\"\n                >\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                </select>\n              </td>\n              <td className=\"d-flex\">\n                <input\n                  type=\"date\"\n                  id=\"date\"\n                  className=\"  form-control fix-rounded-right\"\n                  required\n                />\n                <IconButton\n                  onClick={handleAddFeature}\n                  aria-label=\"delete\"\n                  size=\"small\"\n                  className=\"brand-icon-button\"\n                >\n                  <i className=\"fas fa-plus-circle\"></i>\n                </IconButton>\n              </td>\n            </tr>\n            </tbody>\n            <Suspense fallback={<Spinner />}>\n            <SortableTable fields={fields}>\n              {fields?.map((item, index) => (\n                <Fragment key={index}>\n                  <Row item={item} index={index} fields={fields} edit={edit} />\n                </Fragment>\n              ))} </SortableTable>\n            </Suspense>\n         \n        </Table>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default CheckListSettingsForm;\n","import React, {\n  useEffect,\n  useState,\n  useCallback,\n  Fragment,\n  Suspense,\n} from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\n// import * as modal from '../_redux/modalRedux'\nimport { makeStyles, Button, IconButton } from \"@material-ui/core\";\nimport {\n  reduxForm,\n  FieldArray,\n  getFormValues,\n} from \"redux-form\";\n\nimport {\n  combineValidators,\n  isRequired,\n  composeValidators,\n  hasLengthGreaterThan,\n} from \"revalidate\";\nimport ThemeHeader from \"../../../../partials/content/ThemeHeader\";\nimport ThemeButton from \"../../../../partials/button/ThemeButton\";\nimport CheckListSettingsForm from \"./CheckListSettingsForm\";\nimport Select from \"react-select\";\n\nconst validate = combineValidators({\n  price_from: isRequired({ message: \"The event title is required\" }),\n  price_to: isRequired({ message: \"The category is required\" }),\n  reason: composeValidators(\n    isRequired({ message: \"Please enter a description\" }),\n    hasLengthGreaterThan(4)({\n      message: \"Description needs to be at least 5 characters\",\n    })\n  )(),\n  price_view: isRequired(\"city\"),\n  venue: isRequired(\"venue\"),\n  checkbox: isRequired(\"checkbox\"),\n  startTime: isRequired(\"date\"),\n  endTime: isRequired(\"date\"),\n});\n\nconst CheckListSettings = (props) => {\n  const {\n    handleSubmit,\n    pristine,\n    onHide,\n    submitting,\n    invalid,\n    selectedValues,\n  } = props;\n  console.log(props);\n  const { fields, edit, task, allocation } = props;\n  const [type, setType] = useState(\"\");\n\n  const [id, setId] = useState(null);\n  const myBuyerOptions = [\n    {\n      label: \"Seller\",\n      value: \"seller\",\n    },\n    {\n      label: \"Seller Solicitor\",\n      value: \"sellerSolicitor\",\n    },\n    {\n      label: \"Sarah\",\n      value: \"3\",\n    },\n  ];\n\n  const handleSave = () => {\n    //   console.log(adjustPrice)\n    // selectedValues(adjustPrice)\n  };\n  console.log(props);\n  return (\n    <Fragment>\n      <div className=\"buyerFormModal\">\n        <form className=\"checkListTable\" onSubmit={handleSubmit}>\n          <Fragment>\n            <ThemeHeader\n              left={\n                <Fragment>\n                  <h5 className=\"title\">Checklist Settings</h5>\n                  <div className=\"float-item\">\n                    <Select\n                      onChange={(e) => setType(e)}\n                      options={myBuyerOptions}\n                      closeMenuOnSelect = {true}\n                    />\n                  </div>\n                </Fragment>\n              }\n              right={\n                <Fragment>\n                  <Fragment>\n                    <div className=\"pl-2\">\n                      <ThemeButton icon onClick={onHide}><i class=\"fas fa-trash\"></i></ThemeButton>\n                    </div>\n                    <div className=\"pl-2\">\n                      <ThemeButton onClick={onHide}>Cancel</ThemeButton>\n                    </div>\n                    <div className=\"pl-2\">\n                      <ThemeButton\n                        disabled={invalid || pristine || submitting}\n                        onClick={() => handleSave()}\n                        className=\"theme-button green-button\"\n                      >\n                        Save\n                      </ThemeButton>\n                    </div>\n                  </Fragment>\n                </Fragment>\n              }\n            />\n\n            <FieldArray\n              name=\"checklistSettings\"\n              type={type}\n              component={CheckListSettingsForm}\n            />\n          </Fragment>\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nconst actions = {\n  // socialFeedPost: news.actions.socialFeedPostAsync,\n};\n\n// const selector = formValueSelector(\"adjustPrice\");\nconst mapState = (state) => {\n  const values = getFormValues(\"checklistSettings\")(state);\n  return {\n    values,\n  };\n};\nexport default connect(\n  mapState,\n  actions\n)(\n  reduxForm({ form: \"checklistSettings\", initialValues: {}, validate })(\n    CheckListSettings\n  )\n);\n","/* eslint-disable no-restricted-imports */\nimport React, { useState, Fragment, useEffect } from \"react\";\nimport {\n  useTable,\n  useSortBy,\n  useGlobalFilter,\n  useRowSelect,\n} from \"react-table\";\nimport { Paper, Button, Checkbox, Chip } from \"@material-ui/core\";\nimport { Waypoint } from \"react-waypoint\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { OverlayTrigger } from \"react-bootstrap\";\nimport moment from \"moment\";\nimport { useDispatch } from \"react-redux\";\nimport { getPercentage } from \"../../../../../_helpers/_utils/utils\";\nimport {\n  getListingAdvertisingSById,\n  getListingAdvertisingList,\n} from \"../../../_crud/listingsCrud\";\nimport ThemeHeader from \"../../../../../partials/content/ThemeHeader\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { set } from \"object-path\";\nimport ThemeButton from \"../../../../../partials/button/ThemeButton\";\nimport Select from \"react-select\";\n\nconst IndeterminateCheckbox = React.forwardRef(\n  ({ indeterminate, ...rest }, ref) => {\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n      <>\n        {/* e.stopPropagation() will stop it from row onClick */}\n        <Checkbox className=\"table-checkbox\" ref={resolvedRef} {...rest} />\n      </>\n    );\n  }\n);\n\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    position: 'static',\n\n    // change background colour if dragging\n    background: isDragging ? 'lightgreen' : 'grey',\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\n});\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nconst QuoteList = React.memo(function QuoteList({ quotes }) {\n  return quotes?.map((item, index) => (\n    <Quote quote={item} index={index} key={index} />\n  ));\n});\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  console.log(sourceClone);\n  console.log(destClone);\n\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n  destClone.push(removed);\n\n  //   destClone.splice(droppableDestination.index, 0, removed);\n\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n\n  return result;\n};\n\nconst getRenderItem = (items) => (provided, snapshot, rubric) => (\n  <div\n    {...provided.draggableProps}\n    {...provided.dragHandleProps}\n    ref={provided.innerRef}\n  >\n    Item id: {items[rubric.source.index].id}\n  </div>\n);\n\nfunction Quote({ quote, index }) {\n  return (\n    <Draggable draggableId={quote.id} index={index}>\n      {(provided,snapshot) => (\n           <tr ref={provided.innerRef}\n           {...provided.draggableProps}\n           {...provided.dragHandleProps}\n           style={getItemStyle(\n            snapshot.isDragging,\n            provided.draggableProps.style\n        )}\n           >\n           <td >{quote.advertisingItem} {quote.price} <ThemeButton icon > <i class=\"fas fa-bars    \"></i> </ThemeButton></td>\n         </tr>\n      )}\n    </Draggable>\n  );\n}\n\nfunction Table({\n  columns,\n  data,\n  update,\n  handleChange,\n  selectable,\n  isEditable,\n}) {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    preGlobalFilteredRows,\n    prepareRow,\n    selectedFlatRows,\n    footerGroups,\n    state: { sortBy },\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n\n    isEditable\n      ? (hooks) => {\n          hooks.allColumns.push((columns) => [\n            // Let's make a column for selection\n            {\n              id: \"selection\",\n              // The header can use the table's getToggleAllRowsSelectedProps method\n              // to render a checkbox.  Pagination is a problem since this will select all\n              // rows even though not all rows are on the current page.  The solution should\n              // be server side pagination.  For one, the clients should not download all\n              // rows in most cases.  The client should only download data for the current page.\n              // In that case, getToggleAllRowsSelectedProps works fine.\n              Header: ({ getToggleAllRowsSelectedProps }) => (\n                <div>\n                  <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n                </div>\n              ),\n              // The cell can use the individual row's getToggleRowSelectedProps method\n              // to the render a checkbox\n              Cell: ({ row }) => (\n                <div>\n                  <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n                </div>\n              ),\n            },\n            ...columns,\n          ]);\n        }\n      : \"\",\n    useGlobalFilter, // useGlobalFilter!\n    useSortBy,\n    useRowSelect\n  );\n\n  React.useEffect(() => {\n    console.log(\"sort\");\n  }, [sortBy]);\n\n  console.log(rows);\n  console.log(preGlobalFilteredRows);\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    console.log(selectedFlatRows.map((d) => d.original));\n    handleChange(selectedFlatRows.map((d) => d.original));\n  }, [selectedFlatRows]);\n\n  return (\n    <Fragment>\n      <div className=\"tableFixHead theme-table-striped d-flex overflow-hidden\">\n        <div className=\" overflow-auto\">\n          <table className=\"table simple\">\n            <thead>\n              <th>Package</th>\n            </thead>\n              {/* {selectable?.map((row, i) => (\n                <Fragment>\n                  <tr>\n                    <td key={i}>{row.advertisingItem}</td>\n                  </tr>\n                </Fragment>\n              ))} */}\n              <Droppable droppableId=\"tableSource\"\n              renderClone={(provided, snapshot, rubric) => (\n                // <div\n                //   {...provided.draggableProps}\n                //   {...provided.dragHandleProps}\n                //   ref={provided.innerRef}\n                // >\n                //   Item id:\n                // </div>\n                           <tr classnames=\"d-flex justify-content-between\" ref={provided.innerRef}\n                           {...provided.draggableProps}\n                           {...provided.dragHandleProps}\n                           style={getItemStyle(\n                            snapshot.isDragging,\n                            provided.draggableProps.style\n                        )}\n                           >\n                           <td >{selectable[rubric.source.index].advertisingItem} {selectable[rubric.source.index].price} <ThemeButton icon > <i class=\"fas fa-bars    \"></i> </ThemeButton></td>\n                         </tr>\n              )}\n              >\n                {(provided, snapshot) => (\n                  <tbody   style={getListStyle(snapshot.isDraggingOver)}  ref={provided.innerRef} {...provided.droppableProps}>\n                      {console.log(provided)}\n                      {console.log(snapshot)}\n                    <QuoteList quotes={selectable} />\n                    {provided.placeholder}\n                  </tbody>\n                )}\n              </Droppable>\n          </table>\n        </div>\n\n        <Droppable droppableId=\"tableDestination\">\n          {(provided) => (\n            <div className=\"overflow-auto flex-grow-1\" ref={provided.innerRef} {...provided.droppableProps}>\n              <table\n                {...getTableProps()}\n                className=\"table  w-100 h-100\"\n              >\n                <thead>\n                  {headerGroups.map((headerGroup) => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                      {headerGroup.headers.map((column) => (\n                        <th {...column.getHeaderProps()}>\n                          {column.render(\"Header\")}\n                        </th>\n                      ))}\n                    </tr>\n                  ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                  {rows.map((row, i) => {\n                    prepareRow(row);\n                    return (\n                      <tr {...row.getRowProps()}>\n                        {row.cells.map((cell, i) => {\n                          return (\n                            <td key={i} {...cell.getCellProps()}>\n                              {cell.render(\"Cell\")}\n                            </td>\n                          );\n                        })}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n                <tfoot>\n                  {footerGroups.map((group) => (\n                    <tr {...group.getFooterGroupProps()}>\n                      {group.headers.map((column) => (\n                        <td {...column.getFooterProps()}>\n                          {column.render(\"Footer\")}\n                        </td>\n                      ))}\n                    </tr>\n                  ))}\n                </tfoot>\n              </table>\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </div>\n    </Fragment>\n  );\n}\n\nfunction AdvertisingSEdit({ isEditable }) {\n  const [items, setItems] = useState(null);\n  const [state, setState] = useState(null);\n  const [selectable, setSelectable] = useState(null);\n\n  // setItems(data.data);\n  useEffect(() => {\n    console.log(\"useeffect\");\n    getListingAdvertisingSById()\n      .then(({ data }) => {\n        setItems(data);\n        console.log(data);\n      })\n      .then(() => {\n        getListingAdvertisingList()\n          .then(({ data }) => {\n            setState(data);\n            console.log(selectable);\n          })\n          .catch(() => {});\n      })\n      .then(() => {\n        getListingAdvertisingList()\n          .then(({ data }) => {\n            setSelectable(data);\n            console.log(selectable);\n          })\n          .catch(() => {});\n      })\n      .catch(() => {});\n  }, []);\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Package\",\n        Footer: \"Name\",\n        columns: [\n          {\n            Header: \"Advertising Item\",\n            accessor: \"advertisingItem\",\n            Footer: (total) => {\n              return (\n                <Fragment>\n                  <strong>Total:</strong>\n                </Fragment>\n              );\n            },\n            Cell: ({ cell: { value } }) => (\n              <p>{value}</p>\n              // <p>{moment(value).format(\"DD/MM/YYYY\")}</p>\n            ),\n          },\n          {\n            Header: \"Price\",\n            accessor: \"price\",\n            Footer: (total) => {\n              // Only calculate total visits if rows change\n              console.log(total);\n              const item = React.useMemo(\n                () =>\n                  total.rows.reduce((sum, row) => row.values.price + sum, 0),\n                [total.rows]\n              );\n              return <Fragment>${item}</Fragment>;\n            },\n            Cell: ({ cell: { value } }) => (\n              // <p>{moment(original.date).format(\"hh : m\")}</p>\n              <p>{value}</p>\n            ),\n          },\n          {\n            Header: \"Contacted\",\n            accessor: \"completed\",\n            // Footer: (total) => {\n            //   const item = React.useMemo(\n            //     () =>\n            //       total.rows.reduce(\n            //         (sum, row) => row.values.contacted + sum,\n            //         0\n            //       ),\n            //     [total.rows]\n            //   );\n            //   return <Fragment>{item}</Fragment>;\n            // },\n            Cell: ({\n              cell: { value },\n              cell: {\n                row: { original },\n              },\n            }) => <p>{moment(value).format(\"DD/MM/YYYY\")}</p>,\n          },\n        ],\n      },\n    ],\n    []\n  );\n\n  const datas = React.useMemo(() => items, [items]);\n\n  function onDragEnd(result) {\n    const { source, destination } = result;\n    console.log(result);\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.destination.droppableId === result.source.droppableId) {\n      return;\n    }\n\n    // const newColumn = {\n    //     ...state,\n    //     taskIds: newTaskIds,\n    //   };\n\n    //   const newState = {\n    //     ...this.state,\n    //     columns: {\n    //       ...this.state.columns,\n    //       [newColumn.id]: newColumn,\n    //     },\n    //   };\n\n    //   this.setState(newState);\n\n    // const quotes = reorder(\n    //   state,\n    //   result.source.index,\n    //   result.destination.index\n    // );\n\n    const results = move(selectable, items, source, destination);\n\n    setItems(results.tableDestination);\n    setSelectable(results.tableSource);\n    console.log(results);\n    // setState(quotes);\n  }\n\n  const options = [\n    { value: \"chocolate\", label: \"Chocolate\" },\n    { value: \"strawberry\", label: \"Strawberry\" },\n    { value: \"vanilla\", label: \"Vanilla\" },\n  ];\n\n  return (\n    <Fragment>\n      <ThemeHeader\n        classnames=\"pb-2\"\n        left={<Fragment>\n            <div className=\"float-item\">\n                <Select  options={options} />\n              </div>  <ThemeButton icon > <i class=\"fas fa-cog    \"></i></ThemeButton>\n            </Fragment>}\n        right={\n          <Fragment>\n            {\" \"}\n            <Chip\n              label=\"Amount Received: $500\"\n              className=\"mr-2\"\n              variant=\"outlined\"\n            />{\" \"}\n            <Chip label=\"Amount Owed: $500\" variant=\"outlined\" />\n            <ThemeButton\n              className=\"mr-2 lightGrey-button\"\n            //   onClick={() => setDeleteItem((prev) => prev + 1)}\n            >\n              Remove{\" \"}\n            </ThemeButton>\n            <ThemeButton\n              className=\"theme-button green-button\"\n              \n            >\n              Complete\n            </ThemeButton>\n          </Fragment>\n        }\n      />\n\n      {state ? (\n        <DragDropContext onDragEnd={onDragEnd}>\n          <div className=\"listings-table\">\n            {items ? (\n              <Table\n                columns={columns}\n                data={datas}\n                handleChange={(e) => console.log(e)}\n                selectable={selectable}\n                isEditable={true}\n              />\n            ) : (\n              \"Loading ...\"\n            )}\n          </div>\n        </DragDropContext>\n      ) : (\n        \"\"\n      )}\n    </Fragment>\n  );\n}\n\nexport default AdvertisingSEdit;\n","/* eslint-disable no-restricted-imports */\nimport React, { useState, Fragment, useEffect } from \"react\";\nimport { useTable, useSortBy, useGlobalFilter,useRowSelect } from \"react-table\";\nimport { Paper, Button, Checkbox, Chip } from \"@material-ui/core\";\nimport { Waypoint } from \"react-waypoint\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { OverlayTrigger} from \"react-bootstrap\";\nimport moment from \"moment\";\nimport { useDispatch } from \"react-redux\";\nimport { getPercentage } from \"../../../../../_helpers/_utils/utils\";\nimport { getListingAdvertisingSById } from \"../../../_crud/listingsCrud\";\nimport ThemeHeader from \"../../../../../partials/content/ThemeHeader\";\n\n\nconst IndeterminateCheckbox = React.forwardRef(\n  ({ indeterminate, ...rest }, ref) => {\n    const defaultRef = React.useRef()\n    const resolvedRef = ref || defaultRef\n\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate\n    }, [resolvedRef, indeterminate])\n\n    return (\n      <>\n      {/* e.stopPropagation() will stop it from row onClick */}\n        <Checkbox className='table-checkbox' ref={resolvedRef} {...rest} /> \n      </>\n    )\n  }\n)\n\nfunction Table({ columns, data, update, handleChange , isEditable}) {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    preGlobalFilteredRows,\n    prepareRow,\n    selectedFlatRows,\n    footerGroups,\n    state: { sortBy},\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n\n    isEditable ? (hooks => {\n      hooks.allColumns.push(columns => [\n        // Let's make a column for selection\n        {\n          id: 'selection',\n          // The header can use the table's getToggleAllRowsSelectedProps method\n          // to render a checkbox.  Pagination is a problem since this will select all\n          // rows even though not all rows are on the current page.  The solution should\n          // be server side pagination.  For one, the clients should not download all\n          // rows in most cases.  The client should only download data for the current page.\n          // In that case, getToggleAllRowsSelectedProps works fine.\n          Header: ({ getToggleAllRowsSelectedProps }) => (\n            <div>\n              <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n            </div>\n          ),\n          // The cell can use the individual row's getToggleRowSelectedProps method\n          // to the render a checkbox\n          Cell: ({ row }) => (\n            <div>\n              <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n            </div>\n          ),\n        },\n        ...columns,\n      ])\n    }) : '',\n    useGlobalFilter, // useGlobalFilter!\n    useSortBy,\n    useRowSelect,\n    \n  );\n\n  React.useEffect(() => {\n    console.log(\"sort\");\n  }, [sortBy]);\n\n  console.log(rows);\n  console.log(preGlobalFilteredRows);\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    console.log(selectedFlatRows.map(\n      d => d.original\n    ))\n    handleChange(selectedFlatRows.map(\n      d => d.original\n    ))\n  }, [selectedFlatRows]);\n\n  return (\n    <Fragment>\n      <div className=\"tableFixHead theme-table-striped\">\n        <table {...getTableProps()} className=\"table\">\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th {...column.getHeaderProps()}>\n                    {column.render(\"Header\")}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row, i) => {\n              prepareRow(row);\n              return (\n                <tr\n                  {...row.getRowProps()}\n                >\n                  {row.cells.map((cell, i) => {\n                    return (\n                      <td key={i} {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                    );\n                  })}\n                </tr>\n                \n              );\n            })}\n          </tbody>\n          <tfoot>\n            {footerGroups.map((group) => (\n              <tr {...group.getFooterGroupProps()}>\n                {group.headers.map((column) => (\n                  <td {...column.getFooterProps()}>\n                    {column.render(\"Footer\")}\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tfoot>\n        </table>\n      </div>\n    </Fragment>\n  );\n}\n\nfunction AdvertisingSView({ isEditable}) {\n  const [items, setItems] = useState(null);\n\n  // setItems(data.data);\n  useEffect(() => {\n    \n    console.log('useeffect')\n    getListingAdvertisingSById()\n      .then(({data}) => {\n        setItems(data);\n        console.log(data);\n      })\n      .catch(() => {});\n  }, []);\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Package\",\n        Footer: \"Name\",\n        columns: [\n          {\n            Header: \"Advertising Item\",\n            accessor: \"advertisingItem\",\n            Footer: (total) => {\n                return (\n                  <Fragment>\n                    <strong>Total:</strong>\n                  </Fragment>\n                );\n              },\n            Cell: ({ cell: { value } }) => (\n                <p>{value}</p>\n            // <p>{moment(value).format(\"DD/MM/YYYY\")}</p>\n            ),\n          },\n          {\n            Header: \"Price\",\n            accessor: \"price\",\n            Footer: (total) => {\n                // Only calculate total visits if rows change\n                console.log(total);\n                const item = React.useMemo(\n                  () =>\n                    total.rows.reduce(\n                      (sum, row) => row.values.price + sum,\n                      0\n                    ),\n                  [total.rows]\n                );\n                return <Fragment>${item}</Fragment>;\n              },\n            Cell: ({ cell: { value } })=> (\n            // <p>{moment(original.date).format(\"hh : m\")}</p>\n            <p>{value}</p>\n            ),\n          },\n          {\n            Header: \"Contacted\",\n            accessor: \"completed\",\n            // Footer: (total) => {\n            //   const item = React.useMemo(\n            //     () =>\n            //       total.rows.reduce(\n            //         (sum, row) => row.values.contacted + sum,\n            //         0\n            //       ),\n            //     [total.rows]\n            //   );\n            //   return <Fragment>{item}</Fragment>;\n            // },\n            Cell: ({ cell: { value },cell: {\n              row: { original },\n            }, }) => <p>{moment(value).format(\"DD/MM/YYYY\")}</p>,\n          },\n        ],\n      },\n    ],\n    []\n  );\n\n  const datas = React.useMemo(() => items, [items]);\n\n  return (\n    <Fragment>\n              <ThemeHeader\n        classnames=\"pb-2\"\n        left={<h5>Package: Custom Package</h5>}\n        right={<Fragment> <Chip label=\"Amount Received: $500\" className=\"mr-2\" variant=\"outlined\" /> <Chip label=\"Amount Owed: $500\"  variant=\"outlined\" /></Fragment>}\n      />\n      <div className=\"listings-table\">\n          \n      {items ? <Table\n        columns={columns}\n        data={datas}\n        handleChange={(e) => console.log(e)}\n        isEditable = {isEditable}\n      /> : 'Loading ...'}\n      </div>\n     \n    </Fragment>\n  );\n}\n\nexport default AdvertisingSView;\n","import React, { useEffect } from \"react\";\nimport { Checkbox } from \"@material-ui/core\";\nimport {\n  useTable,\n  useSortBy,\n  useGlobalFilter,\n  useRowSelect,\n} from \"react-table\";\nimport { Waypoint } from \"react-waypoint\";\n\nconst IndeterminateCheckbox = React.forwardRef(\n  ({ indeterminate, ...rest }, ref) => {\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n    console.log(indeterminate);\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n      <>\n        {/* e.stopPropagation() will stop it from row onClick */}\n        <Checkbox className=\"table-checkbox\" ref={resolvedRef} {...rest} />\n      </>\n    );\n  }\n);\n\nconst DynamicTable = ({\n  columns,\n  data,\n  update,\n  handleChange,\n  isEditable,\n  showFooter,\n  handleRowClick\n}) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    preGlobalFilteredRows,\n    prepareRow,\n    selectedFlatRows,\n    footerGroups,\n    state: { sortBy },\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n\n    isEditable\n      ? (hooks) => {\n          hooks.allColumns.push((columns) => [\n            // Let's make a column for selection\n            {\n              id: \"selection\",\n              // The header can use the table's getToggleAllRowsSelectedProps method\n              // to render a checkbox.  Pagination is a problem since this will select all\n              // rows even though not all rows are on the current page.  The solution should\n              // be server side pagination.  For one, the clients should not download all\n              // rows in most cases.  The client should only download data for the current page.\n              // In that case, getToggleAllRowsSelectedProps works fine.\n              Header: ({ getToggleAllRowsSelectedProps }) => (\n                <div>\n                  <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n                </div>\n              ),\n              // The cell can use the individual row's getToggleRowSelectedProps method\n              // to the render a checkbox\n              Cell: ({ row }) => (\n                <div>\n                  <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n                </div>\n              ),\n            },\n            ...columns,\n          ]);\n        }\n      : \"\",\n    useGlobalFilter, // useGlobalFilter!\n    useSortBy,\n    useRowSelect\n  );\n\n  React.useEffect(() => {\n    console.log(\"sort\");\n  }, [sortBy]);\n\n  console.log(rows);\n  console.log(preGlobalFilteredRows);\n\n  useEffect(() => {\n    console.log(selectedFlatRows.map((d) => d.original));\n    if (isEditable) {\n      handleChange(selectedFlatRows.map((d) => d.original));\n    }\n  }, [selectedFlatRows]);\n\n  const handleRowClicked = ({ original }) => {\n    console.log(original);\n    if(handleRowClick){\n      handleRowClick(original)\n    }\n  };\n\n  return (\n    <div className=\"tableFixHead theme-table-striped\">\n      <table {...getTableProps()} className=\"table\">\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()} onClick={() => handleRowClicked(row)} >\n                {row.cells.map((cell, i) => {\n                  return (\n                    <td key={i} {...cell.getCellProps()}>\n                      {cell.render(\"Cell\")}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n          <tr>\n            <td>\n              <Waypoint onEnter={update} />\n            </td>\n          </tr>\n        </tbody>\n        {showFooter ? (\n          <tfoot>\n            {footerGroups.map((group) => (\n              <tr {...group.getFooterGroupProps()}>\n                {group.headers.map((column) => (\n                  <td {...column.getFooterProps()}>\n                    {column.render(\"Footer\")}\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tfoot>\n        ) : (\n          \"\"\n        )}\n      </table>\n    </div>\n  );\n};\n\nexport default DynamicTable;\n","import React, { Fragment, useState } from \"react\";\nimport { makeStyles, AppBar, Tab, Tabs } from \"@material-ui/core\";\nimport Select from \"react-select\";\nimport { FieldArray } from \"redux-form\";\nimport DropzoneField from \"../../../../../partials/form/DropzoneField\";\nimport LibraryText from \"./LibraryText\";\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Fragment>{children}</Fragment>}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    flexDirection: \"unset\",\n    justifyContent: \"space-between\",\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  input: {\n    display: \"none\",\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst Library = (props) => {\n  const { handleSubmit, pristine, reset, submitting, edit } = props;\n  // const { contactProfileId } = props;\n  const [value, setValue] = useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const classes = useStyles();\n  const options = [\n    { value: \"chocolate\", label: \"Chocolate\" },\n    { value: \"strawberry\", label: \"Strawberry\" },\n    { value: \"vanilla\", label: \"Vanilla\" },\n  ];\n  return (\n    <Fragment>\n      <div className={classes.root}>\n        <AppBar position=\"static\" className={\"app-bar \" + classes.appBar}>\n          <Tabs\n            className=\"tabs\"\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            value={value}\n            onChange={handleChange}\n            TabIndicatorProps={{ style: { background: \"transparent\" } }}\n          >\n            <Tab label=\"Images\" {...a11yProps(0)} />\n            <Tab label=\"Videos\" {...a11yProps(1)} />\n            <Tab label=\"Text\" {...a11yProps(2)} />\n          </Tabs>\n\n          <div className=\"float-item\">\n            <Select options={options} />\n          </div>\n        </AppBar>\n        <TabPanel className=\"p-3\" value={value} index={0}>\n          <div className=\"container\">\n            <FieldArray\n              name=\"images\"\n              type=\"file\"\n              acceptedFileType=\"image/*\"\n              uploadType=\"image\"\n              component={DropzoneField}\n            />\n          </div>\n        </TabPanel>\n        <TabPanel className=\"p-3\" value={value} index={1}>\n          <div className=\"container\">\n            <FieldArray\n              name=\"videos\"\n              type=\"file\"\n              component={DropzoneField}\n              acceptedFileType=\"video/*\"\n              uploadType=\"video\"\n            />\n          </div>\n        </TabPanel>\n        <TabPanel className=\"p-3\" value={value} index={2}>\n          <div className=\"container\">\n            <LibraryText/>\n            {/* <FieldArray name=\"texts\" component={ListingText} /> */}\n          </div>\n        </TabPanel>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Library;\n","import React, { useEffect, useState, useCallback, Fragment } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\n// import * as modal from '../_redux/modalRedux'\nimport { makeStyles, Button } from \"@material-ui/core\";\nimport { reduxForm, Field, formValueSelector, FieldArray } from \"redux-form\";\n\nimport {\n  combineValidators,\n  isRequired,\n  composeValidators,\n  hasLengthGreaterThan,\n} from \"revalidate\";\nimport ThemeHeader from \"../../../../partials/content/ThemeHeader\";\nimport ThemeButton from \"../../../../partials/button/ThemeButton\";\nimport Item from \"../../../../partials/display/Item\";\nimport { Col, Row, Form } from \"react-bootstrap\";\nimport TextInput from \"../../../../partials/form/TextInput\";\nimport TextArea from \"../../../../partials/form/TextArea\";\nimport MultiSelect from \"../../../../partials/form/MultiSelect\";\nimport DateInput from \"../../../../partials/form/DateInput\";\nimport ToggleSwitch from \"../../../../partials/form/toggleSwitch/ToggleSwitch\";\nimport { getListingReportById } from \"../../_crud/listingsCrud\";\nimport DragAndDrop from \"../../../../partials/form/DragAndDrop\";\n\nconst validate = combineValidators({\n  //   price_from: isRequired({ message: \"The event title is required\" }),\n  //   price_to: isRequired({ message: \"The category is required\" }),\n  //   reason: composeValidators(\n  //     isRequired({ message: \"Please enter a description\" }),\n  //     hasLengthGreaterThan(4)({\n  //       message: \"Description needs to be at least 5 characters\",\n  //     })\n  //   )(),\n  //   price_view: isRequired(\"city\"),\n  //   venue: isRequired(\"venue\"),\n  //   checkbox: isRequired(\"checkbox\"),\n  //   startTime: isRequired(\"date\"),\n  //   endTime: isRequired(\"date\"),\n});\n\nconst PortalForUploads = (props) => {\n  const {\n    handleSubmit,\n    pristine,\n    submitting,\n    invalid,\n    selectedValues,\n    reports,\n    closeModal,\n    id,\n  } = props;\n\n  const handleAddReport = () => {\n    console.log(reports);\n    // selectedValues(adjustPrice);\n  };\n  const propertyType = [\n    {\n      label: \"My Buyers\",\n      value: \"1\",\n    },\n    {\n      label: \"Open Buyers\",\n      value: \"2\",\n    },\n    {\n      label: \"Sarah\",\n      value: \"3\",\n    },\n  ];\n\n  useEffect(() => {\n    // console.log(\"called\" + state.contactProfileId);\n    if (id) {\n      getListingReportById()\n        .then(({ data }) => {\n          console.log(data);\n          props.initialize({...data\n          });\n        })\n        .catch(() => {});\n      \n    }\n  }, []);\n\n  console.log(props);\n  return (\n    <Fragment>\n      <div className=\"buyerFormModal\">\n        <form className=\"contactForm\" onSubmit={handleSubmit}>\n          <Fragment>\n            <ThemeHeader\n              left={\n                <Fragment>\n                  <h5 className=\"title\">Selected Portals For  Upload</h5>\n                </Fragment>\n              }\n              right={\n                <Fragment>\n                  <Fragment>\n                    <div className=\"pl-2\">\n                      <ThemeButton onClick={closeModal}>Select All</ThemeButton>\n                    </div>\n                    <div className=\"pl-2\">\n                      <ThemeButton onClick={closeModal}>Cancel</ThemeButton>\n                    </div>\n                    <div className=\"pl-2\">\n                      <ThemeButton\n                        disabled={invalid || pristine}\n                        onClick={() => handleAddReport()}\n                        className=\"theme-button green-button\"\n                      >\n                        Upload\n                      </ThemeButton>\n                    </div>\n                  </Fragment>\n                </Fragment>\n              }\n            />\n\n            <div>\n                <Row>\n                    <Col md={4}>\n\n                    </Col>\n                    \n                    \n                </Row>\n            </div>\n\n\n\n          </Fragment>\n        </form>\n        <div>\n          <Item left=\"past Adjustments\" />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst selector = formValueSelector(\"addOrUpdateReport\");\n\nconst mapState = (state) => {\n  console.log(state);\n\n  const values = selector(\n    state,\n    \"type\",\n    \"note\",\n    \"RequestedBy\",\n    \"preparedBy\",\n    \"date_conducted\",\n    \"pi\",\n    \"rp\",\n    \"attachment\"\n  );\n\n  return {\n    reports: values,\n    initialValues: {},\n  }; // Foram name must have to be different\n};\n\nexport default connect(\n  mapState,\n  null\n)(reduxForm({ form: \"portalsForUpload\" })(PortalForUploads));\n","import React, { Fragment } from 'react'\nimport { Row } from 'react-bootstrap'\nimport ThemeButton from '../../../../partials/button/ThemeButton'\nimport Item from '../../../../partials/display/Item'\nimport { toAbsoluteUrl } from '../../../../../_metronic'\nimport { connect } from 'react-redux'\nimport { reduxForm, Field } from 'redux-form'\nimport SingleAddress from '../../../../partials/form/SingleAddress'\n\nconst PropertyBasic = (props) => {\n    const {handleEdit, edit , pristine, reset, submitting ,invalid} = props;\n    console.log(props)\n    return (\n        <Fragment>\n            <Row className=\"position-relative\">\n              <img\n                src={toAbsoluteUrl(\"/media/listings/wol.jpeg\")}\n                className=\"card-img-top\"\n                alt=\"...\"\n              ></img>\n\n              <div className=\"fade-image\"></div>\n            </Row>\n            <div className=\"container\">\n           \n            {edit? <Field isTwoRow name=\"anotherAddress\" component={SingleAddress} /> :  <h5 className=\"title\">39 Southwelll Crecent, BaulkhamHills</h5>}\n            \n            <h5 className=\"title\">$90000000 - $10200000</h5>\n            <div className=\"d-flex\">\n            <div class=\"p-2 flex-grow-1 bd-highlight\">\n            <ThemeButton icon>\n                {\" \"}\n                <i class=\"fas fa-mobile    \"></i>\n              </ThemeButton>\n              <ThemeButton icon>\n                {\" \"}\n                <i class=\"fas fa-globe    \"></i>\n              </ThemeButton>\n              <ThemeButton icon>\n                {\" \"}\n                <i class=\"fas fa-print    \"></i>\n              </ThemeButton>\n              <ThemeButton icon>\n                {\" \"}\n                <i class=\"fas fa-mobile    \"></i>\n              </ThemeButton>\n              <ThemeButton onClick={()=> handleEdit()} icon>\n                <i class=\"fas fa-edit    \"></i>\n              </ThemeButton>\n            </div>\n            {edit? <div class=\"p-2\">\n              <ThemeButton className='mr-2 lightGrey-button '>Cancel</ThemeButton>\n              <ThemeButton  type=\"submit\"  disabled={invalid || pristine || submitting} className='mr-2 green-button ' >Save</ThemeButton>\n            </div>  :''}\n            \n\n            </div>\n            <h6>For Sale | Price Guide: $950,0000</h6>\n\n            <Item\n              className=\"pt-2\"\n              left=\"Sellers\"\n              right={\n                <Fragment>\n                  <h6>Harris Bowman (0451988172)</h6>\n                  <h6>fsdf Bodwman (0451988172)</h6>\n                </Fragment>\n              }\n            />\n            <Item\n              left=\"Last Contact\"\n              right={<Fragment>21/04/2020 (9days ago)</Fragment>}\n            />\n            <Item\n              left=\"Agents\"\n              right={<Fragment>21/04/2020 (9days ago)</Fragment>}\n            />\n            </div>\n            \n        </Fragment>\n    )\n}\n\nexport default PropertyBasic\n","import React, { Fragment, useState, useCallback } from \"react\";\nimport { Col} from \"react-bootstrap\";\nimport { reduxForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport ListingDetails from \"./ListingDetails\";\nimport PropertyBasic from \"../PropertyBasic\";\n\n\nconst ListingDetailsFrom = (props) => {\n  const { handleSubmit} = props;\n  // const { contactProfileId } = props;\n  const [value, setValue] = useState(0);\n  const [edit, setEdit] = useState(false);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const addNote = (e) => {\n    console.log(e);\n  };\n\n  const handleEdit =() => {\n    setEdit(!edit);\n  }\n  const onFormSubmit = useCallback((values) => {\n    console.log(values);\n    // setShow(false);\n  }, []);\n  \n  return (\n    <Fragment>\n      <form onSubmit={handleSubmit(onFormSubmit)}>\n        <div className=\"row\">\n          <Col md={4} lg={3}>\n              <PropertyBasic  handleEdit={() => handleEdit()} edit={edit} {...props} />\n          </Col>\n          <Col md={8} lg={9}>\n            <div className=\"p-3\">\n            <ListingDetails/>\n            </div>\n          </Col>\n        </div>\n      </form>\n    </Fragment>\n  );\n};\n\n// export default reduxForm({\n//   form: \"ListingDetailsForm\", // a unique identifier for this form\n//   initialValues: {\n//     members:[{}]\n//   }\n//   // validate\n// })(SingleListingForm);\n\nfunction mapStateToProps(state, props) {\n  return {\n      form: 'SllistingDetailsForm'\n  };\n}\n\nexport default connect(mapStateToProps)(reduxForm({ enableReinitialize: true,initialValues: {\n  members:[{}]\n}})(ListingDetailsFrom));","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { TextField } from \"@material-ui/core\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TextInput from \"../../../../../partials/form/TextInput\";\nimport ToggleButtons from \"../../../../../partials/form/toggleButtons/ToggleButtons\";\nimport DateInput from \"../../../../../partials/form/DateInput\";\nimport ToggleSwitch from \"../../../../../partials/form/toggleSwitch/ToggleSwitch\";\nimport MultiSelect from \"../../../../../partials/form/MultiSelect\";\nimport ThemeButton from \"../../../../../partials/button/ThemeButton\";\n\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.username) {\n    errors.username = \"Required\";\n  } else if (values.username.length > 15) {\n    errors.username = \"Must be 15 characters or less\";\n  }\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  if (!values.age) {\n    errors.age = \"Required\";\n  } else if (isNaN(Number(values.age))) {\n    errors.age = \"Must be a number\";\n  } else if (Number(values.age) < 18) {\n    errors.age = \"Sorry, you must be at least 18 years old\";\n  }\n  return errors;\n};\nconst myBuyerOptions = [\n  {\n    label: 'My Buyers',\n    value: '1',\n  },\n  {\n    label: 'Open Buyers',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst buyerActivityOptions = [\n  {\n    label: 'Active',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst ratingOptions = [\n  {\n    label: 'A',\n    value: '1',\n  },\n  {\n    label: 'AA',\n    value: '2',\n  },\n  {\n    label: 'AAA',\n    value: '3',\n  },\n];\nconst propertyTypeOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst buyerTypeOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst conditionOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst toSellOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst financeStatusOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst selectActionOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst SLmatchedBuyersDrawer = (props) => {\n  const { handleSubmit, pristine, reset, submitting } = props;\n  return (\n    <form onSubmit={handleSubmit} className=\"h-75 overflow-auto\">\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" sm={12}>\n          <Field name=\"passions\" placeholder='Select passions' component={MultiSelect} showBottom={false} options={myBuyerOptions} defaultValue=\"My Buyers\" />\n        </Col>\n        <Col className=\"pb-1\" sm={12}>\n        <Field name=\"buyerActivityOptions\" placeholder='Select Activity' component={MultiSelect} showBottom={false} options={buyerActivityOptions} />\n        </Col>\n        <Col className=\"pb-1\" sm={12}>\n        <Field name=\"ratingOptions\" placeholder='Select rating' component={MultiSelect} showBottom={false} options={ratingOptions} />\n        </Col>\n        <div className=\"d-flex w-100 pt-2\">\n        <Form.Label className=\"col-7 pl-3\" xs={7}>\n              Include DNC?\n            </Form.Label>\n            <Col xs={5}>\n              <Field\n                name=\"dns\"\n                component={ToggleSwitch}\n              />\n            </Col>\n        </div>\n\n\n\n      </Form.Group>\n\n      <Form.Group as={Row} >\n        <Col className=\"pb-1\" sm={12}>\n          <Field\n            name=\"name\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Contact Name\"\n          />\n        </Col>\n        <Col className=\"pb-1\" sm={12}>\n          <Field\n            name=\"phone\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Phone Number\"\n          />\n        </Col>\n        <Col className=\"pb-1\" sm={12}>\n          <Field\n            name=\"email\"\n            type=\"email\"\n            component={TextInput}\n            placeholder=\"Email Address\"\n          />\n        </Col>\n      </Form.Group>\n      {/*  */}\n\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={6}>\n          <Field\n            name=\"price_from\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Price From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={6}>\n          <Field\n            name=\"price_to\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Price To\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Rating</option>\n            <option value=\"ff0000\">Buyer Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={4}>\n          <Field\n            name=\"bed\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Bed\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={4}>\n          <Field\n            name=\"bath\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Bath\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={4}>\n          <Field\n            name=\"car\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Car\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={8}>\n          <Field\n            name=\"land_size_from\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Land Size From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={4}>\n        <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option value=\"ff0000\">m&#xb2;</option>\n            <option value=\"00ff00\">Open Buyers</option>\n            <option value=\"0000ff\">All</option>\n            <option value=\"0000ff\">Team Name</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={8}>\n          <Field\n            name=\"land_size_to\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Land Size To\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={4}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option value=\"ff0000\">m&#xb2;</option>\n            <option value=\"00ff00\">Open Buyers <div><span>32&nbsp;ft<sup>3</sup></span></div></option>\n            <option value=\"0000ff\">All</option>\n            <option value=\"0000ff\">Team Name</option>\n          </Field>\n        </Col>\n        {/* <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"locations\"\n            component={Location}\n            placeholder=\"Locations\"\n          />\n        </Col> */}\n      </Form.Group>\n      {/*  */}\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Buyer Type</option>\n            <option value=\"ff0000\">Buyer Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Condition</option>\n            <option value=\"ff0000\">Buyer Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>To Sell ?</option>\n            <option value=\"ff0000\">Buyer Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Finance Status</option>\n            <option value=\"ff0000\">Buyer Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n      </Form.Group>\n\n      {/*  */}\n\n      {/*  */}\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={12}>\n                      <Field\n            name=\"creationDateFrom\"\n            component={DateInput}\n            timeIntervals={15}\n            // dateFormat=\"dd LLL yyyy h:mm a\"\n            dateFormat=\"MMMM d, yyyy\"\n            placeholder=\"Creation Date From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n        <Field\n            name=\"creationDateTo\"\n            component={DateInput}\n            timeIntervals={15}\n            // dateFormat=\"dd LLL yyyy h:mm a\"\n            dateFormat=\"MMMM d, yyyy\"\n            placeholder=\"Creation Date From\"\n          />\n        </Col>\n      </Form.Group>\n\n      {/*  */}\n\n      {/*  */}\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Last Contacted From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Last Contacted To\"\n          />\n        </Col>\n      </Form.Group>\n\n      {/*  */}\n\n      {/*  */}\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Appointment Date From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Appointment Date To\"\n          />\n        </Col>\n      </Form.Group>\n\n      {/*  */}\n\n      {/*  */}\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"marked\"\n            component={ToggleButtons}\n            labelOne=\"Marked As\"\n            labelTwo=\"Not Marked As\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Select Actions</option>\n            <option value=\"ff0000\">Buyer Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={6}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Date From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={6}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Date To\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Team</option>\n            <option value=\"ff0000\">Buyer Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n      </Form.Group>\n\n      {/*  */}\n\n      <div>\n          <ThemeButton className=\"filter-button mb-5 mt-5 w-100\"  type=\"submit\" disabled={pristine || submitting}>\n          Submit\n          </ThemeButton>\n\n        {/* <Button  disabled={pristine || submitting} onClick={reset} variant=\"outline-warning\"> Clear Values</Button> */}\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"SLmatchedBuyersDrawer\", // a unique identifier for this form\n  initialValues: {\n    passions: [{\n      label: 'My Buyers',\n      value: '1',\n    },],\n    dns: true,\n    marked: \"false\",\n  },\n  validate,\n})(SLmatchedBuyersDrawer);\n","import React, { useEffect, useState, Fragment } from \"react\";\nimport moment from \"moment\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ThemeHeader from \"../../../../../partials/content/ThemeHeader\";\nimport ThemeButton from \"../../../../../partials/button/ThemeButton\";\nimport DynamicTableEdit from \"../../../../../partials/table/DynamicTableEdit\";\nimport { getAllMail } from \"../../../../buyers/crud/buyersCrud\";\nimport { Chip } from \"@material-ui/core\";\n\n\nconst SLmatchedBuyersTable = ({ edit , handleChange}) => {\n  const [items, setItems] = useState(null);\n\n  // setItems(data.data);\n  console.log(edit);\n  useEffect(() => {\n    getAllMail()\n      .then(({ data }) => {\n        setItems(data.data);\n        console.log(data.data);\n      })\n      .catch(() => {});\n  }, []);\n\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Mail\",\n        columns: [\n          {\n            Header: \"Date\",\n            accessor: \"date\",\n            Cell: ({ cell: { value } }) => (\n              <p>{moment(value).format(\"DD/MM/YYYY\")}</p>\n            ),\n          },\n          {\n            Header: \"Time\",\n            accessor: \"id\",\n            Cell: ({\n              cell: {\n                row: { original },\n              },\n            }) => <p>{moment(original.date).format(\"hh : m\")}</p>,\n          },\n          {\n            Header: \"By\",\n            accessor: \"from\",\n            Cell: ({ cell: { value } }) => <p>{value}</p>,\n          },\n          {\n            Header: \"Type\",\n            accessor: \"type\",\n            Cell: ({ cell: { value } }) => <p>{value}</p>,\n          },\n          {\n            Header: \"Subject\",\n            accessor: \"subject\",\n            Cell: ({ cell: { value } }) => <p>{value}</p>,\n          },\n        ],\n      },\n    ],\n    []\n  );\n  console.log(items);\n  const fetchMoreData = () => {\n    // setTimeout(() => {\n    //   setItems(items.concat(items));\n    // }, 1000);\n  };\n\n  const rowClick = (e) => {\n\n    // setShowRowOnClick(!showRowOnClick)\n\n  };\n\n\n  const datas = React.useMemo(() => items, [items]);\n\n  return (\n    <div>\n\n      <ThemeHeader\n        right={\n          <Fragment>\n              <ThemeButton\n              icon\n              className=\"mr-2 lightGrey-button-icon\"\n            >\n              <i class=\"fas fa-download    \"></i>{\" \"}\n            </ThemeButton>\n            <ThemeButton\n              icon\n              className=\"mr-2 lightGrey-button-icon\"\n            >\n              <i class=\"fas fa-mobile    \"></i>\n            </ThemeButton>\n            <ThemeButton\n              icon\n              className=\"mr-2 lightGrey-button-icon\"\n            >\n              <i class=\"fas fa-envelope    \"></i>\n            </ThemeButton>\n             <Chip className=\"mr-2\" label={\"Matched Buyers \"+items?.length} variant=\"outlined\" />\n            <ThemeButton\n                  className=\"lightGrey-button\"\n                  onClick={() => handleChange()}\n                >\n                  Filter\n                </ThemeButton>\n          </Fragment>\n        }\n      />\n      <div className=\"mail-log-table\">\n        {datas ? \n\n            <DynamicTableEdit\n              handleChange={(e) => console.log(e)}\n              isEditable={true}\n              columns={columns}\n              data={datas}\n              update={fetchMoreData}\n              handleRowClick={rowClick}\n            /> : \n          \"loading\"\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default SLmatchedBuyersTable;\n","/* eslint-disable no-restricted-imports */\nimport React, { Fragment, useEffect, useCallback } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport { connect } from \"react-redux\";\nimport { Spinner, Row } from \"react-bootstrap\";\nimport SLmatchedBuyersDrawer from \"./SLmatchedBuyersDrawer\";\nimport SLmatchedBuyersTable from \"./SLmatchedBuyersTable\";\nconst drawerWidth = 270;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: drawerWidth,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    overflow: \"hidden\",\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-start\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -drawerWidth,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginRight: 0,\n      padding: theme.spacing(1),\n    },\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: 0,\n  },\n}));\n\nconst SLmatchedBuyers = (props) => {\n  //   useEffect(() => {\n  //     console.log(zoneAnalysis);\n  //     if (!zoneAnalysis) {\n  //       prospectsLoading(\"zoneAnalysis\");\n  //       console.log(zoneAnalysis);\n  //     }\n  //   }, [zoneAnalysis]);\n\n  console.log(\"drawer\");\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = useCallback(() => setOpen(!open), []);\n\n  const handleSearchChange = (event) => {\n    if (event.target.value.length > 2) {\n      // simulate getting search result\n      setTimeout(() => {}, 500);\n      return;\n    }\n  };\n  const onSubmitDrawerForm = async (value) => {\n    console.log(value);\n    // props.listingsLoading();\n  };\n  return (\n    <Fragment>\n      <Row>\n        <main\n          className={\n            \"col-12 \" +\n            clsx(classes.content, {\n              [classes.contentShift]: open,\n            })\n          }\n        >\n          <SLmatchedBuyersTable handleChange={()=>handleDrawerOpen()}  />\n        </main>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"right\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"ltr\" ? (\n                <ChevronRightIcon />\n              ) : (\n                <ChevronLeftIcon />\n              )}\n            </IconButton>\n            <div className=\"title\">Filter Buyers</div>\n          </div>\n          <Divider />\n          <div className=\"container-fluid mt-3\">\n            <SLmatchedBuyersDrawer onSubmit={onSubmitDrawerForm} />\n          </div>\n        </Drawer>\n      </Row>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ prospects }) => ({\n  //   zoneAnalysis: prospects.zoneAnalysis,\n});\n\n// export default connect(mapStateToProps, buyersRedux.actions)(BuyersPage);\nexport default React.memo(connect(mapStateToProps, null)(SLmatchedBuyers));\n","import React, { Fragment, useState, useCallback } from \"react\";\nimport { Col} from \"react-bootstrap\";\nimport { reduxForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport PropertyBasic from \"../PropertyBasic\";\nimport ListingDetails from \"../listingDetails/ListingDetails\";\nimport SLmatchedBuyers from \"./SLmatchedBuyers\";\n\n\nconst SLmatchedBuyersFrom = (props) => {\n  const { handleSubmit} = props;\n  // const { contactProfileId } = props;\n  const [value, setValue] = useState(0);\n  const [edit, setEdit] = useState(false);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const addNote = (e) => {\n    console.log(e);\n  };\n\n  const handleEdit =() => {\n    setEdit(!edit);\n  }\n  const onFormSubmit = useCallback((values) => {\n    console.log(values);\n    // setShow(false);\n  }, []);\n  \n  return (\n    <Fragment>\n     \n        <div className=\"row\">\n          <Col lg={4} xl={3}>\n          <form onSubmit={handleSubmit(onFormSubmit)}>\n              <PropertyBasic  handleEdit={() => handleEdit()} edit={edit} {...props} />\n         </form>\n          </Col>\n          <Col  lg={8} xl={9}>\n            <div className=\"p-3\">\n            <SLmatchedBuyers/>\n            </div>\n          </Col>\n        </div>\n    </Fragment>\n  );\n};\nfunction mapStateToProps(state, props) {\n  console.log(props.formId)\n  return {\n      form: 'SLmatchedBuyersFrom'\n  };\n}\n\nexport default connect(mapStateToProps)(reduxForm({ enableReinitialize: true,initialValues: {\n  members:[{}]\n}})(SLmatchedBuyersFrom));","import React, { useEffect, useState, Fragment } from \"react\";\nimport moment from \"moment\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ThemeHeader from \"../../../../../partials/content/ThemeHeader\";\nimport ThemeButton from \"../../../../../partials/button/ThemeButton\";\nimport DynamicTableEdit from \"../../../../../partials/table/DynamicTableEdit\";\nimport { getAllMail } from \"../../../../buyers/crud/buyersCrud\";\nimport { Chip } from \"@material-ui/core\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nconst SLbuyerEnquiriesTable = ({ edit , handleChange}) => {\n  const [items, setItems] = useState(null);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  // setItems(data.data);\n  console.log(edit);\n  useEffect(() => {\n    getAllMail()\n      .then(({ data }) => {\n        setItems(data.data);\n        console.log(data.data);\n      })\n      .catch(() => {});\n  }, []);\n\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Mail\",\n        columns: [\n          {\n            Header: \"Date\",\n            accessor: \"date\",\n            Cell: ({ cell: { value } }) => (\n              <p>{moment(value).format(\"DD/MM/YYYY\")}</p>\n            ),\n          },\n          {\n            Header: \"Time\",\n            accessor: \"id\",\n            Cell: ({\n              cell: {\n                row: { original },\n              },\n            }) => <p>{moment(original.date).format(\"hh : m\")}</p>,\n          },\n          {\n            Header: \"By\",\n            accessor: \"from\",\n            Cell: ({ cell: { value } }) => <p>{value}</p>,\n          },\n          {\n            Header: \"Type\",\n            accessor: \"type\",\n            Cell: ({ cell: { value } }) => <p>{value}</p>,\n          },\n          {\n            Header: \"Subject\",\n            accessor: \"subject\",\n            Cell: ({ cell: { value } }) => <p>{value}</p>,\n          },\n        ],\n      },\n    ],\n    []\n  );\n  console.log(items);\n  const fetchMoreData = () => {\n    // setTimeout(() => {\n    //   setItems(items.concat(items));\n    // }, 1000);\n  };\n\n  const rowClick = (e) => {\n\n    // setShowRowOnClick(!showRowOnClick)\n\n  };\n\n\n  const datas = React.useMemo(() => items, [items]);\n\n  return (\n    <div>\n\n      <ThemeHeader\n      left={\n        <Fragment>\n          <div>\n              <DatePicker\n                name=\"startDate\"\n                className=\"form-control\"\n                selected={startDate}\n                onChange={(date) => setStartDate(date)}\n                fixedHeight\n              />\n            </div>\n            <div className=\"pl-2\">\n              <DatePicker\n                name=\"endDate\"\n                className=\"form-control\"\n                selected={endDate}\n                onChange={(date) => setEndDate(date)}\n                fixedHeight\n              />\n            </div>\n        </Fragment>\n      }\n        right={\n          <Fragment>\n              <ThemeButton\n              icon\n              className=\"mr-2 lightGrey-button-icon\"\n            >\n              <i class=\"fas fa-download    \"></i>{\" \"}\n            </ThemeButton>\n            <ThemeButton\n              icon\n              className=\"mr-2 lightGrey-button-icon\"\n            >\n              <i class=\"fas fa-mobile    \"></i>\n            </ThemeButton>\n            <ThemeButton\n              icon\n              className=\"mr-2 lightGrey-button-icon\"\n            >\n              <i class=\"fas fa-envelope    \"></i>\n            </ThemeButton>\n             <Chip className=\"mr-2\" label={\"Matched Buyers \"+items?.length} variant=\"outlined\" />\n            <ThemeButton\n                  className=\"lightGrey-button\"\n                  onClick={() => handleChange()}\n                >\n                  Filter\n                </ThemeButton>\n          </Fragment>\n        }\n      />\n      <div className=\"mail-log-table\">\n        {datas ? \n\n            <DynamicTableEdit\n              handleChange={(e) => console.log(e)}\n              isEditable={true}\n              columns={columns}\n              data={datas}\n              update={fetchMoreData}\n              handleRowClick={rowClick}\n            /> : \n          \"loading\"\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default SLbuyerEnquiriesTable;\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { TextField } from \"@material-ui/core\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TextInput from \"../../../../../partials/form/TextInput\";\nimport ToggleButtons from \"../../../../../partials/form/toggleButtons/ToggleButtons\";\nimport DateInput from \"../../../../../partials/form/DateInput\";\nimport ToggleSwitch from \"../../../../../partials/form/toggleSwitch/ToggleSwitch\";\nimport MultiSelect from \"../../../../../partials/form/MultiSelect\";\nimport ThemeButton from \"../../../../../partials/button/ThemeButton\";\n\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.username) {\n    errors.username = \"Required\";\n  } else if (values.username.length > 15) {\n    errors.username = \"Must be 15 characters or less\";\n  }\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  if (!values.age) {\n    errors.age = \"Required\";\n  } else if (isNaN(Number(values.age))) {\n    errors.age = \"Must be a number\";\n  } else if (Number(values.age) < 18) {\n    errors.age = \"Sorry, you must be at least 18 years old\";\n  }\n  return errors;\n};\nconst myBuyerOptions = [\n  {\n    label: 'My Buyers',\n    value: '1',\n  },\n  {\n    label: 'Open Buyers',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst buyerActivityOptions = [\n  {\n    label: 'Active',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst ratingOptions = [\n  {\n    label: 'A',\n    value: '1',\n  },\n  {\n    label: 'AA',\n    value: '2',\n  },\n  {\n    label: 'AAA',\n    value: '3',\n  },\n];\nconst propertyTypeOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst buyerTypeOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst conditionOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst toSellOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst financeStatusOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst selectActionOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst SLbuyerEnquiriesDrawer = (props) => {\n  const { handleSubmit, pristine, reset, submitting } = props;\n  return (\n    <form onSubmit={handleSubmit} className=\"h-75 overflow-auto\">\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" sm={12}>\n          <Field name=\"passions\" placeholder='Select passions' component={MultiSelect} showBottom={false} options={myBuyerOptions} defaultValue=\"My Buyers\" />\n        </Col>\n        <Col className=\"pb-1\" sm={12}>\n        <Field name=\"buyerActivityOptions\" placeholder='Select Activity' component={MultiSelect} showBottom={false} options={buyerActivityOptions} />\n        </Col>\n        <Col className=\"pb-1\" sm={12}>\n        <Field name=\"ratingOptions\" placeholder='Select rating' component={MultiSelect} showBottom={false} options={ratingOptions} />\n        </Col>\n        <div className=\"d-flex w-100 pt-2\">\n        <Form.Label className=\"col-7 pl-3\" xs={7}>\n              Include DNC?\n            </Form.Label>\n            <Col xs={5}>\n              <Field\n                name=\"dns\"\n                component={ToggleSwitch}\n              />\n            </Col>\n        </div>\n\n\n\n      </Form.Group>\n\n      <Form.Group as={Row} >\n        <Col className=\"pb-1\" sm={12}>\n          <Field\n            name=\"name\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Contact Name\"\n          />\n        </Col>\n        <Col className=\"pb-1\" sm={12}>\n          <Field\n            name=\"phone\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Phone Number\"\n          />\n        </Col>\n        <Col className=\"pb-1\" sm={12}>\n          <Field\n            name=\"email\"\n            type=\"email\"\n            component={TextInput}\n            placeholder=\"Email Address\"\n          />\n        </Col>\n      </Form.Group>\n      {/*  */}\n\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={6}>\n          <Field\n            name=\"price_from\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Price From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={6}>\n          <Field\n            name=\"price_to\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Price To\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Rating</option>\n            <option value=\"ff0000\">Buyer Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={4}>\n          <Field\n            name=\"bed\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Bed\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={4}>\n          <Field\n            name=\"bath\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Bath\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={4}>\n          <Field\n            name=\"car\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Car\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={8}>\n          <Field\n            name=\"land_size_from\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Land Size From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={4}>\n        <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option value=\"ff0000\">m&#xb2;</option>\n            <option value=\"00ff00\">Open Buyers</option>\n            <option value=\"0000ff\">All</option>\n            <option value=\"0000ff\">Team Name</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={8}>\n          <Field\n            name=\"land_size_to\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Land Size To\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={4}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option value=\"ff0000\">m&#xb2;</option>\n            <option value=\"00ff00\">Open Buyers <div><span>32&nbsp;ft<sup>3</sup></span></div></option>\n            <option value=\"0000ff\">All</option>\n            <option value=\"0000ff\">Team Name</option>\n          </Field>\n        </Col>\n        {/* <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"locations\"\n            component={Location}\n            placeholder=\"Locations\"\n          />\n        </Col> */}\n      </Form.Group>\n      {/*  */}\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Buyer Type</option>\n            <option value=\"ff0000\">Buyer Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Condition</option>\n            <option value=\"ff0000\">Buyer Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>To Sell ?</option>\n            <option value=\"ff0000\">Buyer Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Finance Status</option>\n            <option value=\"ff0000\">Buyer Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n      </Form.Group>\n\n      {/*  */}\n\n      {/*  */}\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={12}>\n                      <Field\n            name=\"creationDateFrom\"\n            component={DateInput}\n            timeIntervals={15}\n            // dateFormat=\"dd LLL yyyy h:mm a\"\n            dateFormat=\"MMMM d, yyyy\"\n            placeholder=\"Creation Date From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n        <Field\n            name=\"creationDateTo\"\n            component={DateInput}\n            timeIntervals={15}\n            // dateFormat=\"dd LLL yyyy h:mm a\"\n            dateFormat=\"MMMM d, yyyy\"\n            placeholder=\"Creation Date From\"\n          />\n        </Col>\n      </Form.Group>\n\n      {/*  */}\n\n      {/*  */}\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Last Contacted From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Last Contacted To\"\n          />\n        </Col>\n      </Form.Group>\n\n      {/*  */}\n\n      {/*  */}\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Appointment Date From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Appointment Date To\"\n          />\n        </Col>\n      </Form.Group>\n\n      {/*  */}\n\n      {/*  */}\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"marked\"\n            component={ToggleButtons}\n            labelOne=\"Marked As\"\n            labelTwo=\"Not Marked As\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Select Actions</option>\n            <option value=\"ff0000\">Buyer Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={6}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Date From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={6}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Date To\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Team</option>\n            <option value=\"ff0000\">Buyer Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n      </Form.Group>\n\n      {/*  */}\n\n      <div>\n          <ThemeButton className=\"filter-button mb-5 mt-5 w-100\"  type=\"submit\" disabled={pristine || submitting}>\n          Submit\n          </ThemeButton>\n        {/* <Button\n          className=\"filter-button mb-5 mt-5 w-100\"\n          type=\"submit\"\n          disabled={submitting}\n        >\n          Submit\n        </Button> */}\n        {/* <Button  disabled={pristine || submitting} onClick={reset} variant=\"outline-warning\"> Clear Values</Button> */}\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"SLbuyerEnquiriesDrawer\", // a unique identifier for this form\n  initialValues: {\n    passions: [{\n      label: 'My Buyers',\n      value: '1',\n    },],\n    dns: true,\n    marked: \"false\",\n  },\n  validate,\n})(SLbuyerEnquiriesDrawer);\n","/* eslint-disable no-restricted-imports */\nimport React, { Fragment, useEffect, useCallback } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport { connect } from \"react-redux\";\nimport { Spinner, Row } from \"react-bootstrap\";\nimport SLbuyerEnquiriesTable from \"./SLbuyerEnquiriesTable\";\nimport SLbuyerEnquiriesDrawer from \"./SLbuyerEnquiriesDrawer\";\nconst drawerWidth = 270;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: drawerWidth,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    overflow: \"hidden\",\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-start\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -drawerWidth,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginRight: 0,\n      padding: theme.spacing(1),\n    },\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: 0,\n  },\n}));\n\nconst SLbuyerEnquiries = (props) => {\n  //   useEffect(() => {\n  //     console.log(zoneAnalysis);\n  //     if (!zoneAnalysis) {\n  //       prospectsLoading(\"zoneAnalysis\");\n  //       console.log(zoneAnalysis);\n  //     }\n  //   }, [zoneAnalysis]);\n\n  console.log(\"drawer\");\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = useCallback(() => setOpen(!open), []);\n\n  const handleSearchChange = (event) => {\n    if (event.target.value.length > 2) {\n      // simulate getting search result\n      setTimeout(() => {}, 500);\n      return;\n    }\n  };\n  const onSubmitDrawerForm = async (value) => {\n    console.log(value);\n    // props.listingsLoading();\n  };\n  return (\n    <Fragment>\n      <Row>\n        <main\n          className={\n            \"col-12 \" +\n            clsx(classes.content, {\n              [classes.contentShift]: open,\n            })\n          }\n        >\n          <SLbuyerEnquiriesTable handleChange={()=>handleDrawerOpen()}  />\n        </main>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"right\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"ltr\" ? (\n                <ChevronRightIcon />\n              ) : (\n                <ChevronLeftIcon />\n              )}\n            </IconButton>\n            <div className=\"title\">Filter Buyers</div>\n          </div>\n          <Divider />\n          <div className=\"container-fluid mt-3\">\n            <SLbuyerEnquiriesDrawer onSubmit={onSubmitDrawerForm} />\n          </div>\n        </Drawer>\n      </Row>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ prospects }) => ({\n  //   zoneAnalysis: prospects.zoneAnalysis,\n});\n\n// export default connect(mapStateToProps, buyersRedux.actions)(BuyersPage);\nexport default React.memo(connect(mapStateToProps, null)(SLbuyerEnquiries));\n","import React, { Fragment, useState, useCallback } from \"react\";\nimport { Col} from \"react-bootstrap\";\nimport { reduxForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport PropertyBasic from \"../PropertyBasic\";\nimport SLbuyerEnquiries from \"./SLbuyerEnquiries\";\n\n\nconst SLbuyerEnquiriesFrom = (props) => {\n  const { handleSubmit} = props;\n  // const { contactProfileId } = props;\n  const [value, setValue] = useState(0);\n  const [edit, setEdit] = useState(false);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const addNote = (e) => {\n    console.log(e);\n  };\n\n  const handleEdit =() => {\n    setEdit(!edit);\n  }\n  const onFormSubmit = useCallback((values) => {\n    console.log(values);\n    // setShow(false);\n  }, []);\n  \n  return (\n    <Fragment>\n     \n        <div className=\"row\">\n          <Col lg={4} xl={3}>\n          <form onSubmit={handleSubmit(onFormSubmit)}>\n              <PropertyBasic  handleEdit={() => handleEdit()} edit={edit} {...props} />\n         </form>\n          </Col>\n          <Col  lg={8} xl={9}>\n            <div className=\"p-3\">\n            <SLbuyerEnquiries/>\n            </div>\n          </Col>\n        </div>\n    </Fragment>\n  );\n};\n\n\nfunction mapStateToProps(state, props) {\n  console.log(props.formId)\n  return {\n      form: 'SLbuyerEnquiriesFrom'\n  };\n}\n\nexport default connect(mapStateToProps)(reduxForm({ enableReinitialize: true,initialValues: {\n  members:[{}]\n}})(SLbuyerEnquiriesFrom));","import React, { Fragment, useState, useCallback } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { reduxForm } from \"redux-form\";\nimport Item from \"../../../../partials/display/Item\";\nimport ThemeButton from \"../../../../partials/button/ThemeButton\";\nimport { toAbsoluteUrl } from \"../../../../../_metronic\";\nimport { connect } from \"react-redux\";\n\n\nconst SingleListingForm = (props) => {\n  const { handleSubmit, pristine, reset, submitting ,invalid } = props;\n  // const { contactProfileId } = props;\n  console.log('called')\n\n  return (\n    <Fragment>\n      <form onSubmit={handleSubmit}>\n      {React.cloneElement(props.children)}\n      </form>\n    </Fragment>\n  );\n};\n\n// export default reduxForm({\n//   form: \"ListingDetailsForm\", // a unique identifier for this form\n//   initialValues: {\n//     members:[{}]\n//   }\n//   // validate\n// })(SingleListingForm);\n\n\nfunction mapStateToProps(state, props) {\n  return {\n      form: props.formName\n  };\n}\n\nexport default connect(mapStateToProps)(reduxForm({ enableReinitialize: true,initialValues: {\n}})(SingleListingForm));","import React, { Fragment} from \"react\";\nimport { reduxForm } from \"redux-form\";\n\nimport { connect } from \"react-redux\";\n\n\nconst DynamicForm = (props) => {\n  const { handleSubmit} = props;\n\n  return (\n    <Fragment>\n      <form onSubmit={handleSubmit}>\n      {React.cloneElement(props.children)}\n      </form>\n    </Fragment>\n  );\n};\n\nfunction mapStateToProps(state, props) {\n  return {\n      form: props.formName\n  };\n}\n\nexport default connect(mapStateToProps)(reduxForm({ enableReinitialize: true})(DynamicForm));","import React, { useEffect, useState, useCallback, Fragment } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\n// import * as modal from '../_redux/modalRedux'\nimport { makeStyles, Button } from \"@material-ui/core\";\nimport { reduxForm, Field, formValueSelector } from \"redux-form\";\n\nimport {\n  combineValidators,\n  isRequired,\n  composeValidators,\n  hasLengthGreaterThan,\n} from \"revalidate\";\nimport ThemeHeader from \"../../../../partials/content/ThemeHeader\";\nimport ThemeButton from \"../../../../partials/button/ThemeButton\";\nimport Item from \"../../../../partials/display/Item\";\nimport { Col, Form } from \"react-bootstrap\";\nimport TextInput from \"../../../../partials/form/TextInput\";\nimport TextArea from \"../../../../partials/form/TextArea\";\nimport { SingleToggleButton } from \"../../../../partials/form/singleToggleButton/SingleToggleButton\";\nimport ToggleSwitch from \"../../../../partials/form/toggleSwitch/ToggleSwitch\";\n\nconst validate = combineValidators({\n  price_from: isRequired({ message: \"The event title is required\" }),\n  price_to: isRequired({ message: \"The category is required\" }),\n  reason: composeValidators(\n    isRequired({ message: \"Please enter a description\" }),\n    hasLengthGreaterThan(4)({\n      message: \"Description needs to be at least 5 characters\",\n    })\n  )(),\n  price_view: isRequired(\"city\"),\n  venue: isRequired(\"venue\"),\n  checkbox: isRequired(\"checkbox\"),\n  startTime: isRequired(\"date\"),\n  endTime: isRequired(\"date\"),\n});\n\nconst SalesAdviceSettings = (props) => {\n  const {\n    handleSubmit,\n    pristine,\n    onHide,\n    submitting,\n    invalid,\n    selectedValues,\n    adjustPrice,\n  } = props;\n\n  const onFormSubmit = async (values) => {\n    console.log(\"event form\");\n    console.log(values);\n  };\n\n  console.log(props);\n  return (\n    <Fragment>\n      <div className=\"buyerFormModal\">\n        <form className=\"contactForm\" onSubmit={handleSubmit(onFormSubmit)}>\n          <Fragment>\n            <ThemeHeader\n              left={\n                <Fragment>\n                  <h5 className=\"title\">Adjust Price</h5>\n                </Fragment>\n              }\n              right={\n                <Fragment>\n                  <Fragment>\n                    <div className=\"pl-2\">\n                      <ThemeButton onClick={onHide}>Cancel</ThemeButton>\n                    </div>\n                    <div className=\"pl-2\">\n                      <ThemeButton\n                        disabled={invalid || pristine || submitting}\n                        type=\"submit\"\n                        className=\"theme-button green-button\"\n                      >\n                        Save\n                      </ThemeButton>\n                    </div>\n                  </Fragment>\n                </Fragment>\n              }\n            />\n\n            <div className=\"d-flex w-100 pt-2\">\n              <Form.Label className=\"col-7 pl-3 m-auto\" xs={7}>\n               Automatically Calculate Royalty?\n              </Form.Label>\n              <Col xs={5}>\n                <Field  name=\"automaticCalculate\" component={ToggleSwitch} />\n              </Col>\n            </div>\n          </Fragment>\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nconst actions = {\n  // socialFeedPost: news.actions.socialFeedPostAsync,\n};\n\nconst selector = formValueSelector(\"adjustPrice\");\nconst mapState = (state) => {\n  const values = selector(\n    state,\n    \"price_from\",\n    \"price_to\",\n    \"price_view\",\n    \"reason\"\n  );\n  return {\n    adjustPrice: values,\n  };\n};\nexport default connect(\n  mapState,\n  actions\n)(\n  reduxForm({ form: \"SalesAdviceSettings\", initialValues: {}, validate })(\n    SalesAdviceSettings\n  )\n);\n","import React, { Fragment, useState } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport SingleListingForm from \"../SingleListingForm\";\nimport { Field, FieldArray } from \"redux-form\";\nimport ThemeHeader from \"../../../../../partials/content/ThemeHeader\";\nimport ThemeButton from \"../../../../../partials/button/ThemeButton\";\nimport Item from \"../../../../../partials/display/Item\";\nimport TextInput from \"../../../../../partials/form/TextInput\";\nimport MultiSelect from \"../../../../../partials/form/MultiSelect\";\nimport DateInput from \"../../../../../partials/form/DateInput\";\nimport { SingleToggleButton } from \"../../../../../partials/form/singleToggleButton/SingleToggleButton\";\nimport DynamicForm from \"../../../../../partials/form/dynamicForm/DynamicForm\";\nimport ToggleSwitch from \"../../../../../partials/form/toggleSwitch/ToggleSwitch\";\nimport FormContacts from \"../../../../../partials/form/partials/FormContacts\";\nimport DefaultModal from \"../../../../../partials/modal/DefaultModal\";\nimport ContactForm from \"../../../../contacts/modals/contactFormModal/ContactForm\";\nimport SalesAdviceSettings from \"../../../modals/salesAdviceSettings/SalesAdviceSettings\";\n\nconst SLsalesAdvice = (props) => {\n  const [contactsUpdate, setContactsUpdate] = useState(0);\n  const [modalShow, setModalShow] = React.useState(false);\n  const [modalShowSetting, setModalShowSetting] = React.useState(false);\n  const updateContacts =(e) => {\nconsole.log(e);\nsetContactsUpdate(contactsUpdate + 1);\n  }\n\n  const selectActionOptions = [\n    {\n      label: \"Erika\",\n      value: \"1\",\n    },\n    {\n      label: \"Julia\",\n      value: \"2\",\n    },\n    {\n      label: \"Sarah\",\n      value: \"3\",\n    },\n  ];\n  console.log(props);\n  return (\n    <Fragment>\n      {modalShow ? (\n        <DefaultModal show={modalShow} onHide={() => setModalShow(false)}>\n          <div>\n            <ContactForm\n              closeModal={() => setModalShow(false)}\n              onSubmit={updateContacts}\n            />\n          </div>\n        </DefaultModal>\n      ) : (\n        \"\"\n      )}\n      {modalShowSetting ? (\n        <DefaultModal size=\"md\" show={modalShowSetting} onHide={() => setModalShowSetting(false)}>\n          <div>\n            <SalesAdviceSettings closeModal={() => setModalShowSetting(false)} />\n            \n          </div>\n        </DefaultModal>\n      ) : (\n        \"\"\n      )}\n      <Row>\n        <Col xl={10}>\n          <DynamicForm formName={props.formName}>\n            <Fragment>\n              <ThemeHeader\n                right={\n                  <Fragment>\n                    <ThemeButton icon>\n                      <i class=\"fas fa-print    \"></i>\n                    </ThemeButton>\n                    <ThemeButton onClick={()=> setModalShowSetting(true)} icon>\n                      <i class=\"fas fa-cog    \"></i>\n                    </ThemeButton>\n                  </Fragment>\n                }\n              />\n              <h5 className=\"title\">Sale Details</h5>\n              <Row>\n                <Col lg={4}>\n                  <Item\n                    left=\"Buyer Agent\"\n                    right={\n                      <Field\n                        name=\"buyerAgent\"\n                        placeholder=\"Select passions\"\n                        component={MultiSelect}\n                        showBottom={false}\n                        options={selectActionOptions}\n                      />\n                    }\n                  />\n                  <Item\n                    left=\"Sale\"\n                    right={\n                      <Field\n                        name=\"saleDate\"\n                        placeholder=\"Select Date\"\n                        component={DateInput}\n                      />\n                    }\n                  />\n                </Col>\n                <Col lg={4}>\n                  <Item\n                    left=\"Status\"\n                    right={\n                      <Field\n                        name=\"buyerAgent\"\n                        placeholder=\"Select passions\"\n                        component={MultiSelect}\n                        showBottom={false}\n                        options={selectActionOptions}\n                      />\n                    }\n                  />\n                </Col>\n                <Col lg={4}>\n                  <Item\n                    left=\"Report\"\n                    right={\n                      <Fragment>\n                        <Field\n                          name=\"bug\"\n                          component={SingleToggleButton}\n                          icon\n                          label={<i class=\"fas fa-bug    \"></i>}\n                        />\n                        <Field\n                          name=\"building\"\n                          component={SingleToggleButton}\n                          icon\n                          label={<i class=\"fas fa-building    \"></i>}\n                        />\n                        <Field\n                          name=\"scale\"\n                          component={SingleToggleButton}\n                          icon\n                          label={<i class=\"fas fa-balance-scale    \"></i>}\n                        />\n                      </Fragment>\n                    }\n                  />\n                </Col>\n              </Row>\n              <h5 className=\"title\">Fees and charges</h5>\n              <Row>\n                <Col lg={4}>\n                  <Item\n                    left=\"Fee (%)\"\n                    right={<Field name=\"fee\" component={TextInput} />}\n                  />\n                </Col>\n                <Col lg={4}>\n                  <Item\n                    left=\"GST\"\n                    right={\n                      <Field\n                        name=\"feeGST\"\n                        component={ToggleSwitch}\n                        labelTrue=\"INCL.\"\n                        labelFalse=\"EXCL.\"\n                      />\n                    }\n                  />\n                </Col>\n                <Col lg={4}></Col>\n              </Row>\n            </Fragment>\n          </DynamicForm>\n\n          <ThemeHeader\n            left={<h5 className=\"title\"> Contacts</h5>}\n            right={\n              <Fragment>\n                <ThemeButton className=\"mr-2 lightGrey-button\">\n                  Remove{\" \"}\n                </ThemeButton>\n                <ThemeButton\n                  className=\"theme-button green-button\"\n                  onClick={() => setModalShow(true)}\n                >\n                  Add\n                </ThemeButton>\n              </Fragment>\n            }\n          />\n\n          <DynamicForm formName={props.formName}>\n            <Fragment>\n              <FieldArray\n                update={contactsUpdate}\n                name=\"contacts\"\n                component={FormContacts}\n              />\n            </Fragment>\n          </DynamicForm>\n        </Col>\n        <Col xl={2}>\n          <div className=\"pb-3\">\n            <h5 className='title'> Fee Details</h5>\n            <Item xl={6} left=\"Commission\" right=\"$23423423423\" />\n          </div>\n          <div className=\"pb-3\">\n            <h5 className='title'> Comm. Deduction</h5>\n            <Item   xl={6} left=\"Royalty\" right={<Field name=\"royalty\" component={TextInput} />} />\n          </div>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n};\n\nexport default SLsalesAdvice;\n","import React, { Fragment, useState, useCallback } from \"react\";\nimport { Col} from \"react-bootstrap\";\nimport { reduxForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport PropertyBasic from \"../PropertyBasic\";\nimport SLsalesAdvice from \"./SLsalesAdvice\";\n\n\nconst SLsalesAdviceFrom = (props) => {\n  const { handleSubmit} = props;\n  // const { contactProfileId } = props;\n  const [value, setValue] = useState(0);\n  const [edit, setEdit] = useState(false);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleEdit =() => {\n    setEdit(!edit);\n  }\n  const onFormSubmit = useCallback((values) => {\n    console.log(values);\n    // setShow(false);\n  }, []);\n  \n  return (\n    <Fragment>\n     \n        <div className=\"row\">\n          <Col lg={4} xl={3}>\n          <form onSubmit={handleSubmit(onFormSubmit)}>\n              <PropertyBasic  handleEdit={() => handleEdit()} edit={edit} {...props} />\n         </form>\n          </Col>\n          <Col  lg={8} xl={9}>\n            <div className=\"p-3\">\n            <SLsalesAdvice formName={props.form} />\n            </div>\n          </Col>\n        </div>\n    </Fragment>\n  );\n};\n\n\nfunction mapStateToProps(state, props) {\n  return {\n      form: 'SLsalesAdviceFrom'\n  };\n}\n\nexport default connect(mapStateToProps)(reduxForm({ enableReinitialize: true,initialValues: {\n}})(SLsalesAdviceFrom));","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { TextField } from \"@material-ui/core\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TextInput from \"../../../../../partials/form/TextInput\";\nimport ToggleButtons from \"../../../../../partials/form/toggleButtons/ToggleButtons\";\nimport DateInput from \"../../../../../partials/form/DateInput\";\nimport ToggleSwitch from \"../../../../../partials/form/toggleSwitch/ToggleSwitch\";\nimport MultiSelect from \"../../../../../partials/form/MultiSelect\";\nimport ThemeButton from \"../../../../../partials/button/ThemeButton\";\n\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.username) {\n    errors.username = \"Required\";\n  } else if (values.username.length > 15) {\n    errors.username = \"Must be 15 characters or less\";\n  }\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  if (!values.age) {\n    errors.age = \"Required\";\n  } else if (isNaN(Number(values.age))) {\n    errors.age = \"Must be a number\";\n  } else if (Number(values.age) < 18) {\n    errors.age = \"Sorry, you must be at least 18 years old\";\n  }\n  return errors;\n};\nconst myBuyerOptions = [\n  {\n    label: 'My Buyers',\n    value: '1',\n  },\n  {\n    label: 'Open Buyers',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst buyerActivityOptions = [\n  {\n    label: 'Active',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst ratingOptions = [\n  {\n    label: 'A',\n    value: '1',\n  },\n  {\n    label: 'AA',\n    value: '2',\n  },\n  {\n    label: 'AAA',\n    value: '3',\n  },\n];\nconst propertyTypeOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst buyerTypeOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst conditionOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst toSellOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst financeStatusOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst selectActionOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst SLviewedBuyersDrawer = (props) => {\n  const { handleSubmit, pristine, reset, submitting } = props;\n  return (\n    <form onSubmit={handleSubmit} className=\"h-75 overflow-auto\">\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" sm={12}>\n          <Field name=\"passions\" placeholder='Select passions' component={MultiSelect} showBottom={false} options={myBuyerOptions} defaultValue=\"My Buyers\" />\n        </Col>\n        <Col className=\"pb-1\" sm={12}>\n        <Field name=\"buyerActivityOptions\" placeholder='Select Activity' component={MultiSelect} showBottom={false} options={buyerActivityOptions} />\n        </Col>\n        <Col className=\"pb-1\" sm={12}>\n        <Field name=\"ratingOptions\" placeholder='Select rating' component={MultiSelect} showBottom={false} options={ratingOptions} />\n        </Col>\n        <div className=\"d-flex w-100 pt-2\">\n        <Form.Label className=\"col-7 pl-3\" xs={7}>\n              Include DNC?\n            </Form.Label>\n            <Col xs={5}>\n              <Field\n                name=\"dns\"\n                component={ToggleSwitch}\n              />\n            </Col>\n        </div>\n\n\n\n      </Form.Group>\n\n      <Form.Group as={Row} >\n        <Col className=\"pb-1\" sm={12}>\n          <Field\n            name=\"name\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Contact Name\"\n          />\n        </Col>\n        <Col className=\"pb-1\" sm={12}>\n          <Field\n            name=\"phone\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Phone Number\"\n          />\n        </Col>\n        <Col className=\"pb-1\" sm={12}>\n          <Field\n            name=\"email\"\n            type=\"email\"\n            component={TextInput}\n            placeholder=\"Email Address\"\n          />\n        </Col>\n      </Form.Group>\n      {/*  */}\n\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={6}>\n          <Field\n            name=\"price_from\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Price From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={6}>\n          <Field\n            name=\"price_to\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Price To\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Rating</option>\n            <option value=\"ff0000\">Buyer Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={4}>\n          <Field\n            name=\"bed\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Bed\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={4}>\n          <Field\n            name=\"bath\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Bath\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={4}>\n          <Field\n            name=\"car\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Car\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={8}>\n          <Field\n            name=\"land_size_from\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Land Size From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={4}>\n        <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option value=\"ff0000\">m&#xb2;</option>\n            <option value=\"00ff00\">Open Buyers</option>\n            <option value=\"0000ff\">All</option>\n            <option value=\"0000ff\">Team Name</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={8}>\n          <Field\n            name=\"land_size_to\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Land Size To\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={4}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option value=\"ff0000\">m&#xb2;</option>\n            <option value=\"00ff00\">Open Buyers <div><span>32&nbsp;ft<sup>3</sup></span></div></option>\n            <option value=\"0000ff\">All</option>\n            <option value=\"0000ff\">Team Name</option>\n          </Field>\n        </Col>\n        {/* <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"locations\"\n            component={Location}\n            placeholder=\"Locations\"\n          />\n        </Col> */}\n      </Form.Group>\n      {/*  */}\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Buyer Type</option>\n            <option value=\"ff0000\">Buyer Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Condition</option>\n            <option value=\"ff0000\">Buyer Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>To Sell ?</option>\n            <option value=\"ff0000\">Buyer Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Finance Status</option>\n            <option value=\"ff0000\">Buyer Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n      </Form.Group>\n\n      {/*  */}\n\n      {/*  */}\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={12}>\n                      <Field\n            name=\"creationDateFrom\"\n            component={DateInput}\n            timeIntervals={15}\n            // dateFormat=\"dd LLL yyyy h:mm a\"\n            dateFormat=\"MMMM d, yyyy\"\n            placeholder=\"Creation Date From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n        <Field\n            name=\"creationDateTo\"\n            component={DateInput}\n            timeIntervals={15}\n            // dateFormat=\"dd LLL yyyy h:mm a\"\n            dateFormat=\"MMMM d, yyyy\"\n            placeholder=\"Creation Date From\"\n          />\n        </Col>\n      </Form.Group>\n\n      {/*  */}\n\n      {/*  */}\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Last Contacted From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Last Contacted To\"\n          />\n        </Col>\n      </Form.Group>\n\n      {/*  */}\n\n      {/*  */}\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Appointment Date From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Appointment Date To\"\n          />\n        </Col>\n      </Form.Group>\n\n      {/*  */}\n\n      {/*  */}\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"marked\"\n            component={ToggleButtons}\n            labelOne=\"Marked As\"\n            labelTwo=\"Not Marked As\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Select Actions</option>\n            <option value=\"ff0000\">Buyer Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={6}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Date From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={6}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Date To\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Team</option>\n            <option value=\"ff0000\">Buyer Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n      </Form.Group>\n\n      {/*  */}\n\n      <div>\n          <ThemeButton className=\"filter-button mb-5 mt-5 w-100\"  type=\"submit\" disabled={pristine || submitting}>\n          Submit\n          </ThemeButton>\n        {/* <Button\n          className=\"filter-button mb-5 mt-5 w-100\"\n          type=\"submit\"\n          disabled={submitting}\n        >\n          Submit\n        </Button> */}\n        {/* <Button  disabled={pristine || submitting} onClick={reset} variant=\"outline-warning\"> Clear Values</Button> */}\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"SLviewedBuyersDrawer\", // a unique identifier for this form\n  initialValues: {\n    passions: [{\n      label: 'My Buyers',\n      value: '1',\n    },],\n    dns: true,\n    marked: \"false\",\n  },\n  validate,\n})(SLviewedBuyersDrawer);\n","import React, { useEffect, useState, Fragment } from \"react\";\nimport moment from \"moment\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ThemeHeader from \"../../../../../partials/content/ThemeHeader\";\nimport ThemeButton from \"../../../../../partials/button/ThemeButton\";\nimport DynamicTableEdit from \"../../../../../partials/table/DynamicTableEdit\";\nimport { getAllMail } from \"../../../../buyers/crud/buyersCrud\";\nimport { Chip } from \"@material-ui/core\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nconst SLviewedBuyersTable = ({ edit , handleChange}) => {\n  const [items, setItems] = useState(null);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  // setItems(data.data);\n  console.log(edit);\n  useEffect(() => {\n    getAllMail()\n      .then(({ data }) => {\n        setItems(data.data);\n        console.log(data.data);\n      })\n      .catch(() => {});\n  }, []);\n\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Mail\",\n        columns: [\n          {\n            Header: \"Date\",\n            accessor: \"date\",\n            Cell: ({ cell: { value } }) => (\n              <p>{moment(value).format(\"DD/MM/YYYY\")}</p>\n            ),\n          },\n          {\n            Header: \"Time\",\n            accessor: \"id\",\n            Cell: ({\n              cell: {\n                row: { original },\n              },\n            }) => <p>{moment(original.date).format(\"hh : m\")}</p>,\n          },\n          {\n            Header: \"By\",\n            accessor: \"from\",\n            Cell: ({ cell: { value } }) => <p>{value}</p>,\n          },\n          {\n            Header: \"Type\",\n            accessor: \"type\",\n            Cell: ({ cell: { value } }) => <p>{value}</p>,\n          },\n          {\n            Header: \"Subject\",\n            accessor: \"subject\",\n            Cell: ({ cell: { value } }) => <p>{value}</p>,\n          },\n        ],\n      },\n    ],\n    []\n  );\n  console.log(items);\n  const fetchMoreData = () => {\n    // setTimeout(() => {\n    //   setItems(items.concat(items));\n    // }, 1000);\n  };\n\n  const rowClick = (e) => {\n\n    // setShowRowOnClick(!showRowOnClick)\n\n  };\n\n\n  const datas = React.useMemo(() => items, [items]);\n\n  return (\n    <div>\n\n      <ThemeHeader\n      left={\n        <Fragment>\n          <div>\n              <DatePicker\n                name=\"startDate\"\n                className=\"form-control\"\n                selected={startDate}\n                onChange={(date) => setStartDate(date)}\n                fixedHeight\n              />\n            </div>\n            <div className=\"pl-2\">\n              <DatePicker\n                name=\"endDate\"\n                className=\"form-control\"\n                selected={endDate}\n                onChange={(date) => setEndDate(date)}\n                fixedHeight\n              />\n            </div>\n        </Fragment>\n      }\n        right={\n          <Fragment>\n              <ThemeButton\n              icon\n              className=\"mr-2 lightGrey-button-icon\"\n            >\n              <i class=\"fas fa-download    \"></i>{\" \"}\n            </ThemeButton>\n            <ThemeButton\n              icon\n              className=\"mr-2 lightGrey-button-icon\"\n            >\n              <i class=\"fas fa-mobile    \"></i>\n            </ThemeButton>\n            <ThemeButton\n              icon\n              className=\"mr-2 lightGrey-button-icon\"\n            >\n              <i class=\"fas fa-envelope    \"></i>\n            </ThemeButton>\n             <Chip className=\"mr-2\" label={\"Matched Buyers \"+items?.length} variant=\"outlined\" />\n            <ThemeButton\n                  className=\"lightGrey-button\"\n                  onClick={() => handleChange()}\n                >\n                  Filter\n                </ThemeButton>\n          </Fragment>\n        }\n      />\n      <div className=\"mail-log-table\">\n        {datas ? \n\n            <DynamicTableEdit\n              handleChange={(e) => console.log(e)}\n              isEditable={true}\n              columns={columns}\n              data={datas}\n              update={fetchMoreData}\n              handleRowClick={rowClick}\n            /> : \n          \"loading\"\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default SLviewedBuyersTable;\n","/* eslint-disable no-restricted-imports */\nimport React, { Fragment, useEffect, useCallback } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport { connect } from \"react-redux\";\nimport { Spinner, Row } from \"react-bootstrap\";\nimport SLviewedBuyersDrawer from \"./SLviewedBuyersDrawer\";\nimport SLviewedBuyersTable from \"./SLviewedBuyersTable\";\nconst drawerWidth = 270;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: drawerWidth,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    overflow: \"hidden\",\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-start\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -drawerWidth,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginRight: 0,\n      padding: theme.spacing(1),\n    },\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: 0,\n  },\n}));\n\nconst SLviewedBuyers = (props) => {\n  //   useEffect(() => {\n  //     console.log(zoneAnalysis);\n  //     if (!zoneAnalysis) {\n  //       prospectsLoading(\"zoneAnalysis\");\n  //       console.log(zoneAnalysis);\n  //     }\n  //   }, [zoneAnalysis]);\n\n  console.log(\"drawer\");\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = useCallback(() => setOpen(!open), []);\n\n  const handleSearchChange = (event) => {\n    if (event.target.value.length > 2) {\n      // simulate getting search result\n      setTimeout(() => {}, 500);\n      return;\n    }\n  };\n  const onSubmitDrawerForm = async (value) => {\n    console.log(value);\n    // props.listingsLoading();\n  };\n  return (\n    <Fragment>\n      <Row>\n        <main\n          className={\n            \"col-12 \" +\n            clsx(classes.content, {\n              [classes.contentShift]: open,\n            })\n          }\n        >\n          <SLviewedBuyersTable handleChange={()=>handleDrawerOpen()}  />\n        </main>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"right\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"ltr\" ? (\n                <ChevronRightIcon />\n              ) : (\n                <ChevronLeftIcon />\n              )}\n            </IconButton>\n            <div className=\"title\">Filter Buyers</div>\n          </div>\n          <Divider />\n          <div className=\"container-fluid mt-3\">\n            <SLviewedBuyersDrawer onSubmit={onSubmitDrawerForm} />\n          </div>\n        </Drawer>\n      </Row>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ prospects }) => ({\n  //   zoneAnalysis: prospects.zoneAnalysis,\n});\n\n// export default connect(mapStateToProps, buyersRedux.actions)(BuyersPage);\nexport default React.memo(connect(mapStateToProps, null)(SLviewedBuyers));\n","import React, { Fragment, useState, useCallback } from \"react\";\nimport { Col} from \"react-bootstrap\";\nimport { reduxForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport PropertyBasic from \"../PropertyBasic\";\nimport SLviewedBuyers from \"./SLviewedBuyers\";\n\n\nconst SLviewedBuyersFrom = (props) => {\n  const { handleSubmit} = props;\n  // const { contactProfileId } = props;\n  const [value, setValue] = useState(0);\n  const [edit, setEdit] = useState(false);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const addNote = (e) => {\n    console.log(e);\n  };\n\n  const handleEdit =() => {\n    setEdit(!edit);\n  }\n  const onFormSubmit = useCallback((values) => {\n    console.log(values);\n    // setShow(false);\n  }, []);\n  \n  return (\n    <Fragment>\n     \n        <div className=\"row\">\n          <Col lg={4} xl={3}>\n          <form onSubmit={handleSubmit(onFormSubmit)}>\n              <PropertyBasic  handleEdit={() => handleEdit()} edit={edit} {...props} />\n         </form>\n          </Col>\n          <Col  lg={8} xl={9}>\n            <div className=\"p-3\">\n            <SLviewedBuyers/>\n            </div>\n          </Col>\n        </div>\n    </Fragment>\n  );\n};\n\n\nfunction mapStateToProps(state, props) {\n  console.log(props.formId)\n  return {\n      form: 'SLviewedBuyersFrom'\n  };\n}\n\nexport default connect(mapStateToProps)(reduxForm({ enableReinitialize: true,initialValues: {\n  members:[{}]\n}})(SLviewedBuyersFrom));","import React from \"react\";\nimport ListingDetails from \"./listingDetails/ListingDetails\";\nimport SLtimeLine from \"./timeline/SLtimeLine\";\nimport SLcheckList from \"./checklist/SLcheckList\";\nimport AdvertisingSchedule from \"./advertisingSchedule/AdvertisingSchedule\";\nimport Library from \"./library/Library\";\nimport SLUploads from \"./uploads/SLUploads\";\nimport MailLog from \"./mailLog/MailLog\";\nimport SLsellerReport from \"./sellerReport/SLsellerReport\";\nimport SLposts from \"./posts/SLposts\";\nimport ListingDetailsFrom from \"./listingDetails/ListingDetailsFrom\";\nimport SLmatchedBuyersFrom from \"./matchedBuyers/SLmatchedBuyersFrom\";\nimport SLbuyerEnquiriesFrom from \"./buyerEnquiries/SLbuyerEnquiriesFrom\";\nimport SLsalesAdvice from \"./salesAdvice/SLsalesAdvice\";\nimport SLsalesAdviceFrom from \"./salesAdvice/SLsalesAdviceFrom\";\nimport SLviewedBuyersFrom from \"./viewedBuyers/SLviewedBuyersFrom\";\n\nexport default function SingleListingList(props) {\n  const { pageComponent, edit } = props;\n  console.log(props);\n\n  console.log(props);\n  switch (pageComponent) {\n    case \"Listing Details\":\n      return <ListingDetailsFrom />;\n    // case \"Timeline\":\n    //   return <SLtimeLine edit={edit} />;\n    // case \"Checklist\":\n    //   return <SLcheckList edit={edit} />;\n    // case \"Advertise Schedule\":\n    //   return <AdvertisingSchedule edit={edit} />;\n    // case \"Library\":\n    //   return <Library edit={edit} />;\n    // case \"Uploads\":\n    //   return <SLUploads edit={edit} />;\n    // case \"Book\":\n    //   return <SLcheckList edit={edit} />;\n    // case \"Book Appointments\":\n    //   return <SLcheckList edit={edit} />;\n    // case \"Adjust Price\":\n    //   return <SLcheckList edit={edit} />;\n    // case \"Mail Log\":\n    //   return <MailLog edit={edit} />;\n    //   case \"Seller Report\":\n    //   return <SLsellerReport edit={edit} />;\n    // case \"Posts\":\n    //   return <SLposts edit={edit} />;\n    case \"Matched Buyers\":\n      return <SLmatchedBuyersFrom />;\n    case \"Buyer Enquires\":\n      return <SLbuyerEnquiriesFrom />;\n    case \"Viewed Buyers\":\n      return <SLviewedBuyersFrom />;\n    case \"Sales Advice\":\n      return <SLsalesAdviceFrom  />;\n    case \"Create Rental\":\n      return <SLsalesAdviceFrom edit={edit} />;\n    default:\n      return \"\";\n  }\n}\n","/* eslint-disable no-restricted-imports */\nimport React, { lazy } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport Box from '@material-ui/core/Box';\nimport PropTypes from 'prop-types';\nimport cuid from 'cuid';\nimport { connect } from 'react-redux';\nimport SingleListingList from '../partials/singleListingList/SingleListingList';\nimport { stringCompare } from '../../../_helpers/_utils/utils';\nimport SingleListingForm from '../partials/singleListingList/SingleListingForm';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n  \n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n\n  menuButton: {\n    // marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  Vhide: {\n    visibility: 'hidden',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width:'0px'\n    // width: theme.spacing(7) + 1,\n    // [theme.breakpoints.up('sm')]: {\n    //   width: theme.spacing(9) + 1,\n    // },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  toolbarClose: {\n    position: 'fixed',\n    height: '100%'\n  },\n  content: {\n    flexGrow: 1,\n    marginLeft: -20,\n    overflow: \"hidden\",\n  },\n  closeContent: {\n    marginLeft: 0,\n  },\n}));\n\nconst SingleListing = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n  const [component, setComponent] = React.useState('Listing Details');\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangeComponent = (e) => {\n    setComponent(e);\n  }\n\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <Divider />\n        <List  className={clsx('drawer-list', {\n          [classes.Vhide]: !open,\n        })}  >\n          {['Listing Details', 'Timeline', 'Checklist','Advertise Schedule','Library','Uploads','Book Appointments','Adjust Price','Mail Log','Seller Report','Posts','Matched Buyers','Buyer Enquires','Viewed Buyers','Sales Advice','Create Rental'].map((text, index) => (\n            <ListItem onClick={()=> handleChangeComponent(text)} key={cuid()} className={clsx({ \"active\": stringCompare(text,component),})}>\n              {text}\n            </ListItem>\n          ))}\n        </List>\n        <div  className={clsx(classes.toolbar, {\n              [classes.toolbarClose]: !open,\n            })}  >\n          <IconButton onClick={handleDrawerClose} className={clsx(classes.menuButton, {\n              [classes.hide]: !open,\n            })}>\n           <ChevronLeftIcon />\n          </IconButton>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n           <ChevronRightIcon />\n          </IconButton>\n        </div>\n        \n      </Drawer>\n      <div className={clsx(classes.content, {\n              [classes.closeContent]: !open,\n            })}   >\n        {/* <SingleListingForm formId={component.replace(/\\s/g, '')} > */}\n        <SingleListingList pageComponent={component} />\n        {/* </SingleListingForm> */}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n    \n})\n\nconst mapDispatchToProps = {\n    \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleListing)\n"],"sourceRoot":""}