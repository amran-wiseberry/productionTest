{"version":3,"sources":["../node_modules/react-bootstrap/esm/ToggleButtonGroup.js","app/partials/form/toggleButtons/MultiToggleButtons.jsx","app/modules/diary/partials/modals/appointment/type/RenderTableRadio.jsx","app/modules/diary/partials/modals/appointment/type/OneToOne.jsx"],"names":["ToggleButtonGroup","forwardRef","props","ref","_useUncontrolled","value","children","type","name","onChange","controlledProps","getValues","concat","createElement","ButtonGroup","toggle","child","values","_child$props","childVal","childOnChange","cloneElement","checked","indexOf","e","inputVal","event","isActive","filter","n","handleToggle","defaultProps","Button","ToggleButton","MultiToggleButtons","input","options","toggleColor","console","log","className","defaultValue","map","item","idx","label","RenderTableRadio","data","title","React","useState","column","setColumn","useEffect","Object","keys","el","handleOnclick","id","currentTarget","dataset","change","style","height","class","index","key","data-id","onClick","length","component","RadioInput","OneToOne","left","right"],"mappings":"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","file":"static/js/22.ecf6dab7.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar defaultProps = {\n  type: 'radio'\n};\nvar ToggleButtonGroup = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    value: 'onChange'\n  }),\n      children = _useUncontrolled.children,\n      type = _useUncontrolled.type,\n      name = _useUncontrolled.name,\n      value = _useUncontrolled.value,\n      onChange = _useUncontrolled.onChange,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"children\", \"type\", \"name\", \"value\", \"onChange\"]);\n\n  var getValues = function getValues() {\n    return value == null ? [] : [].concat(value);\n  };\n\n  var handleToggle = function handleToggle(inputVal, event) {\n    var values = getValues();\n    var isActive = values.indexOf(inputVal) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive) onChange(inputVal, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== inputVal;\n      }), event);\n    } else {\n      onChange([].concat(values, [inputVal]), event);\n    }\n  };\n\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return React.createElement(ButtonGroup, _extends({}, controlledProps, {\n    ref: ref,\n    toggle: true\n  }), map(children, function (child) {\n    var values = getValues();\n    var _child$props = child.props,\n        childVal = _child$props.value,\n        childOnChange = _child$props.onChange;\n\n    var handler = function handler(e) {\n      return handleToggle(childVal, e);\n    };\n\n    return React.cloneElement(child, {\n      type: type,\n      name: child.name || name,\n      checked: values.indexOf(childVal) !== -1,\n      onChange: chainFunction(childOnChange, handler)\n    });\n  }));\n});\nToggleButtonGroup.defaultProps = defaultProps;\nToggleButtonGroup.Button = ToggleButton;\nexport default ToggleButtonGroup;","import React, {  Fragment } from \"react\";\nimport \"./_toggleButtons.scss\";\nimport { ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\n\nexport default function MultiToggleButtons({ input, options ,toggleColor }) {\n  console.log(input.value);\n  const handleValue = (e) => {\n    // setValue(value);\n    input.onChange(e);\n    // console.log(value)\n    console.log(e);\n  };\n\n\n  console.log(input);\n  return (\n    <Fragment>\n      <ToggleButtonGroup\n      className={\"themeButton-toggle-group \"+toggleColor }\n        onChange={handleValue}\n        type=\"radio\"\n        defaultValue={input?.value}\n        name=\"options\"\n      >\n        {options.map((item, idx) => (\n          <ToggleButton value={item.value}>{item.label}</ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </Fragment>\n  );\n}\n","import React, { Fragment, useEffect } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { Field } from \"redux-form\";\nimport RadioInput from \"../../../../../../partials/form/RadioInput\";\n\nconst RenderTableRadio = (props) => {\n  const { data, title, name, type } = props;\n  const [column, setColumn] = React.useState([\"\"]);\n  useEffect(() => {\n    setColumn(Object.keys(data[0]).filter((el) => el !== \"id\"));\n  }, []);\n\n  const handleOnclick = (e) => {\n    const id = e.currentTarget.dataset.id;\n    props.change(name, id);\n  };\n  return (\n    <Fragment>\n       <div\n        style={{ height: \"30vh\" }}\n        className={`tableTheme theme-table-striped pb-3 ${type}`}\n      >\n\n        <table class=\"table table-hover\" id=\"job-table\">\n        <thead>\n          <tr>\n            {column.map((value, index) => (\n              <Fragment>\n                {\" \"}\n                {index === 0 && title ? (\n                  <th key={index}>{title}</th>\n                ) : (\n                  <th key={index}>{value}</th>\n                )}\n              </Fragment>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n        {data.map((item, index) => (\n              <Fragment>\n                <tr key={index} data-id={item.id} onClick={handleOnclick}>\n                  {console.log(item)}\n                  {column.length > 0\n                    ? column.map((value, index) => (\n                        <td key={index}>\n                          {index === 0 ? (\n                            <Field\n                              name={name}\n                              component={RadioInput}\n                              type=\"radio\"\n                              value={item.id}\n                              label={item[value]}\n                            />\n                          ) : (\n                            item[value]\n                          )}\n                        </td>\n                      ))\n                    : \"\"}\n                </tr>\n              </Fragment>\n            ))}\n\n        </tbody>\n      </table>\n    \n  </div>\n      \n    </Fragment>\n  );\n};\n\nexport default RenderTableRadio;\n","import React, { Fragment } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { Field } from \"redux-form\";\nimport RadioInput from \"../../../../../../partials/form/RadioInput\";\nimport Item from \"../../../../../../partials/display/Item\";\nimport { SingleToggleButton } from \"../../../../../../partials/form/singleToggleButton/SingleToggleButton\";\nimport MultiToggleButtons from \"../../../../../../partials/form/toggleButtons/MultiToggleButtons\";\nimport RenderTableRadio from \"./RenderTableRadio\";\n\nconst OneToOne = (props) => {\n  const teamMember = [\n    {\n      id: \"1\",\n      name: \"Winston Russel\",\n    },\n    {\n      id: \"2\",\n      name: \"Mallory Stokes\",\n    },\n    {\n      id: \"3\",\n      name: \"Arvilla Romaguera\",\n    },\n    {\n      id: \"4\",\n      name: \"Shanon Cole\",\n    },\n    {\n      id: \"5\",\n      name: \"Richard Stehr\",\n    },\n    {\n      id: \"6\",\n      name: \"Ralph Herzog\",\n    },\n    {\n      id: \"7\",\n      name: \"Rasheed Bogisich\",\n    },\n    {\n      id: \"8\",\n      name: \"Tony Frami\",\n    },\n    {\n      id: \"9\",\n      name: \"Alvera Cole\",\n    },\n    {\n      id: \"10\",\n      name: \"Sheridan Schmitt MD\",\n    },\n    {\n      id: \"11\",\n      name: \"Shanon Bode\",\n    },\n    {\n      id: \"12\",\n      name: \"Zoie Schultz DVM\",\n    },\n    {\n      id: \"13\",\n      name: \"Gerald Swaniawski I\",\n    },\n    {\n      id: \"14\",\n      name: \"Gabriel Bauch\",\n    },\n    {\n      id: \"15\",\n      name: \"Ellen Fritsch\",\n    },\n    {\n      id: \"16\",\n      name: \"Ardella Beer\",\n    },\n    {\n      id: \"17\",\n      name: \"Frederique Senger\",\n    },\n    {\n      id: \"18\",\n      name: \"Keenan Keeling\",\n    },\n    {\n      id: \"19\",\n      name: \"Flo Olson\",\n    },\n    {\n      id: \"20\",\n      name: \"Leslie Stracke\",\n    },\n    {\n      id: \"21\",\n      name: \"Cary Hickle\",\n    },\n    {\n      id: \"22\",\n      name: \"Margaret Olson DDS\",\n    },\n    {\n      id: \"23\",\n      name: \"Shakira Boehm\",\n    },\n  ];\n  const locationOption = [\n    {\n      label: \"Office\",\n      value: \"office\",\n    },\n    {\n      label: \"Another Address\",\n      value: \"anotherAddress\",\n    },\n  ];\n  const handleOnclick = (e) => {\n    const id = e.currentTarget.dataset.id;\n    props.change(\"teamMember\", id);\n  };\n  return (\n    <Fragment>\n      <div className=\"appointment-right d-flex flex-column p-2\">\n        <RenderTableRadio change={props.change} data={teamMember} title=\"Team Member\" type={props?.type?.value} name=\"teamMember\"  />\n        <Item\n          left=\"Location\"\n          right={\n            <Field\n              name=\"location\"\n              component={MultiToggleButtons}\n              options={locationOption}\n              toggleColor={\"oneToOne\"}\n            />\n          }\n        />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default OneToOne;\n"],"sourceRoot":""}