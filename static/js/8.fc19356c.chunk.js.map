{"version":3,"sources":["app/partials/form/toggleButtons/ToggleButtons.jsx","app/partials/form/Location.jsx","app/partials/layout/pageLayout/TableWithDrawer.jsx","../node_modules/@material-ui/lab/esm/ToggleButton/ToggleButton.js","app/partials/table/cells/Email.jsx","app/partials/table/cells/LastContact.jsx","app/partials/table/cells/ContactType.jsx","../node_modules/@material-ui/lab/esm/ToggleButtonGroup/isValueSelected.js","../node_modules/@material-ui/lab/esm/ToggleButtonGroup/ToggleButtonGroup.js","app/partials/form/sortableArrayFields/SortableArrayFields.jsx","app/modules/tenants/modals/tenantSettings/TenantSettings.jsx","app/modules/tenants/partials/tenantsTable/TenantsTable.jsx","app/modules/tenants/partials/DrawerForm.jsx","app/modules/tenants/pages/TenantsPage.jsx"],"names":["ToggleButtons","input","labelOne","labelTwo","useState","value","alignment","setAlignment","console","log","className","exclusive","onChange","event","newAlignment","name","Location","props","placeholder","isMulti","cacheOptions","defaultOptions","loadOptions","getLocations","then","data","catch","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","easeOut","enteringScreen","marginRight","title","flexGrow","hide","drawer","flexShrink","vShow","visibility","vHide","drawerPaper","overflow","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","content","overflowX","breakpoints","down","contentShift","TableWithDrawer","table","handleDrawer","drawerClosed","React","open","setOpen","useEffect","classes","useTheme","clsx","variant","anchor","paper","onClick","direction","ToggleButton","ref","children","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","selected","_props$size","size","other","concat","focusRipple","isDefaultPrevented","label","typography","button","boxSizing","borderRadius","shape","border","palette","action","active","color","backgroundColor","borderLeft","marginLeft","textDecoration","text","primary","sizeSmall","fontSize","pxToRem","sizeLarge","Email","href","email","isUnsubscribed","LastContact","moment","date","format","flag","background","small","character","ContactType","isValueSelected","candidate","undefined","Array","isArray","indexOf","ToggleButtonGroup","_props$exclusive","_props$orientation","orientation","handleChange","buttonValue","newValue","index","slice","splice","handleExclusiveChange","role","vertical","map","child","grouped","capitalize","withStyles","flexDirection","groupedHorizontal","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedVertical","marginTop","borderTop","SortableArrayFields","fields","edit","uniqId","type","id","required","ThemeButton","icon","obj","document","getElementById","push","handleAddTags","SortableList","field","key","Field","component","TextInput","remove","class","Handle","renderFieldList","connect","combineValidators","state","initialValues","reduxForm","form","handleSubmit","pristine","submitting","invalid","closeModal","selectedValues","reports","onFormSubmit","values","a","onSubmit","ThemeHeader","left","right","Row","Col","lg","Item","noMargin","FieldArray","cuid","memo","tenants","tenantsRedux","entities","items","setItems","showSettings","setShowSettings","columns","useMemo","Header","accessor","Cell","cell","original","row","OverlayTrigger","trigger","placement","overlay","Popover","UserPopOver","dispatch","useDispatch","datas","DefaultModal","centered","show","onHide","continuousMood","tenantToggleCont","TableFilter","DynamicTableEdit","e","isEditable","update","setTimeout","handleRowClick","info","modalRedux","openModal","contactProfileId","tenantSelected","myTenantOptions","tenantActivityOptions","ratingOptions","passions","dns","marked","validate","errors","username","length","test","age","isNaN","Number","reset","Form","Group","as","sm","MultiSelect","showBottom","options","defaultValue","Label","xs","ToggleSwitch","DateInput","timeIntervals","dateFormat","Button","tenantsLoading","onSubmitDrawerForm","Spinner","animation"],"mappings":"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","file":"static/js/8.fc19356c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport \"./_toggleButtons.scss\";\n\nexport default function ToggleButtons({ input, labelOne, labelTwo }) {\n  const [alignment, setAlignment] = useState(input.value);\n  console.log(input.value);\n  const handleAlignment = (event, newAlignment) => {\n    setAlignment(newAlignment);\n\n    input.onChange(newAlignment);\n  };\n\n  console.log(input);\n  return (\n    <ToggleButtonGroup\n      className=\"toggle-button-group\"\n      value={alignment}\n      exclusive\n      onChange={handleAlignment}\n      name={input.name}\n    >\n      <ToggleButton value=\"true\">{labelOne}</ToggleButton>\n      <ToggleButton value=\"false\">{labelTwo}</ToggleButton>\n    </ToggleButtonGroup>\n  );\n}\n","import React, { PropTypes, useState, Fragment } from \"react\";\nimport Select from \"react-select\";\n\nimport AsyncSelect from \"react-select/async\";\nimport cuid from \"cuid\";\nimport Axios from \"axios\";\nimport { getLocations } from \"../../GeneralApi/GeneralApi\";\n\nconst Location = (props) => {\n  const { input, placeholder } = props;\n\n  //   Add or Delete Item from the Select Area / Dropdown\n  const handleChange = (value) => {\n    input.onChange(value);\n  };\n//   const handleChange = (inputValue) => {\n// console.log(inputValue)\n// // console.log(action)\n//     // this.setState({ isLoading: true })\n//     // if (action === 'set-value') {\n//     //   const options = await loadOptions(this.state.inputValue)\n//     //   this.setState({ options, isLoading: false })\n//     // } else {\n//     //   this.setState({ inputValue })\n//     //   const options = await loadOptions(inputValue)\n//     //   this.setState({ options, isLoading: false })\n//     // }\n//   }\n  \n\n  const getOptions = (input) => {\n\n    return getLocations(input)\n    .then(({data}) => {\n      // setProfile((data);\n      // setLoading(false);\n      console.log(data);\n        return data;\n    })\n    .catch(() => {});\n\n  };\n  return (\n    <Fragment>\n      <div className=\"multiSelect\">\n        <AsyncSelect\n          name={input.name}\n          placeholder={placeholder}\n          isMulti\n          cacheOptions\n          defaultOptions\n          loadOptions={getOptions}\n        //   onInputChange={handleChange}\n          onChange = {handleChange}\n        />\n      </div>\n    </Fragment>\n  );\n};\nexport default Location;\n","/* eslint-disable no-restricted-imports */\nimport React, { Fragment, useEffect, useCallback } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport { Spinner, Row } from \"react-bootstrap\";\n\nconst drawerWidth = 270;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: drawerWidth,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  vShow: {\n    visibility: \"visible\",\n  },\n  vHide: {\n    visibility: \"hidden\",\n  },\n  drawerPaper: {\n    overflow: \"hidden\",\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-start\",\n  },\n  content: {\n      overflowX: 'auto',\n    flexGrow: 1,\n    padding: theme.spacing(1),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -drawerWidth,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginRight: 0,\n      padding: theme.spacing(1),\n    },\n  },\n  contentShift: {\n    overflowX: 'auto',\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: 0,\n  },\n}));\n\nconst TableWithDrawer = ({drawer, table, title , handleDrawer, drawerClosed }) => {\n\n  const [open, setOpen] = React.useState(false);\n\n  useEffect(() => {\n    setOpen(handleDrawer);\n  }, [handleDrawer]);\n\n\n  console.log(\"drawer\");\n  const classes = useStyles();\n  const theme = useTheme();\n\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n    drawerClosed()\n  };\n\n\n  const handleSearchChange = (event) => {\n    if (event.target.value.length > 2) {\n      // simulate getting search result\n      setTimeout(() => {}, 500);\n      return;\n    }\n  };\n\n  return (\n    <Fragment>\n      <Row>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n         {table}\n        </main>\n        <Drawer\n          className={clsx(classes.drawer, {\n            [classes.vHide]: !open,\n            [classes.vShow]: open,\n          })}\n          variant=\"persistent\"\n          anchor=\"right\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"ltr\" ? (\n                <ChevronRightIcon />\n              ) : (\n                <ChevronLeftIcon />\n              )}\n            </IconButton>\n            <div className=\"title\">Filter {title}</div>\n          </div>\n          <Divider />\n          <div className=\"container-fluid mt-3\">\n            {drawer}\n          </div>\n        </Drawer>\n      </Row>\n    </Fragment>\n  );\n};\n\nexport default TableWithDrawer\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // @inheritedComponent ButtonBase\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { fade, withStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      borderRadius: theme.shape.borderRadius,\n      padding: 11,\n      border: \"1px solid \".concat(fade(theme.palette.action.active, 0.12)),\n      color: fade(theme.palette.action.active, 0.38),\n      '&$selected': {\n        color: theme.palette.action.active,\n        backgroundColor: fade(theme.palette.action.active, 0.12),\n        '&:hover': {\n          backgroundColor: fade(theme.palette.action.active, 0.15)\n        },\n        '& + &': {\n          borderLeft: 0,\n          marginLeft: 0\n        }\n      },\n      '&$disabled': {\n        color: fade(theme.palette.action.disabled, 0.12)\n      },\n      '&:hover': {\n        textDecoration: 'none',\n        // Reset on mouse devices\n        backgroundColor: fade(theme.palette.text.primary, 0.05),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the `label` wrapper element. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 7,\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      padding: 15,\n      fontSize: theme.typography.pxToRem(15)\n    }\n  };\n};\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      selected = props.selected,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disabled\", \"disableFocusRipple\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event) {\n    if (onClick) {\n      onClick(event, value);\n\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, disabled && classes.disabled, selected && classes.selected, size !== 'medium' && classes[\"size\".concat(capitalize(size))]),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    \"aria-pressed\": selected\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * If `true`, the button will be rendered in an active state.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButton'\n})(ToggleButton);","import React, { Fragment } from \"react\";\nimport ThemeButton from \"../../button/ThemeButton\";\n\nexport default function Email(props) {\n    console.log(props)\n  return (\n    <Fragment>\n      <div className=\"d-flex justify-content-between\">\n        <a href={`email:${props.email}`}>\n          {props.email} {console.log(props)}\n        </a>\n        {props.isUnsubscribed ? (\n           <i className=\"fas fa-flag    \"></i>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport moment from \"moment\";\nimport { CharacterCircle } from \"../../component/characterCircle /CharacterCircle\";\n\nexport default function LastContact(props) {\n  return (\n    <Fragment>\n      <div className=\"d-flex justify-content-between\">\n        <div>{moment(props.date).format(\"DD/MM/YYYY\")}</div>\n        \n        <div>\n        {props.flag ? (\n          <CharacterCircle background=\"buyer\" small character=\"A\" />\n        ) : (\n          \"\"\n        )}\n        </div>\n        \n      </div>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { CharacterCircle } from \"../../component/characterCircle /CharacterCircle\";\n\nconst ContactType = () => {\n  return (\n    <Fragment>\n      <div className=\"d-flex justify-content-center\">\n        <CharacterCircle small background=\"buyer\" character=\"B\" />\n        <CharacterCircle small background=\"virtualListing\" character=\"L\" />\n        <CharacterCircle small background=\"tenant\" character=\"P\" />\n        <CharacterCircle small background=\"marketReview\" character=\"S\" />\n        <CharacterCircle small background=\"openHome\" character=\"T\" />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ContactType;\n","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n\n  return value === candidate;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport isValueSelected from './isValueSelected';\nimport { withStyles } from '@material-ui/core/styles';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {},\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1,\n        borderLeft: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1,\n        borderTop: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    }\n  };\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$exclusive = props.exclusive,\n      exclusive = _props$exclusive === void 0 ? false : _props$exclusive,\n      onChange = props.onChange,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"exclusive\", \"onChange\", \"orientation\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    var index = value && value.indexOf(buttonValue);\n    var newValue;\n\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n\n    onChange(event, newValue);\n  };\n\n  var handleExclusiveChange = function handleExclusiveChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: \"group\",\n    className: clsx(classes.root, className, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(classes.grouped, classes[\"grouped\".concat(capitalize(orientation))], child.props.className),\n      onChange: exclusive ? handleExclusiveChange : handleChange,\n      selected: child.props.selected === undefined ? isValueSelected(child.props.value, value) : child.props.selected,\n      size: child.props.size || size\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   */\n  exclusive: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The group orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the buttons.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButtonGroup'\n})(ToggleButtonGroup);","import React, { Fragment } from \"react\";\nimport SortableList from \"../sortableForm/SortableList\";\nimport Handle from \"../../component/handle/Handle\";\nimport ThemeButton from \"../../button/ThemeButton\";\nimport { Field } from \"redux-form\";\nimport TextInput from \"../TextInput\";\n\nconst SortableArrayFields = ({ fields, edit , uniqId}) => {\n  const handleAddTags = () => {\n    let obj = {};\n    obj = document.getElementById(uniqId)?.value;\n    fields.push(obj);\n  };\n  return (\n    <Fragment>\n      <div className=\"d-flex pb-2\">\n        <input\n          type=\"text\"\n          id={uniqId}\n          className=\"  form-control fix-rounded-right\"\n          required\n        />\n        <ThemeButton icon onClick={() => handleAddTags()}>\n          <i className=\"fas fa-plus-circle\"></i>\n        </ThemeButton>\n      </div>\n      <SortableList fields={fields}>\n        {fields.map((field, index) => (\n          \n            <div key={index} className=\"d-flex \">\n             \n              <div className=\"flex-grow-1\">\n                <div className=\"w-100\">\n                  <Field name={field} component={TextInput} edit={edit} />\n                </div>\n              </div>\n              <div className=\"rightButton\">\n              <ThemeButton icon onClick={() => fields.remove(index)}>\n              <i class=\"fas fa-minus-circle    \"></i>\n            </ThemeButton>\n              </div>\n              <div className='m-auto'> \n                <Handle />\n              </div>\n            </div>\n        ))}\n      </SortableList>\n    </Fragment>\n  );\n};\n\nexport default SortableArrayFields;\n","import React, { useEffect, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\n// import * as modal from '../_redux/modalRedux'\nimport { reduxForm, Field, FieldArray } from \"redux-form\";\n\nimport { combineValidators } from \"revalidate\";\nimport ThemeHeader from \"../../../../partials/content/ThemeHeader\";\nimport ThemeButton from \"../../../../partials/button/ThemeButton\";\nimport Item from \"../../../../partials/display/Item\";\nimport TextInput from \"../../../../partials/form/TextInput\";\nimport { Row, Col } from \"react-bootstrap\";\nimport SortableArrayFields from \"../../../../partials/form/sortableArrayFields/SortableArrayFields\";\nimport cuid from \"cuid\";\n\nconst renderFieldList = ({ fields, edit }) => {\n  const handleAddTags = () => {\n    let obj = {};\n    obj = document.getElementById(\"contactTag\")?.value;\n\n    fields.push(obj);\n  };\n\n  return (\n    <Fragment>\n      <div className=\"d-flex pb-2\">\n        <input\n          type=\"text\"\n          id=\"contactTag\"\n          className=\"  form-control fix-rounded-right\"\n          required\n        />\n        <ThemeButton icon onClick={() => handleAddTags()}>\n          <i className=\"fas fa-plus-circle\"></i>\n        </ThemeButton>\n      </div>\n      {fields.map((field, index) => (\n        <Fragment>\n          <div className=\"d-flex pb-2\" key={index}>\n            <Field name={field} component={TextInput} edit={edit} />\n          </div>\n        </Fragment>\n      ))}\n    </Fragment>\n  );\n};\n\nconst validate = combineValidators({\n  //   price_from: isRequired({ message: \"The event title is required\" }),\n  //   price_to: isRequired({ message: \"The category is required\" }),\n  //   reason: composeValidators(\n  //     isRequired({ message: \"Please enter a description\" }),\n  //     hasLengthGreaterThan(4)({\n  //       message: \"Description needs to be at least 5 characters\",\n  //     })\n  //   )(),\n  //   price_view: isRequired(\"city\"),\n  //   venue: isRequired(\"venue\"),\n  //   checkbox: isRequired(\"checkbox\"),\n  //   startTime: isRequired(\"date\"),\n  //   endTime: isRequired(\"date\"),\n});\n\nconst TenantSettings = (props) => {\n  const {\n    handleSubmit,\n    pristine,\n    submitting,\n    invalid,\n    selectedValues,\n    reports,\n    closeModal,\n    id,\n  } = props;\n\n  const handleAddReport = () => {\n    console.log(reports);\n    // selectedValues(adjustPrice);\n  };\n  const propertyType = [\n    {\n      label: \"My Buyers\",\n      value: \"1\",\n    },\n    {\n      label: \"Open Buyers\",\n      value: \"2\",\n    },\n    {\n      label: \"Sarah\",\n      value: \"3\",\n    },\n  ];\n\n  const onFormSubmit = async (values) => {\n    console.log(values);\n  };\n\n  useEffect(() => {\n    // initializing data from the useEffect\n    // if (id) {\n    //   getListingReportById()\n    //     .then(({ data }) => {\n    //       console.log(data);\n    //       props.initialize({...data\n    //       });\n    //     })\n    //     .catch(() => {});\n    // }\n  }, []);\n\n  console.log(props);\n  return (\n    <Fragment>\n      <div className=\"settings-modal\">\n        <form className=\"settings-form\" onSubmit={handleSubmit(onFormSubmit)}>\n          <Fragment>\n            <ThemeHeader\n              left={\n                <Fragment>\n                  <h5 className=\"title\">Contact Settings</h5>\n                </Fragment>\n              }\n              right={\n                <Fragment>\n                  <Fragment>\n                    <div className=\"pl-2\">\n                      <ThemeButton onClick={closeModal}>Cancel</ThemeButton>\n                    </div>\n                    <div className=\"pl-2\">\n                      <ThemeButton\n                        type=\"submit\"\n                        disabled={invalid || pristine | submitting}\n                        className=\"theme-button green-button\"\n                      >\n                        Save\n                      </ThemeButton>\n                    </div>\n                  </Fragment>\n                </Fragment>\n              }\n            />\n            <Row>\n              <Col lg={4}>\n                <Item\n                  left=\"Tags\"\n                  noMargin\n                  right={\n                    <Fragment>\n                      <FieldArray name=\"tags\" component={renderFieldList} />\n                    </Fragment>\n                  }\n                />\n              </Col>\n              <Col lg={4}>\n                <Item\n                  left=\"Types\"\n                  noMargin\n                  right={\n                    <Fragment>\n                      <FieldArray name=\"types\" component={renderFieldList} />\n                    </Fragment>\n                  }\n                />\n              </Col>\n              <Col lg={4}>\n                <Item\n                  left=\"Ratings\"\n                  noMargin\n                  right={\n                    <Fragment>\n                      \n                      <FieldArray uniqId={cuid()} name=\"rating\" component={SortableArrayFields} />\n                    </Fragment>\n                  }\n                />\n              </Col>\n            </Row>\n          </Fragment>\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state) => {\n  console.log(state);\n\n  return {\n    initialValues: {},\n  }; // Foram name must have to be different\n};\n\nexport default connect(\n  mapState,\n  null\n)(reduxForm({ form: \"TenantSettings\" })(TenantSettings));\n","/* eslint-disable no-restricted-imports */\nimport React, { useState, Fragment } from \"react\";\nimport { OverlayTrigger, Popover } from \"react-bootstrap\";\nimport * as tenantsRedux from \"../../_redux/tenantsRedux\";\nimport { connect, useDispatch } from \"react-redux\";\nimport * as modalRedux from \"../../../_modal/_redux/modalRedux\";\n\nimport UserPopOver from \"../../../../partials/popover/UserPopOver\";\nimport DynamicTableEdit from \"../../../../partials/table/DynamicTableEdit\";\nimport ContactType from \"../../../../partials/table/cells/ContactType\";\nimport Email from \"../../../../partials/table/cells/Email\";\nimport DefaultModal from \"../../../../partials/modal/DefaultModal\";\nimport ThemeHeader from \"../../../../partials/content/ThemeHeader\";\nimport ThemeButton from \"../../../../partials/button/ThemeButton\";\nimport TableFilter from \"../../../../partials/table/TableFilter\";\nimport LastContact from \"../../../../partials/table/cells/LastContact\";\nimport TenantSettings from \"../../modals/tenantSettings/TenantSettings\";\nimport clsx from \"clsx\";\n\nfunction TenantsTable(props) {\n  console.log();\n  console.log(props);\n  const { tenants, handleChange } = props;\n  const [items, setItems] = useState(tenants.entities);\n\n  const [showSettings, setShowSettings] = useState(false);\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Name\",\n        columns: [\n          {\n            Header: \"Name\",\n            accessor: \"full_name\",\n            Cell: ({\n              cell: { value },\n              cell: {\n                row: { original },\n              },\n              cell: data,\n            }) => (\n              <Fragment>\n                <OverlayTrigger\n                  trigger=\"hover\"\n                  placement=\"right\"\n                  overlay={\n                    <Popover id=\"popover-basic\">\n                      <UserPopOver id={original.id} />\n                    </Popover>\n                  }\n                >\n                  <p className=\"max-content \">{value}</p>\n                </OverlayTrigger>\n              </Fragment>\n            ),\n          },\n          {\n            Header: \"Type\",\n            accessor: \"type\",\n            Cell: ({\n              cell: { value },\n              cell: {\n                row: { original },\n              },\n              cell: data,\n            }) => <ContactType />,\n          },\n          {\n            Header: \"Email\",\n            accessor: \"email\",\n            Cell: ({\n              cell: { value },\n              cell: {\n                row: { original },\n              },\n              cell: data,\n            }) => <Email {...value} />,\n          },\n          {\n            Header: \"Phone\",\n            accessor: \"phone\",\n          },\n          {\n            Header: \"Address\",\n            accessor: \"address\",\n          },\n          {\n            Header: <i className=\"fas fa-users\"></i>,\n            accessor: \"linked_contacts\",\n          },\n          {\n            Header: \"Last Contacted\",\n            accessor: \"last_contact\",\n            Cell: ({ cell: { value } }) => <LastContact {...value} />,\n          },\n        ],\n      },\n    ],\n    []\n  );\n\n  const dispatch = useDispatch();\n\n  console.log(tenants.entities);\n  console.log(items);\n  const fetchMoreData = () => {\n    setTimeout(() => {\n      console.log(\"called\");\n      setItems(tenants.entities.concat(items));\n      // console.log('called')\n    }, 1500);\n  };\n  const rowClick = (info) => {\n    dispatch(\n      modalRedux.actions.openModal(\"TenantProfileModal\", {\n        contactProfileId: info.id,\n      })\n    );\n\n    props.tenantSelected(info.id);\n  };\n\n  const toggleContinuous = () => {\n    props.tenantToggleCont(!tenants.continuousMood);\n  };\n\n  const datas = React.useMemo(() => items, [items]);\n\n  return (\n    <Fragment>\n      {showSettings ? (\n        <DefaultModal\n          size=\"lg\"\n          centered\n          show={showSettings}\n          onHide={() => setShowSettings(false)}\n        >\n          <TenantSettings />\n          {/* <DiaryModal {...modalData} onHide={() => setModalShow(false)} /> */}\n        </DefaultModal>\n      ) : (\n        \"\"\n      )}\n      <ThemeHeader\n        className=\"p-1\"\n        left={\n          <Fragment>\n            <h5 className=\"title\">\n              Active Tenants{\" \"}\n              <ThemeButton onClick={() => setShowSettings(true)} icon>\n                {\" \"}\n                <i class=\"fas fa-cog    \"></i>\n              </ThemeButton>\n            </h5>{\" \"}\n          </Fragment>\n        }\n        right={\n          <Fragment>\n            <div className=\"p-2\">\n              <ThemeButton\n                className={clsx({\n                  \"green-icon-button\": tenants.continuousMood,\n                })}\n                onClick={() => toggleContinuous()}\n                icon\n              >\n                {\" \"}\n                <i class=\"fas fa-infinity    \"></i>\n              </ThemeButton>\n            </div>\n            <div className=\"p-2\">\n              <ThemeButton icon>\n                {\" \"}\n                <i class=\"fas fa-download\"></i>\n              </ThemeButton>\n            </div>\n            <div className=\"p-2\">\n              <ThemeButton icon>\n                {\" \"}\n                <i class=\"fas fa-mobile    \"></i>{\" \"}\n              </ThemeButton>\n            </div>\n            <div className=\"p-2\">\n              <ThemeButton icon>\n                {\" \"}\n                <i class=\"fas fa-envelope\"></i>\n              </ThemeButton>\n            </div>\n\n            <div className=\"p-2\">\n              <TableFilter />\n            </div>\n            <div className=\"p-2\">\n              <ThemeButton\n                onClick={() => handleChange()}\n                className=\"darkGrey-button text-white\"\n              >\n                {\" \"}\n                Filter\n              </ThemeButton>\n            </div>\n            <div className=\"p-2\">\n              <ThemeButton className=\"green-button text-white\">\n                {\" \"}\n                Add Contact\n              </ThemeButton>\n            </div>\n          </Fragment>\n        }\n      />\n\n      <div className=\"dynamic-table\">\n        {datas ? (\n          <DynamicTableEdit\n            handleChange={(e) => console.log(e)}\n            isEditable={true}\n            columns={columns}\n            data={datas}\n            update={fetchMoreData}\n            handleRowClick={rowClick}\n          />\n        ) : (\n          \"loading\"\n        )}\n      </div>\n    </Fragment>\n  );\n}\n\nconst mapStateToProps = ({ tenants }) => ({\n  tenants: tenants,\n});\n\nconst mapDispatchToProps = () => ({\n  fetchtenants: tenantsRedux.actions.tenantsLoading(),\n});\n\n// export default connect(mapStateToProps, tenantsRedux.actions)(TenantsPage);\nexport default React.memo(\n  connect(mapStateToProps, tenantsRedux.actions)(TenantsTable)\n);\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { TextField } from \"@material-ui/core\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as tenants from \"../_redux/tenantsRedux\";\nimport TextInput from \"../../../partials/form/TextInput\";\nimport ToggleButtons from \"../../../partials/form/toggleButtons/ToggleButtons\";\nimport ToggleSwitch from \"../../../partials/form/toggleSwitch/ToggleSwitch\";\nimport MultiSelect from \"../../../partials/form/MultiSelect\";\nimport Location from \"../../../partials/form/Location\";\nimport DateInput from \"../../../partials/form/DateInput\";\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.username) {\n    errors.username = \"Required\";\n  } else if (values.username.length > 15) {\n    errors.username = \"Must be 15 characters or less\";\n  }\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  if (!values.age) {\n    errors.age = \"Required\";\n  } else if (isNaN(Number(values.age))) {\n    errors.age = \"Must be a number\";\n  } else if (Number(values.age) < 18) {\n    errors.age = \"Sorry, you must be at least 18 years old\";\n  }\n  return errors;\n};\nconst myTenantOptions = [\n  {\n    label: 'My Tenants',\n    value: '1',\n  },\n  {\n    label: 'Open Tenants',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst tenantActivityOptions = [\n  {\n    label: 'Active',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst ratingOptions = [\n  {\n    label: 'A',\n    value: '1',\n  },\n  {\n    label: 'AA',\n    value: '2',\n  },\n  {\n    label: 'AAA',\n    value: '3',\n  },\n];\nconst propertyTypeOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst tenantTypeOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst conditionOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst toSellOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst financeStatusOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst selectActionOptions = [\n  {\n    label: 'Erika',\n    value: '1',\n  },\n  {\n    label: 'Julia',\n    value: '2',\n  },\n  {\n    label: 'Sarah',\n    value: '3',\n  },\n];\nconst DrawerForm = (props) => {\n  const { handleSubmit, pristine, reset, submitting } = props;\n  return (\n    <form onSubmit={handleSubmit} className=\"h-75 overflow-auto\">\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" sm={12}>\n          <Field name=\"passions\" placeholder='Select passions' component={MultiSelect} showBottom={false} options={myTenantOptions} defaultValue=\"My Tenants\" />\n        </Col>\n        <Col className=\"pb-1\" sm={12}>\n        <Field name=\"tenantActivityOptions\" placeholder='Select Activity' component={MultiSelect} showBottom={false} options={tenantActivityOptions} />\n        </Col>\n        <Col className=\"pb-1\" sm={12}>\n        <Field name=\"ratingOptions\" placeholder='Select rating' component={MultiSelect} showBottom={false} options={ratingOptions} />\n        </Col>\n        <div className=\"d-flex w-100 pt-2\">\n        <Form.Label className=\"col-7 pl-3\" xs={7}>\n              Include DNC?\n            </Form.Label>\n            <Col xs={5}>\n              <Field\n                name=\"dns\"\n                component={ToggleSwitch}\n              />\n            </Col>\n        </div>\n\n\n\n      </Form.Group>\n\n      <Form.Group as={Row} >\n        <Col className=\"pb-1\" sm={12}>\n          <Field\n            name=\"name\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Contact Name\"\n          />\n        </Col>\n        <Col className=\"pb-1\" sm={12}>\n          <Field\n            name=\"phone\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Phone Number\"\n          />\n        </Col>\n        <Col className=\"pb-1\" sm={12}>\n          <Field\n            name=\"email\"\n            type=\"email\"\n            component={TextInput}\n            placeholder=\"Email Address\"\n          />\n        </Col>\n      </Form.Group>\n      {/*  */}\n\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={6}>\n          <Field\n            name=\"price_from\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Price From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={6}>\n          <Field\n            name=\"price_to\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Price To\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Rating</option>\n            <option value=\"ff0000\">Tenant Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={4}>\n          <Field\n            name=\"bed\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Bed\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={4}>\n          <Field\n            name=\"bath\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Bath\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={4}>\n          <Field\n            name=\"car\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Car\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={8}>\n          <Field\n            name=\"land_size_from\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Land Size From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={4}>\n        <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option value=\"ff0000\">m&#xb2;</option>\n            <option value=\"00ff00\">Open Tenants</option>\n            <option value=\"0000ff\">All</option>\n            <option value=\"0000ff\">Team Name</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={8}>\n          <Field\n            name=\"land_size_to\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Land Size To\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={4}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option value=\"ff0000\">m&#xb2;</option>\n            <option value=\"00ff00\">Open Tenants <div><span>32&nbsp;ft<sup>3</sup></span></div></option>\n            <option value=\"0000ff\">All</option>\n            <option value=\"0000ff\">Team Name</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"locations\"\n            component={Location}\n            placeholder=\"Locations\"\n          />\n        </Col>\n      </Form.Group>\n      {/*  */}\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Tenant Type</option>\n            <option value=\"ff0000\">Tenant Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Condition</option>\n            <option value=\"ff0000\">Tenant Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>To Sell ?</option>\n            <option value=\"ff0000\">Tenant Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Finance Status</option>\n            <option value=\"ff0000\">Tenant Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n      </Form.Group>\n\n      {/*  */}\n\n      {/*  */}\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={12}>\n                      <Field\n            name=\"creationDateFrom\"\n            component={DateInput}\n            timeIntervals={15}\n            // dateFormat=\"dd LLL yyyy h:mm a\"\n            dateFormat=\"MMMM d, yyyy\"\n            placeholder=\"Creation Date From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n        <Field\n            name=\"creationDateTo\"\n            component={DateInput}\n            timeIntervals={15}\n            // dateFormat=\"dd LLL yyyy h:mm a\"\n            dateFormat=\"MMMM d, yyyy\"\n            placeholder=\"Creation Date From\"\n          />\n        </Col>\n      </Form.Group>\n\n      {/*  */}\n\n      {/*  */}\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Last Contacted From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Last Contacted To\"\n          />\n        </Col>\n      </Form.Group>\n\n      {/*  */}\n\n      {/*  */}\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Appointment Date From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Appointment Date To\"\n          />\n        </Col>\n      </Form.Group>\n\n      {/*  */}\n\n      {/*  */}\n      <Form.Group as={Row}>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            name=\"marked\"\n            component={ToggleButtons}\n            labelOne=\"Marked As\"\n            labelTwo=\"Not Marked As\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Select Actions</option>\n            <option value=\"ff0000\">Tenant Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n        <Col className=\"pb-1\" xs={6}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Date From\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={6}>\n          <Field\n            name=\"locations\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Date To\"\n          />\n        </Col>\n        <Col className=\"pb-1\" xs={12}>\n          <Field\n            className=\"form-control mb-1 mb-sm-0\"\n            name=\"maritalStatus\"\n            component=\"select\"\n          >\n            <option>Team</option>\n            <option value=\"ff0000\">Tenant Call</option>\n            <option value=\"00ff00\">Not Available</option>\n          </Field>\n        </Col>\n      </Form.Group>\n\n      {/*  */}\n\n      <div>\n        <Button\n          className=\"filter-button mb-5 mt-5 w-100\"\n          type=\"submit\"\n          disabled={submitting}\n        >\n          Submit\n        </Button>\n        {/* <Button  disabled={pristine || submitting} onClick={reset} variant=\"outline-warning\"> Clear Values</Button> */}\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"tenantsFilterForm\", // a unique identifier for this form\n  initialValues: {\n    passions: [{\n      label: 'My Tenants',\n      value: '1',\n    },],\n    dns: true,\n    marked: \"false\",\n  },\n  validate,\n})(DrawerForm);\n","/* eslint-disable no-restricted-imports */\nimport React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Spinner } from \"react-bootstrap\";\nimport * as tenantsRedux from \"../_redux/tenantsRedux\";\nimport TableWithDrawer from \"../../../partials/layout/pageLayout/TableWithDrawer\";\nimport TenantsTable from \"../partials/tenantsTable/TenantsTable\";\nimport DrawerForm from \"../partials/DrawerForm\";\n\nconst TenantsPage = (props) => {\n  useEffect(() => {\n    console.log(props);\n    if (!props.tenants.entities) {\n      props.tenantsLoading();\n      console.log(props);\n    }\n  }, []);\n\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  // const handleChange = () => {\n  //   setOpen(!open);\n  // };\n  const handleChange = () => {\n    console.log(\"\");\n    setOpen(!open);\n  };\n  const handleSearchChange = (event) => {\n    if (event.target.value.length > 2) {\n      // simulate getting search result\n      setTimeout(() => {}, 500);\n      return;\n    }\n  };\n  const onSubmitDrawerForm = async (value) => {\n    console.log(value);\n    // props.listingsLoading();\n  };\n  return (\n    <Fragment>\n      <TableWithDrawer\n        handleDrawer={open}\n        table={\n          <Fragment>\n            {props.tenants.entities ? (\n              <Fragment>\n                <TenantsTable handleChange={handleChange} />\n              </Fragment>\n            ) : (\n              <Spinner animation=\"grow\" />\n            )}\n          </Fragment>\n        }\n        drawer={\n          <Fragment>\n            <div className=\"container-fluid mt-3\">\n              <DrawerForm onSubmit={onSubmitDrawerForm} />\n            </div>\n          </Fragment>\n        }\n      />\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ tenants }) => ({\n  tenants: tenants,\n});\n\nconst mapDispatchToProps = () => ({\n  fetchtenants: tenantsRedux.actions.tenantsLoading(),\n});\n\n// export default connect(mapStateToProps, tenantsRedux.actions)(TenantsPage);\nexport default React.memo(\n  connect(mapStateToProps, tenantsRedux.actions)(TenantsPage)\n);\n"],"sourceRoot":""}