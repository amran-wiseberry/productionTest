{"version":3,"sources":["app/partials/layout/pageLayout/TableWithDrawer.jsx","app/partials/table/cells/Email.jsx","app/partials/table/cells/LastContact.jsx","app/partials/table/cells/ContactType.jsx","app/modules/contacts/partials/DrawerForm.jsx","app/modules/contacts/modals/contactSettings/ContactSettings.jsx","app/modules/contacts/partials/contactsTable/ContactsTable.jsx","app/modules/contacts/pages/ContactsPage.jsx"],"names":["useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","easeOut","enteringScreen","marginRight","title","flexGrow","hide","drawer","flexShrink","vShow","visibility","vHide","drawerPaper","overflow","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","content","overflowX","breakpoints","down","contentShift","TableWithDrawer","table","handleDrawer","drawerClosed","React","useState","open","setOpen","useEffect","console","log","classes","useTheme","className","clsx","variant","anchor","paper","onClick","direction","Email","props","href","email","isUnsubscribed","LastContact","moment","date","format","flag","background","small","character","ContactType","renderField","input","placeholder","meta","touched","error","warning","Form","Group","Control","isInvalid","Feedback","type","reduxForm","form","validate","values","errors","username","length","test","age","isNaN","Number","handleSubmit","submitting","pristine","reset","onSubmit","Field","name","component","Button","disabled","renderFieldList","fields","edit","id","required","ThemeButton","icon","obj","document","getElementById","value","push","handleAddTags","map","field","index","key","TextInput","remove","class","connect","combineValidators","state","initialValues","invalid","closeModal","selectedValues","reports","onFormSubmit","a","ThemeHeader","left","right","Item","noMargin","FieldArray","memo","contacts","contactsRedux","handleChange","fetchMoreData","showSettings","setShowSettings","columns","useMemo","Header","accessor","Cell","cell","original","row","OverlayTrigger","trigger","placement","overlay","Popover","UserPopOver","data","full_address","dispatch","useDispatch","DefaultModal","size","centered","show","onHide","TableFilter","entities","DynamicTableEdit","e","isEditable","update","handleRowClick","info","modalRedux","openModal","contactProfileId","contactSelected","Skeleton","animation","height","query","URLSearchParams","toString","contactsLoading","onSubmitDrawerForm","otherResInfo","current_page","last_page","page","contactFetchMore"],"mappings":"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","file":"static/js/13.0e78c729.chunk.js","sourcesContent":["/* eslint-disable no-restricted-imports */\nimport React, { Fragment, useEffect, useCallback } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport { Spinner, Row } from \"react-bootstrap\";\n\nconst drawerWidth = 270;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: drawerWidth,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  vShow: {\n    visibility: \"visible\",\n  },\n  vHide: {\n    visibility: \"hidden\",\n  },\n  drawerPaper: {\n    overflow: \"hidden\",\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-start\",\n  },\n  content: {\n      overflowX: 'auto',\n    flexGrow: 1,\n    padding: theme.spacing(1),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -drawerWidth,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginRight: 0,\n      padding: theme.spacing(1),\n    },\n  },\n  contentShift: {\n    overflowX: 'auto',\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: 0,\n  },\n}));\n\nconst TableWithDrawer = ({drawer, table, title , handleDrawer, drawerClosed }) => {\n\n  const [open, setOpen] = React.useState(false);\n\n  useEffect(() => {\n    setOpen(handleDrawer);\n  }, [handleDrawer]);\n\n\n  console.log(\"drawer\");\n  const classes = useStyles();\n  const theme = useTheme();\n\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n    drawerClosed()\n  };\n\n\n  const handleSearchChange = (event) => {\n    if (event.target.value.length > 2) {\n      // simulate getting search result\n      setTimeout(() => {}, 500);\n      return;\n    }\n  };\n\n  return (\n    <Fragment>\n      <Row>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n         {table}\n        </main>\n        <Drawer\n          className={clsx(classes.drawer, {\n            [classes.vHide]: !open,\n            [classes.vShow]: open,\n          })}\n          variant=\"persistent\"\n          anchor=\"right\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"ltr\" ? (\n                <ChevronRightIcon />\n              ) : (\n                <ChevronLeftIcon />\n              )}\n            </IconButton>\n            <div className=\"title\">Filter {title}</div>\n          </div>\n          <Divider />\n          <div className=\"container-fluid mt-3\">\n            {drawer}\n          </div>\n        </Drawer>\n      </Row>\n    </Fragment>\n  );\n};\n\nexport default TableWithDrawer\n","import React, { Fragment } from \"react\";\nimport ThemeButton from \"../../button/ThemeButton\";\n\nexport default function Email(props) {\n    console.log(props)\n  return (\n    <Fragment>\n      <div className=\"d-flex justify-content-between\">\n        <a href={`email:${props.email}`}>\n          {props.email} {console.log(props)}\n        </a>\n        {props.isUnsubscribed ? (\n           <i className=\"fas fa-flag    \"></i>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport moment from \"moment\";\nimport { CharacterCircle } from \"../../component/characterCircle /CharacterCircle\";\n\nexport default function LastContact(props) {\n  return (\n    <Fragment>\n      <div className=\"d-flex justify-content-between\">\n        <div>{moment(props.date).format(\"DD/MM/YYYY\")}</div>\n        \n        <div>\n        {props.flag ? (\n          <CharacterCircle background=\"buyer\" small character=\"A\" />\n        ) : (\n          \"\"\n        )}\n        </div>\n        \n      </div>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { CharacterCircle } from \"../../component/characterCircle /CharacterCircle\";\n\nconst ContactType = () => {\n  return (\n    <Fragment>\n      <div className=\"d-flex justify-content-center\">\n        <CharacterCircle small background=\"buyer\" character=\"B\" />\n        <CharacterCircle small background=\"virtualListing\" character=\"L\" />\n        <CharacterCircle small background=\"tenant\" character=\"P\" />\n        <CharacterCircle small background=\"marketReview\" character=\"S\" />\n        <CharacterCircle small background=\"openHome\" character=\"T\" />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ContactType;\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { TextField } from '@material-ui/core';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as contacts from '../_redux/contactsRedux'\n\n\nconst validate = values => {\n    const errors = {}\n    if (!values.username) {\n      errors.username = 'Required'\n    } else if (values.username.length > 15) {\n      errors.username = 'Must be 15 characters or less'\n    }\n    if (!values.email) {\n      errors.email = 'Required'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = 'Invalid email address'\n    }\n    if (!values.age) {\n      errors.age = 'Required'\n    } else if (isNaN(Number(values.age))) {\n      errors.age = 'Must be a number'\n    } else if (Number(values.age) < 18) {\n      errors.age = 'Sorry, you must be at least 18 years old'\n    }\n    return errors\n  }\n\n\n  const renderField = ({\n    input,\n    placeholder,\n    meta: { touched, error, warning }\n  }) => (\n    <div>\n      <div>\n        {/* <input {...input} placeholder={label} type={type} /> */}\n        <Form.Group>\n        <Form.Control\n        {...input}\n        placeholder={placeholder}\n        isInvalid={touched && error}\n      />\n      {touched &&\n          ((error && <Form.Control.Feedback type=\"invalid\">\n          {error}\n        </Form.Control.Feedback>) ||\n            (warning && <span>{warning}</span>))}\n      \n  </Form.Group>\n\n        \n      </div>\n    </div>\n  )\n\nconst DrawerForm = props => {\n    \n  const { handleSubmit, pristine, reset, submitting } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n\n      <Field  name=\"firstName\" type=\"text\" component={renderField} placeholder=\"FirstName\" />\n      <Field  name=\"lastName\" type=\"text\" component={renderField} placeholder=\"LastName\" />\n      <Field  name=\"phone\" type=\"text\" component={renderField} placeholder=\"Phone\" />\n      <Field  name=\"email\" type=\"email\" component={renderField} placeholder=\"Email\" />\n      <div className=\"row\">\n          <div className=\"col-md-6\">\n          <Field  name=\"unit\" type=\"text\" component={renderField} placeholder=\"Unit\" />\n          </div>\n          <div className=\"col-md-6\">\n          <Field  name=\"house\" type=\"text\" component={renderField} placeholder=\"House\" />\n              </div>\n      </div>\n      <Field  name=\"unit\" type=\"text\" component={renderField} placeholder=\"Unit\" />\n\n      <Field  name=\"street\" type=\"text\" component={renderField} placeholder=\"Street\" />\n      <Field  name=\"company\" type=\"text\" component={renderField} placeholder=\"Company\" />\n      <div>\n        <Button  type=\"submit\"  disabled={submitting} variant=\"primary\">Submit</Button>\n        {/* <Button  disabled={pristine || submitting} onClick={reset} variant=\"outline-warning\"> Clear Values</Button> */}\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: 'contactsFilterForm', // a unique identifier for this form\n  validate,\n\n})(DrawerForm);\n","import React, { useEffect, useState, useCallback, Fragment } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\n// import * as modal from '../_redux/modalRedux'\nimport { makeStyles, Button } from \"@material-ui/core\";\nimport { reduxForm, Field, formValueSelector, FieldArray } from \"redux-form\";\n\nimport {\n  combineValidators,\n  isRequired,\n  composeValidators,\n  hasLengthGreaterThan,\n} from \"revalidate\";\nimport ThemeHeader from \"../../../../partials/content/ThemeHeader\";\nimport ThemeButton from \"../../../../partials/button/ThemeButton\";\nimport Item from \"../../../../partials/display/Item\";\nimport TextInput from \"../../../../partials/form/TextInput\";\n\nconst renderFieldList = ({ fields, edit }) => {\n  const handleAddTags = () => {\n    let obj = {};\n    obj = document.getElementById(\"contactTag\")?.value;\n\n    fields.push(obj);\n  };\n\n  return (\n    <Fragment>\n      <div className=\"d-flex pb-2\">\n        <input\n          type=\"text\"\n          id=\"contactTag\"\n          className=\"  form-control fix-rounded-right\"\n          required\n        />\n        <ThemeButton icon onClick={() => handleAddTags()}>\n          <i className=\"fas fa-plus-circle\"></i>\n        </ThemeButton>\n      </div>\n      {fields.map((field, index) => (\n        <Fragment>\n          <div className=\"d-flex pb-2\" key={index} >\n            <Field name={field} component={TextInput} edit={edit} />\n            <ThemeButton icon onClick={() => fields.remove(index)}>\n              <i class=\"fas fa-minus-circle    \"></i>\n            </ThemeButton>\n          </div>\n        </Fragment>\n      ))}\n    </Fragment>\n  );\n};\n\nconst validate = combineValidators({\n  //   price_from: isRequired({ message: \"The event title is required\" }),\n  //   price_to: isRequired({ message: \"The category is required\" }),\n  //   reason: composeValidators(\n  //     isRequired({ message: \"Please enter a description\" }),\n  //     hasLengthGreaterThan(4)({\n  //       message: \"Description needs to be at least 5 characters\",\n  //     })\n  //   )(),\n  //   price_view: isRequired(\"city\"),\n  //   venue: isRequired(\"venue\"),\n  //   checkbox: isRequired(\"checkbox\"),\n  //   startTime: isRequired(\"date\"),\n  //   endTime: isRequired(\"date\"),\n});\n\nconst ContactSettings = (props) => {\n  const {\n    handleSubmit,\n    pristine,\n    submitting,\n    invalid,\n    selectedValues,\n    reports,\n    closeModal,\n    id,\n  } = props;\n\n  const handleAddReport = () => {\n    console.log(reports);\n    // selectedValues(adjustPrice);\n  };\n  const propertyType = [\n    {\n      label: \"My Buyers\",\n      value: \"1\",\n    },\n    {\n      label: \"Open Buyers\",\n      value: \"2\",\n    },\n    {\n      label: \"Sarah\",\n      value: \"3\",\n    },\n  ];\n\n  const onFormSubmit = async (values) => {\n    console.log(values);\n  };\n\n  useEffect(() => {\n    // initializing data from the useEffect\n    // if (id) {\n    //   getListingReportById()\n    //     .then(({ data }) => {\n    //       console.log(data);\n    //       props.initialize({...data\n    //       });\n    //     })\n    //     .catch(() => {});\n    // }\n  }, []);\n\n  console.log(props);\n  return (\n    <Fragment>\n      <div className=\"settings-modal\">\n        <form className=\"settings-form\" onSubmit={handleSubmit(onFormSubmit)}>\n          <Fragment>\n            <ThemeHeader\n              left={\n                <Fragment>\n                  <h5 className=\"title\">Contact Settings</h5>\n                </Fragment>\n              }\n              right={\n                <Fragment>\n                  <Fragment>\n                    <div className=\"pl-2\">\n                      <ThemeButton onClick={closeModal}>Cancel</ThemeButton>\n                    </div>\n                    <div className=\"pl-2\">\n                      <ThemeButton\n                        type=\"submit\"\n                        disabled={invalid || pristine | submitting}\n                        className=\"theme-button green-button\"\n                      >\n                        Save\n                      </ThemeButton>\n                    </div>\n                  </Fragment>\n                </Fragment>\n              }\n            />\n            <Item\n              left=\"Tags\"\n              noMargin\n              right={\n                <Fragment>\n                  <FieldArray name=\"tags\" component={renderFieldList} />\n                </Fragment>\n              }\n            />\n          </Fragment>\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state) => {\n  console.log(state);\n\n  return {\n    initialValues: {},\n  }; // Foram name must have to be different\n};\n\nexport default connect(\n  mapState,\n  null\n)(reduxForm({ form: \"ContactSettings\" })(ContactSettings));\n","/* eslint-disable no-restricted-imports */\nimport React, { useState, Fragment, useEffect } from \"react\";\nimport { OverlayTrigger, Popover } from \"react-bootstrap\";\nimport UserPopOver from \"../../../../partials/popover/UserPopOver\";\nimport * as contactsRedux from \"../../_redux/contactsRedux\";\nimport moment from \"moment\";\nimport { connect, useDispatch } from \"react-redux\";\nimport * as modalRedux from \"../../../_modal/_redux/modalRedux\";\nimport ThemeHeader from \"../../../../partials/content/ThemeHeader\";\nimport ThemeButton from \"../../../../partials/button/ThemeButton\";\nimport DynamicTableEdit from \"../../../../partials/table/DynamicTableEdit\";\nimport TableFilter from \"../../../../partials/table/TableFilter\";\nimport Email from \"../../../../partials/table/cells/Email\";\nimport LastContact from \"../../../../partials/table/cells/LastContact\";\nimport ContactType from \"../../../../partials/table/cells/ContactType\";\nimport DefaultModal from \"../../../../partials/modal/DefaultModal\";\nimport ContactSettings from \"../../modals/contactSettings/ContactSettings\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nfunction ContactsTable(props) {\n\n  const { contacts, handleChange ,fetchMoreData} = props;\n  // const [items, setItems] = useState(contacts.entities);\n\n  const [showSettings, setShowSettings] = useState(false);\n\n\n\n  \n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Name\",\n        columns: [\n          {\n            Header: \"Name\",\n            accessor: \"name\",\n            Cell: ({\n              cell: { value },\n              cell: {\n                row: { original },\n              },\n              cell: data,\n            }) => (\n              <Fragment>\n                <OverlayTrigger\n                  trigger=\"hover\"\n                  placement=\"right\"\n                  overlay={\n                    <Popover id=\"popover-basic\">\n                      <UserPopOver data={original} />\n                    </Popover>\n                  }\n                >\n                 <p className=\"max-content \"> \n                  {value} \n                </p>\n                </OverlayTrigger>\n              </Fragment>\n            ),\n          },\n          {\n            Header: \"Type\",\n            accessor: \"type\",\n            Cell: ({\n              cell: { value },\n              cell: {\n                row: { original },\n              },\n              cell: data,\n            }) => (<ContactType/>),\n          },\n          {\n            Header: \"Email\",\n            accessor: \"emails\",\n            Cell: ({\n              cell: { value },\n              cell: {\n                row: { original },\n              },\n              cell: data,\n            }) => (\n              <p>{value ? value[0]?.value : ''}</p> \n            ),\n          },\n          {\n            Header: \"Phone\",\n            accessor: \"phones\",\n            Cell: ({\n              cell: { value },\n              cell: {\n                row: { original },\n              },\n              cell: data,\n            }) => <p>{value ? value[0]?.value : ''}</p>,\n          },\n          {\n            Header: \"Address\",\n            accessor: \"addresses\",\n            Cell: ({\n              cell: { value },\n              cell: {\n                row: { original },\n              },\n              cell: data,\n            }) => <p>{value ? value[0]?.full_address : ''}</p>,\n          },\n          {\n            Header: <i className=\"fas fa-users\"></i>,\n            accessor: \"linked_contacts\",\n          },\n          {\n            Header: \"Last Contacted\",\n            accessor: \"last_contacted_date\",\n            Cell: ({ cell: { value } }) => ( <p>{value ? moment(value).format(\"DD/MM/YYYY\") : ''}</p>),\n          },\n        ],\n      },\n    ],\n    []\n  );\n\n  const dispatch = useDispatch();\n\n  console.log(contacts);\n\n  const rowClick = (info) => {\n    dispatch(\n      modalRedux.actions.openModal(\"ContactProfileModal\", {\n        contactProfileId: info.id,\n      })\n    );\n    props.contactSelected(info.id);\n  };\n\n\n  return (\n    <Fragment>\n            {showSettings ? (\n        <DefaultModal\n          size=\"lg\"\n          centered\n          show={showSettings}\n          onHide={() => setShowSettings(false)}\n        >\n          <ContactSettings />\n          {/* <DiaryModal {...modalData} onHide={() => setModalShow(false)} /> */}\n        </DefaultModal>\n      ) : (\n        \"\"\n      )}\n      <ThemeHeader\n      className=\"p-1\"\n        left={\n          <Fragment>\n            <h5 className=\"title\">Contacts <ThemeButton onClick={()=> setShowSettings(true)} icon>\n              {\" \"}\n              <i class=\"fas fa-cog    \"></i>\n            </ThemeButton></h5>{\" \"}\n            \n          </Fragment>\n        }\n        right={\n          <Fragment>\n            <div className=\"p-2\">\n              <ThemeButton icon>\n                {\" \"}\n                <i class=\"fas fa-download\"></i>\n              </ThemeButton>\n            </div>\n            <div className=\"p-2\">\n              <ThemeButton icon>\n                {\" \"}\n                <i class=\"fas fa-mobile    \"></i>{\" \"}\n              </ThemeButton>\n            </div>\n            <div className=\"p-2\">\n              <ThemeButton icon>\n                {\" \"}\n                <i class=\"fas fa-envelope\"></i>\n              </ThemeButton>\n            </div>\n\n            <div className=\"p-2\">\n              <TableFilter />\n            </div>\n            <div className=\"p-2\">\n              <ThemeButton onClick={()=> handleChange()} className=\"darkGrey-button text-white\">\n                {\" \"}\n                Filter\n              </ThemeButton>\n            </div>\n            <div className=\"p-2\">\n              <ThemeButton className=\"green-button text-white\">\n                {\" \"}\n                Add Contact\n              </ThemeButton>\n            </div>\n          </Fragment>\n        }\n      />\n\n      <div className=\"dynamic-table\">\n        {contacts.entities ? (\n          <DynamicTableEdit\n            handleChange={(e) => console.log(e)}\n            isEditable={true}\n            columns={columns}\n            data={contacts.entities}\n            update={fetchMoreData}\n            handleRowClick={rowClick}\n          />\n        ) : (\n          <div>\n              <Skeleton animation=\"wave\" variant=\"text\" />\n              <Skeleton animation=\"wave\" variant=\"text\" />\n               <Skeleton animation=\"wave\" variant=\"rect\" width=\"100%\" height=\"77vh\" />\n            </div>\n        )}\n\n      </div>\n    </Fragment>\n  );\n}\n\nconst mapStateToProps = ({contacts}) => ({\n  contacts: contacts,\n});\n\nconst mapDispatchToProps = () => ({\n  // fetchcontacts: contactsRedux.actions.contactsLoading(),\n});\n\nexport default React.memo(\n  connect(mapStateToProps, contactsRedux.actions)(ContactsTable)\n);\n","/* eslint-disable no-restricted-imports */\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Spinner, Row } from \"react-bootstrap\";\nimport * as contactsRedux from \"../_redux/contactsRedux\";\nimport \"./_contacts.scss\";\nimport DrawerForm from \"../partials/DrawerForm\";\nimport ContactsTable from \"../partials/contactsTable/ContactsTable\";\nimport TableWithDrawer from \"../../../partials/layout/pageLayout/TableWithDrawer\";\nimport { getAllContacts } from \"../crud/contactsCrud\";\nimport { toast } from \"react-toastify\";\n\nconst ContactsPage = (props) => {\n const {contacts} = props;\n  const [items, setItems] = useState(null);\n  const [entities, setEntities] = useState(null);\n  const [info, setInfo] = useState();\n\n  // useEffect(() => {\n  //   console.log(props);\n  //   if (!props.contacts.entities) {\n  //     props.contactsLoading();\n  //     console.log(props);\n  //   }\n  // }, []);\n\n  useEffect(() => {\n  \n    let query = {};\n    query.organisation = 4;\n    console.log(new URLSearchParams(query).toString())\n    props.contactsLoading(new URLSearchParams(query).toString()); \n  }, []);\n\n  const update = (page) => {\n    getAllContacts()\n      .then((res) => {\n       props.contactsLoading(res.data);  \n      })\n      .catch((e) => {\n        toast.success('Error while fetching');\n      });\n  }\n\n\n    const fetchMoreData = () => {\n      console.log('fetched called')\n      if(contacts.otherResInfo.current_page !== contacts.otherResInfo.last_page)\n      {\n        let query = {};\n        query.organisation = 4;\n        query.page = contacts.otherResInfo.current_page+ 1;\n        console.log(new URLSearchParams(query).toString());\n        props.contactFetchMore(new URLSearchParams(query).toString()); \n      }\n  };\n\n  console.log(\"drawer\");\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const handleChange = () => {\n    console.log(\"\");\n    setOpen(!open);\n  };\n\n  const handleSearchChange = (event) => {\n    if (event.target.value.length > 2) {\n      // simulate getting search result\n      setTimeout(() => {}, 500);\n      return;\n    }\n  };\n  const onSubmitDrawerForm = async (value) => {\n    console.log(value);\n    // props.listingsLoading();\n  };\n  return (\n    <Fragment>\n      <TableWithDrawer\n      handleDrawer={open}\n        table={\n          <Fragment>\n            {/* {entities ? ( */}\n              <Fragment>\n                <ContactsTable fetchMoreData={fetchMoreData}  handleChange={handleChange} />\n              </Fragment>\n            {/* ) : (\n              <Spinner animation=\"grow\" />\n            )} */}\n          </Fragment>\n        }\n\n        drawer={<Fragment>\n           <DrawerForm onSubmit={onSubmitDrawerForm} />\n        </Fragment>}\n      />\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ contacts }) => ({\n  contacts: contacts,\n});\n\nconst mapDispatchToProps = () => ({\n  contactsLoading: contactsRedux.actions.contactsLoading(),\n});\n\nexport default connect(mapStateToProps, contactsRedux.actions)(ContactsPage);\n"],"sourceRoot":""}